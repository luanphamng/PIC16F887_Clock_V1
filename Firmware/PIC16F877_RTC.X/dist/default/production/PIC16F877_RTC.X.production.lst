

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Sep  8 17:08:12 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 1.43
    27                           ; Generated 25/07/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372                           
   373                           	psect	idataBANK0
   374  058C                     __pidataBANK0:	
   375                           
   376                           ;initializer for _ucBCD_ARR
   377  058C  34FC               	retlw	252
   378  058D  3460               	retlw	96
   379  058E  34DA               	retlw	218
   380  058F  34F2               	retlw	242
   381  0590  3466               	retlw	102
   382  0591  34B6               	retlw	182
   383  0592  34BE               	retlw	190
   384  0593  34E0               	retlw	224
   385  0594  34FE               	retlw	254
   386  0595  34F6               	retlw	246
   387  0013                     _SSPBUF	set	19
   388  0014                     _SSPCON	set	20
   389  0007                     _PORTCbits	set	7
   390  0008                     _PORTD	set	8
   391  0006                     _PORTBbits	set	6
   392  0006                     _PORTB	set	6
   393  0093                     _SSPADD	set	147
   394  0094                     _SSPSTAT	set	148
   395  0096                     _IOCB	set	150
   396  0081                     _OPTION_REGbits	set	129
   397  0095                     _WPUBbits	set	149
   398  0089                     _TRISEbits	set	137
   399  0086                     _TRISBbits	set	134
   400  0088                     _TRISD	set	136
   401  0087                     _TRISCbits	set	135
   402  048C                     _ACKEN	set	1164
   403  048D                     _ACKDT	set	1165
   404  04A2                     _R_W	set	1186
   405  048B                     _RCEN	set	1163
   406  04A0                     _BF	set	1184
   407  048A                     _PEN	set	1162
   408  0488                     _SEN	set	1160
   409  043C                     _TRISC4	set	1084
   410  043B                     _TRISC3	set	1083
   411  0489                     _RSEN	set	1161
   412  0188                     _ANSELbits	set	392
   413  0189                     _ANSELHbits	set	393
   414                           
   415                           ; #config settings
   416  0000                     
   417                           	psect	cinit
   418  07F0                     start_initialization:	
   419  07F0                     __initialization:	
   420                           
   421                           ; Initialize objects allocated to BANK0
   422  07F0  1383               	bcf	3,7	;select IRP bank0
   423  07F1  3039               	movlw	low (__pdataBANK0+10)
   424  07F2  00FD               	movwf	btemp+-1
   425  07F3  3005               	movlw	high __pidataBANK0
   426  07F4  00FE               	movwf	btemp
   427  07F5  308C               	movlw	low __pidataBANK0
   428  07F6  00FF               	movwf	btemp+1
   429  07F7  302F               	movlw	low __pdataBANK0
   430  07F8  0084               	movwf	4
   431  07F9  120A  118A  25CB   	fcall	init_ram0
   432  07FC                     end_of_initialization:	
   433                           ;End of C runtime variable initialization code
   434                           
   435  07FC                     __end_of__initialization:	
   436  07FC  0183               	clrf	3
   437  07FD  120A  118A  2F05   	ljmp	_main	;jump to C main() function
   438                           
   439                           	psect	dataBANK0
   440  002F                     __pdataBANK0:	
   441  002F                     _ucBCD_ARR:	
   442  002F                     	ds	10
   443                           
   444                           	psect	inittext
   445  05C7                     init_fetch0:	
   446                           ;	Called with low address in FSR and high address in W
   447                           
   448  05C7  087E               	movf	126,w
   449  05C8  008A               	movwf	10
   450  05C9  087F               	movf	127,w
   451  05CA  0082               	movwf	2
   452  05CB                     init_ram0:	
   453                           ;Called with:
   454                           ;	high address of idata address in btemp 
   455                           ;	low address of idata address in btemp+1 
   456                           ;	low address of data in FSR
   457                           ;	high address + 1 of data in btemp-1
   458                           
   459  05CB  25C7  120A  118A   	fcall	init_fetch0
   460  05CE  0080               	movwf	0
   461  05CF  0A84               	incf	4,f
   462  05D0  0804               	movf	4,w
   463  05D1  067D               	xorwf	125,w
   464  05D2  1903               	btfsc	3,2
   465  05D3  3400               	retlw	0
   466  05D4  0AFF               	incf	127,f
   467  05D5  1903               	btfsc	3,2
   468  05D6  0AFE               	incf	126,f
   469  05D7  2DCB               	goto	init_ram0
   470                           
   471                           	psect	cstackCOMMON
   472  0070                     __pcstackCOMMON:	
   473  0070                     ?_RTC_Init:	
   474  0070                     ?_RTC_SetDateTime:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_RTC_GetDateTime:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_DELAY_us:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_i2c_WaitForIdle:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ??_i2c_WaitForIdle:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_i2c_Ack:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ??_i2c_Ack:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_i2c_NoAck:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ??_i2c_NoAck:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_I2C_Init:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ??_I2C_Init:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_I2C_Start:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_I2C_Start:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_I2C_Stop:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ??_I2C_Stop:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_I2C_Write:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_I2C_Write:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_I2C_Read:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ??_I2C_Read:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_main:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     I2C_Write@v_i2cData_u8:	
   535                           ; 2 bytes @ 0x0
   536                           
   537  0070                     DELAY_us@us_count:	
   538                           ; 1 bytes @ 0x0
   539                           
   540                           
   541                           ; 2 bytes @ 0x0
   542  0070                     	ds	1
   543  0071                     ??_RTC_Init:	
   544  0071                     ??_RTC_SetDateTime:	
   545                           ; 1 bytes @ 0x1
   546                           
   547  0071                     I2C_Read@v_ackOption_u8:	
   548                           ; 1 bytes @ 0x1
   549                           
   550  0071                     RTC_SetDateTime@rtc:	
   551                           ; 1 bytes @ 0x1
   552                           
   553                           
   554                           ; 1 bytes @ 0x1
   555  0071                     	ds	1
   556  0072                     ?_DELAY_ms:	
   557  0072                     ??_DELAY_us:	
   558                           ; 1 bytes @ 0x2
   559                           
   560  0072                     I2C_Read@v_i2cData_u8:	
   561                           ; 1 bytes @ 0x2
   562                           
   563  0072                     DELAY_ms@ms_count:	
   564                           ; 1 bytes @ 0x2
   565                           
   566                           
   567                           ; 2 bytes @ 0x2
   568  0072                     	ds	1
   569  0073                     ??_RTC_GetDateTime:	
   570                           
   571                           ; 1 bytes @ 0x3
   572  0073                     	ds	1
   573  0074                     ??_DELAY_ms:	
   574  0074                     RTC_GetDateTime@rtc:	
   575                           ; 1 bytes @ 0x4
   576                           
   577                           
   578                           ; 1 bytes @ 0x4
   579  0074                     	ds	1
   580  0075                     ??_main:	
   581                           
   582                           ; 1 bytes @ 0x5
   583  0075                     	ds	1
   584                           
   585                           	psect	cstackBANK0
   586  0020                     __pcstackBANK0:	
   587  0020                     main@ucSetData:	
   588                           
   589                           ; 1 bytes @ 0x0
   590  0020                     	ds	1
   591  0021                     main@ucSetCnt:	
   592                           
   593                           ; 1 bytes @ 0x1
   594  0021                     	ds	1
   595  0022                     main@ucHours:	
   596                           
   597                           ; 1 bytes @ 0x2
   598  0022                     	ds	1
   599  0023                     main@ucDate:	
   600                           
   601                           ; 1 bytes @ 0x3
   602  0023                     	ds	1
   603  0024                     main@ucMonth:	
   604                           
   605                           ; 1 bytes @ 0x4
   606  0024                     	ds	1
   607  0025                     main@ucYear:	
   608                           
   609                           ; 1 bytes @ 0x5
   610  0025                     	ds	1
   611  0026                     main@ucSec:	
   612                           
   613                           ; 1 bytes @ 0x6
   614  0026                     	ds	1
   615  0027                     main@ucMin:	
   616                           
   617                           ; 1 bytes @ 0x7
   618  0027                     	ds	1
   619  0028                     main@rtc:	
   620                           
   621                           ; 7 bytes @ 0x8
   622  0028                     	ds	7
   623                           
   624                           	psect	maintext
   625  0705                     __pmaintext:	
   626 ;;
   627 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   628 ;;
   629 ;; *************** function _main *****************
   630 ;; Defined at:
   631 ;;		line 50 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  rtc             7    8[BANK0 ] struct .
   636 ;;  ucMin           1    7[BANK0 ] unsigned char 
   637 ;;  ucSec           1    6[BANK0 ] unsigned char 
   638 ;;  ucYear          1    5[BANK0 ] unsigned char 
   639 ;;  ucMonth         1    4[BANK0 ] unsigned char 
   640 ;;  ucDate          1    3[BANK0 ] unsigned char 
   641 ;;  ucHours         1    2[BANK0 ] unsigned char 
   642 ;;  ucSetCnt        1    1[BANK0 ] unsigned char 
   643 ;;  ucSetData       1    0[BANK0 ] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  2   44[None  ] int 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : B00/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0      15       0       0       0
   655 ;;      Temps:          1       0       0       0       0
   656 ;;      Totals:         1      15       0       0       0
   657 ;;Total ram usage:       16 bytes
   658 ;; Hardware stack levels required when called:    3
   659 ;; This function calls:
   660 ;;		_DELAY_ms
   661 ;;		_RTC_GetDateTime
   662 ;;		_RTC_Init
   663 ;;		_RTC_SetDateTime
   664 ;; This function is called by:
   665 ;;		Startup code after reset
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _main
   671  0705                     _main:	
   672                           
   673                           ;main.c: 54: TRISCbits.TRISC5 = 0;
   674                           
   675                           ;incstack = 0
   676                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   677  0705  1683               	bsf	3,5	;RP0=1, select bank1
   678  0706  1303               	bcf	3,6	;RP1=0, select bank1
   679  0707  1287               	bcf	7,5	;volatile
   680                           
   681                           ;main.c: 55: TRISCbits.TRISC6 = 0;
   682  0708  1307               	bcf	7,6	;volatile
   683                           
   684                           ;main.c: 56: TRISCbits.TRISC7 = 0;
   685  0709  1387               	bcf	7,7	;volatile
   686                           
   687                           ;main.c: 58: TRISD = 0x00;
   688  070A  0188               	clrf	8	;volatile
   689                           
   690                           ;main.c: 60: TRISBbits.TRISB0 = 1;
   691  070B  1406               	bsf	6,0	;volatile
   692                           
   693                           ;main.c: 61: TRISBbits.TRISB1 = 1;
   694  070C  1486               	bsf	6,1	;volatile
   695                           
   696                           ;main.c: 62: TRISBbits.TRISB2 = 0;
   697  070D  1106               	bcf	6,2	;volatile
   698                           
   699                           ;main.c: 63: TRISBbits.TRISB3 = 0;
   700  070E  1186               	bcf	6,3	;volatile
   701                           
   702                           ;main.c: 64: TRISBbits.TRISB4 = 0;
   703  070F  1206               	bcf	6,4	;volatile
   704                           
   705                           ;main.c: 65: TRISBbits.TRISB5 = 0;
   706  0710  1286               	bcf	6,5	;volatile
   707                           
   708                           ;main.c: 67: TRISBbits.TRISB7 = 0;
   709  0711  1386               	bcf	6,7	;volatile
   710                           
   711                           ;main.c: 69: TRISEbits.TRISE0 = 0;
   712  0712  1009               	bcf	9,0	;volatile
   713                           
   714                           ;main.c: 71: WPUBbits.WPUB0 = 1;
   715  0713  1415               	bsf	21,0	;volatile
   716                           
   717                           ;main.c: 72: WPUBbits.WPUB1 = 1;
   718  0714  1495               	bsf	21,1	;volatile
   719                           
   720                           ;main.c: 73: WPUBbits.WPUB2 = 1;
   721  0715  1515               	bsf	21,2	;volatile
   722                           
   723                           ;main.c: 74: OPTION_REGbits.nRBPU = 0;
   724  0716  1381               	bcf	1,7	;volatile
   725                           
   726                           ;main.c: 76: ANSELHbits.ANS12 = 0;
   727  0717  1683               	bsf	3,5	;RP0=1, select bank3
   728  0718  1703               	bsf	3,6	;RP1=1, select bank3
   729  0719  1209               	bcf	9,4	;volatile
   730                           
   731                           ;main.c: 77: ANSELHbits.ANS10 = 0;
   732  071A  1109               	bcf	9,2	;volatile
   733                           
   734                           ;main.c: 78: ANSELHbits.ANS13 = 0;
   735  071B  1289               	bcf	9,5	;volatile
   736                           
   737                           ;main.c: 79: ANSELHbits.ANS11 = 0;
   738  071C  1189               	bcf	9,3	;volatile
   739                           
   740                           ;main.c: 80: ANSELHbits.ANS9 = 0;
   741  071D  1089               	bcf	9,1	;volatile
   742                           
   743                           ;main.c: 81: ANSELHbits.ANS8 = 0;
   744  071E  1009               	bcf	9,0	;volatile
   745                           
   746                           ;main.c: 82: ANSELbits.ANS5 = 0;
   747  071F  1288               	bcf	8,5	;volatile
   748                           
   749                           ;main.c: 84: IOCB = 0x00;
   750  0720  1683               	bsf	3,5	;RP0=1, select bank1
   751  0721  1303               	bcf	3,6	;RP1=0, select bank1
   752  0722  0196               	clrf	22	;volatile
   753                           
   754                           ;main.c: 86: PORTB = 0xFF;
   755  0723  30FF               	movlw	255
   756  0724  1283               	bcf	3,5	;RP0=0, select bank0
   757  0725  1303               	bcf	3,6	;RP1=0, select bank0
   758  0726  0086               	movwf	6	;volatile
   759                           
   760                           ;main.c: 89: uint8_t ucSec;
   761                           ;main.c: 90: uint8_t ucMin;
   762                           ;main.c: 91: uint8_t ucHours;
   763                           ;main.c: 92: uint8_t ucDate;
   764                           ;main.c: 93: uint8_t ucMonth;
   765                           ;main.c: 94: uint8_t ucYear;
   766                           ;main.c: 96: uint8_t ucSetData;
   767                           ;main.c: 97: uint8_t ucSetCnt;
   768                           ;main.c: 102: rtc_t rtc;
   769                           ;main.c: 106: ucSec = 0;
   770  0727  01A6               	clrf	main@ucSec
   771                           
   772                           ;main.c: 107: ucMin = 0;
   773  0728  01A7               	clrf	main@ucMin
   774                           
   775                           ;main.c: 108: ucHours = 0;
   776  0729  01A2               	clrf	main@ucHours
   777                           
   778                           ;main.c: 109: ucDate = 0;
   779  072A  01A3               	clrf	main@ucDate
   780                           
   781                           ;main.c: 110: ucMonth = 0;
   782  072B  01A4               	clrf	main@ucMonth
   783                           
   784                           ;main.c: 111: ucYear = 0;
   785  072C  01A5               	clrf	main@ucYear
   786                           
   787                           ;main.c: 113: ucSetData = 0;
   788  072D  01A0               	clrf	main@ucSetData
   789                           
   790                           ;main.c: 114: ucSetCnt = 0;
   791  072E  01A1               	clrf	main@ucSetCnt
   792                           
   793                           ;main.c: 118: RTC_Init();
   794  072F  120A  118A  260C  120A  118A  	fcall	_RTC_Init
   795                           
   796                           ;main.c: 122: rtc.hour = 0x00;
   797  0734  1283               	bcf	3,5	;RP0=0, select bank0
   798  0735  1303               	bcf	3,6	;RP1=0, select bank0
   799  0736  01AA               	clrf	main@rtc+2
   800                           
   801                           ;main.c: 123: rtc.min = 0x08;
   802  0737  3008               	movlw	8
   803  0738  00F5               	movwf	??_main
   804  0739  0875               	movf	??_main,w
   805  073A  00A9               	movwf	main@rtc+1
   806                           
   807                           ;main.c: 124: rtc.sec = 0x30;
   808  073B  3030               	movlw	48
   809  073C  00F5               	movwf	??_main
   810  073D  0875               	movf	??_main,w
   811  073E  00A8               	movwf	main@rtc
   812                           
   813                           ;main.c: 126: rtc.date = 0x31;
   814  073F  3031               	movlw	49
   815  0740  00F5               	movwf	??_main
   816  0741  0875               	movf	??_main,w
   817  0742  00AC               	movwf	main@rtc+4
   818                           
   819                           ;main.c: 127: rtc.month = 0x12;
   820  0743  3012               	movlw	18
   821  0744  00F5               	movwf	??_main
   822  0745  0875               	movf	??_main,w
   823  0746  00AD               	movwf	main@rtc+5
   824                           
   825                           ;main.c: 128: rtc.year = 0x16;
   826  0747  3016               	movlw	22
   827  0748  00F5               	movwf	??_main
   828  0749  0875               	movf	??_main,w
   829  074A  00AE               	movwf	main@rtc+6
   830                           
   831                           ;main.c: 129: rtc.weekDay = 5;
   832  074B  3005               	movlw	5
   833  074C  00F5               	movwf	??_main
   834  074D  0875               	movf	??_main,w
   835  074E  00AB               	movwf	main@rtc+3
   836                           
   837                           ;main.c: 134: RTC_SetDateTime(&rtc);
   838  074F  3028               	movlw	(low (main@rtc| 0))& (0+255)
   839  0750  120A  118A  262C  120A  118A  	fcall	_RTC_SetDateTime
   840                           
   841                           ;main.c: 137: PORTBbits.RB5 = 1;
   842  0755  1283               	bcf	3,5	;RP0=0, select bank0
   843  0756  1303               	bcf	3,6	;RP1=0, select bank0
   844  0757  1686               	bsf	6,5	;volatile
   845                           
   846                           ;main.c: 138: PORTBbits.RB4 = 1;
   847  0758  1606               	bsf	6,4	;volatile
   848  0759                     l1156:	
   849                           ;main.c: 139: while(1)
   850                           
   851                           
   852                           ;main.c: 140: {
   853                           ;main.c: 142: RTC_GetDateTime(&rtc);
   854  0759  3028               	movlw	(low (main@rtc| 0))& (0+255)
   855  075A  120A  118A  2686  120A  118A  	fcall	_RTC_GetDateTime
   856                           
   857                           ;main.c: 143: ucSec = rtc.sec;
   858  075F  1283               	bcf	3,5	;RP0=0, select bank0
   859  0760  1303               	bcf	3,6	;RP1=0, select bank0
   860  0761  0828               	movf	main@rtc,w
   861  0762  00F5               	movwf	??_main
   862  0763  0875               	movf	??_main,w
   863  0764  00A6               	movwf	main@ucSec
   864                           
   865                           ;main.c: 144: ucMin = rtc.min;
   866  0765  0829               	movf	main@rtc+1,w
   867  0766  00F5               	movwf	??_main
   868  0767  0875               	movf	??_main,w
   869  0768  00A7               	movwf	main@ucMin
   870                           
   871                           ;main.c: 145: ucHours = rtc.hour;
   872  0769  082A               	movf	main@rtc+2,w
   873  076A  00F5               	movwf	??_main
   874  076B  0875               	movf	??_main,w
   875  076C  00A2               	movwf	main@ucHours
   876                           
   877                           ;main.c: 146: ucDate = rtc.date;
   878  076D  082C               	movf	main@rtc+4,w
   879  076E  00F5               	movwf	??_main
   880  076F  0875               	movf	??_main,w
   881  0770  00A3               	movwf	main@ucDate
   882                           
   883                           ;main.c: 147: ucMonth = rtc.month;
   884  0771  082D               	movf	main@rtc+5,w
   885  0772  00F5               	movwf	??_main
   886  0773  0875               	movf	??_main,w
   887  0774  00A4               	movwf	main@ucMonth
   888                           
   889                           ;main.c: 148: ucYear = rtc.year;
   890  0775  082E               	movf	main@rtc+6,w
   891  0776  00F5               	movwf	??_main
   892  0777  0875               	movf	??_main,w
   893  0778  00A5               	movwf	main@ucYear
   894                           
   895                           ;main.c: 153: PORTD = ucBCD_ARR[ucSec&0x0F];
   896  0779  0826               	movf	main@ucSec,w
   897  077A  390F               	andlw	15
   898  077B  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
   899  077C  0084               	movwf	4
   900  077D  1383               	bcf	3,7	;select IRP bank0
   901  077E  0800               	movf	0,w
   902  077F  0088               	movwf	8	;volatile
   903                           
   904                           ;main.c: 154: PORTB |= 0x3C;
   905  0780  303C               	movlw	60
   906  0781  00F5               	movwf	??_main
   907  0782  0875               	movf	??_main,w
   908  0783  0486               	iorwf	6,f	;volatile
   909                           
   910                           ;main.c: 155: PORTB &= 0xDF;
   911  0784  30DF               	movlw	223
   912  0785  00F5               	movwf	??_main
   913  0786  0875               	movf	??_main,w
   914  0787  0586               	andwf	6,f	;volatile
   915                           
   916                           ;main.c: 156: DELAY_ms(5);
   917  0788  3005               	movlw	5
   918  0789  00F2               	movwf	DELAY_ms@ms_count
   919  078A  3000               	movlw	0
   920  078B  00F3               	movwf	DELAY_ms@ms_count+1
   921  078C  120A  118A  25D8  120A  118A  	fcall	_DELAY_ms
   922                           
   923                           ;main.c: 158: PORTD = ucBCD_ARR[(ucSec&0xF0) >> 4];
   924  0791  1283               	bcf	3,5	;RP0=0, select bank0
   925  0792  1303               	bcf	3,6	;RP1=0, select bank0
   926  0793  0826               	movf	main@ucSec,w
   927  0794  00F5               	movwf	??_main
   928  0795  3004               	movlw	4
   929  0796                     u405:	
   930  0796  1003               	clrc
   931  0797  0CF5               	rrf	??_main,f
   932  0798  3EFF               	addlw	-1
   933  0799  1D03               	skipz
   934  079A  2F96               	goto	u405
   935  079B  0875               	movf	??_main,w
   936  079C  390F               	andlw	15
   937  079D  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
   938  079E  0084               	movwf	4
   939  079F  1383               	bcf	3,7	;select IRP bank0
   940  07A0  0800               	movf	0,w
   941  07A1  0088               	movwf	8	;volatile
   942                           
   943                           ;main.c: 159: PORTB |= 0x3C;
   944  07A2  303C               	movlw	60
   945  07A3  00F5               	movwf	??_main
   946  07A4  0875               	movf	??_main,w
   947  07A5  0486               	iorwf	6,f	;volatile
   948                           
   949                           ;main.c: 160: PORTB &= 0xEF;
   950  07A6  30EF               	movlw	239
   951  07A7  00F5               	movwf	??_main
   952  07A8  0875               	movf	??_main,w
   953  07A9  0586               	andwf	6,f	;volatile
   954                           
   955                           ;main.c: 161: DELAY_ms(5);
   956  07AA  3005               	movlw	5
   957  07AB  00F2               	movwf	DELAY_ms@ms_count
   958  07AC  3000               	movlw	0
   959  07AD  00F3               	movwf	DELAY_ms@ms_count+1
   960  07AE  120A  118A  25D8  120A  118A  	fcall	_DELAY_ms
   961                           
   962                           ;main.c: 163: PORTD = ucBCD_ARR[ucMin&0x0F];
   963  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   964  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   965  07B5  0827               	movf	main@ucMin,w
   966  07B6  390F               	andlw	15
   967  07B7  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
   968  07B8  0084               	movwf	4
   969  07B9  1383               	bcf	3,7	;select IRP bank0
   970  07BA  0800               	movf	0,w
   971  07BB  0088               	movwf	8	;volatile
   972                           
   973                           ;main.c: 164: PORTB |= 0x3C;
   974  07BC  303C               	movlw	60
   975  07BD  00F5               	movwf	??_main
   976  07BE  0875               	movf	??_main,w
   977  07BF  0486               	iorwf	6,f	;volatile
   978                           
   979                           ;main.c: 165: PORTB &= 0xF7;
   980  07C0  30F7               	movlw	247
   981  07C1  00F5               	movwf	??_main
   982  07C2  0875               	movf	??_main,w
   983  07C3  0586               	andwf	6,f	;volatile
   984                           
   985                           ;main.c: 166: DELAY_ms(5);
   986  07C4  3005               	movlw	5
   987  07C5  00F2               	movwf	DELAY_ms@ms_count
   988  07C6  3000               	movlw	0
   989  07C7  00F3               	movwf	DELAY_ms@ms_count+1
   990  07C8  120A  118A  25D8  120A  118A  	fcall	_DELAY_ms
   991                           
   992                           ;main.c: 168: PORTD = ucBCD_ARR[(ucMin&0xF0) >> 4];
   993  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   994  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   995  07CF  0827               	movf	main@ucMin,w
   996  07D0  00F5               	movwf	??_main
   997  07D1  3004               	movlw	4
   998  07D2                     u415:	
   999  07D2  1003               	clrc
  1000  07D3  0CF5               	rrf	??_main,f
  1001  07D4  3EFF               	addlw	-1
  1002  07D5  1D03               	skipz
  1003  07D6  2FD2               	goto	u415
  1004  07D7  0875               	movf	??_main,w
  1005  07D8  390F               	andlw	15
  1006  07D9  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1007  07DA  0084               	movwf	4
  1008  07DB  1383               	bcf	3,7	;select IRP bank0
  1009  07DC  0800               	movf	0,w
  1010  07DD  0088               	movwf	8	;volatile
  1011                           
  1012                           ;main.c: 169: PORTB |= 0x3C;
  1013  07DE  303C               	movlw	60
  1014  07DF  00F5               	movwf	??_main
  1015  07E0  0875               	movf	??_main,w
  1016  07E1  0486               	iorwf	6,f	;volatile
  1017                           
  1018                           ;main.c: 170: PORTB &= 0xFB;
  1019  07E2  30FB               	movlw	251
  1020  07E3  00F5               	movwf	??_main
  1021  07E4  0875               	movf	??_main,w
  1022  07E5  0586               	andwf	6,f	;volatile
  1023                           
  1024                           ;main.c: 171: DELAY_ms(5);
  1025  07E6  3005               	movlw	5
  1026  07E7  00F2               	movwf	DELAY_ms@ms_count
  1027  07E8  3000               	movlw	0
  1028  07E9  00F3               	movwf	DELAY_ms@ms_count+1
  1029  07EA  120A  118A  25D8  120A  118A  	fcall	_DELAY_ms
  1030  07EF  2F59               	goto	l1156
  1031  07F0                     __end_of_main:	
  1032                           ;main.c: 172: }
  1033                           ;main.c: 174: return (0);
  1034                           ;	Return value of _main is never used
  1035                           
  1036                           
  1037                           	psect	text1
  1038  062C                     __ptext1:	
  1039 ;; *************** function _RTC_SetDateTime *****************
  1040 ;; Defined at:
  1041 ;;		line 95 in file "rtc.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  rtc             1    wreg     PTR struct .
  1044 ;;		 -> main@rtc(7), 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  rtc             1    1[COMMON] PTR struct .
  1047 ;;		 -> main@rtc(7), 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0       0       0       0       0
  1058 ;;      Locals:         1       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0
  1060 ;;      Totals:         1       0       0       0       0
  1061 ;;Total ram usage:        1 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    2
  1064 ;; This function calls:
  1065 ;;		_I2C_Start
  1066 ;;		_I2C_Stop
  1067 ;;		_I2C_Write
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _RTC_SetDateTime
  1075  062C                     _RTC_SetDateTime:	
  1076                           
  1077                           ;incstack = 0
  1078                           ; Regs used in _RTC_SetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1079                           ;RTC_SetDateTime@rtc stored from wreg
  1080  062C  00F1               	movwf	RTC_SetDateTime@rtc
  1081                           
  1082                           ;rtc.c: 97: I2C_Start();
  1083  062D  120A  118A  2572  120A  118A  	fcall	_I2C_Start
  1084                           
  1085                           ;rtc.c: 99: I2C_Write(0xD0u);
  1086  0632  30D0               	movlw	208
  1087  0633  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1088                           
  1089                           ;rtc.c: 100: I2C_Write(0x00u);
  1090  0638  3000               	movlw	0
  1091  0639  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1092                           
  1093                           ;rtc.c: 102: I2C_Write(rtc->sec);
  1094  063E  0871               	movf	RTC_SetDateTime@rtc,w
  1095  063F  0084               	movwf	4
  1096  0640  1383               	bcf	3,7	;select IRP bank0
  1097  0641  0800               	movf	0,w
  1098  0642  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1099                           
  1100                           ;rtc.c: 103: I2C_Write(rtc->min);
  1101  0647  0A71               	incf	RTC_SetDateTime@rtc,w
  1102  0648  0084               	movwf	4
  1103  0649  1383               	bcf	3,7	;select IRP bank0
  1104  064A  0800               	movf	0,w
  1105  064B  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1106                           
  1107                           ;rtc.c: 104: I2C_Write(rtc->hour);
  1108  0650  0871               	movf	RTC_SetDateTime@rtc,w
  1109  0651  3E02               	addlw	2
  1110  0652  0084               	movwf	4
  1111  0653  1383               	bcf	3,7	;select IRP bank0
  1112  0654  0800               	movf	0,w
  1113  0655  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1114                           
  1115                           ;rtc.c: 105: I2C_Write(rtc->weekDay);
  1116  065A  0871               	movf	RTC_SetDateTime@rtc,w
  1117  065B  3E03               	addlw	3
  1118  065C  0084               	movwf	4
  1119  065D  1383               	bcf	3,7	;select IRP bank0
  1120  065E  0800               	movf	0,w
  1121  065F  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1122                           
  1123                           ;rtc.c: 106: I2C_Write(rtc->date);
  1124  0664  0871               	movf	RTC_SetDateTime@rtc,w
  1125  0665  3E04               	addlw	4
  1126  0666  0084               	movwf	4
  1127  0667  1383               	bcf	3,7	;select IRP bank0
  1128  0668  0800               	movf	0,w
  1129  0669  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1130                           
  1131                           ;rtc.c: 107: I2C_Write(rtc->month);
  1132  066E  0871               	movf	RTC_SetDateTime@rtc,w
  1133  066F  3E05               	addlw	5
  1134  0670  0084               	movwf	4
  1135  0671  1383               	bcf	3,7	;select IRP bank0
  1136  0672  0800               	movf	0,w
  1137  0673  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1138                           
  1139                           ;rtc.c: 108: I2C_Write(rtc->year);
  1140  0678  0871               	movf	RTC_SetDateTime@rtc,w
  1141  0679  3E06               	addlw	6
  1142  067A  0084               	movwf	4
  1143  067B  1383               	bcf	3,7	;select IRP bank0
  1144  067C  0800               	movf	0,w
  1145  067D  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1146                           
  1147                           ;rtc.c: 110: I2C_Stop();
  1148  0682  120A  118A  2578   	fcall	_I2C_Stop
  1149  0685  0008               	return
  1150  0686                     __end_of_RTC_SetDateTime:	
  1151                           
  1152                           	psect	text2
  1153  060C                     __ptext2:	
  1154 ;; *************** function _RTC_Init *****************
  1155 ;; Defined at:
  1156 ;;		line 57 in file "rtc.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0, pclath, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    2
  1177 ;; This function calls:
  1178 ;;		_I2C_Init
  1179 ;;		_I2C_Start
  1180 ;;		_I2C_Stop
  1181 ;;		_I2C_Write
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _RTC_Init
  1189  060C                     _RTC_Init:	
  1190                           
  1191                           ;rtc.c: 59: I2C_Init();
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _RTC_Init: [wreg+status,2+status,0+pclath+cstack]
  1195  060C  120A  118A  25B9  120A  118A  	fcall	_I2C_Init
  1196                           
  1197                           ;rtc.c: 60: I2C_Start();
  1198  0611  120A  118A  2572  120A  118A  	fcall	_I2C_Start
  1199                           
  1200                           ;rtc.c: 62: I2C_Write(0xD0u);
  1201  0616  30D0               	movlw	208
  1202  0617  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1203                           
  1204                           ;rtc.c: 63: I2C_Write(0x07u);
  1205  061C  3007               	movlw	7
  1206  061D  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1207                           
  1208                           ;rtc.c: 65: I2C_Write(0x00);
  1209  0622  3000               	movlw	0
  1210  0623  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1211                           
  1212                           ;rtc.c: 67: I2C_Stop();
  1213  0628  120A  118A  2578   	fcall	_I2C_Stop
  1214  062B  0008               	return
  1215  062C                     __end_of_RTC_Init:	
  1216                           
  1217                           	psect	text3
  1218  05B9                     __ptext3:	
  1219 ;; *************** function _I2C_Init *****************
  1220 ;; Defined at:
  1221 ;;		line 87 in file "i2c.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0
  1238 ;;      Totals:         0       0       0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_RTC_Init
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           
  1249                           ;psect for function _I2C_Init
  1250  05B9                     _I2C_Init:	
  1251                           
  1252                           ;i2c.c: 89: TRISC3 = 0x01u;
  1253                           
  1254                           ;incstack = 0
  1255                           ; Regs used in _I2C_Init: [wreg]
  1256  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  1257  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  1258  05BB  1587               	bsf	7,3	;volatile
  1259                           
  1260                           ;i2c.c: 90: TRISC4 = 0x01u;
  1261  05BC  1607               	bsf	7,4	;volatile
  1262                           
  1263                           ;i2c.c: 92: SSPSTAT |= 0x80;
  1264  05BD  1794               	bsf	20,7	;volatile
  1265                           
  1266                           ;i2c.c: 93: SSPCON = 0x28;
  1267  05BE  3028               	movlw	40
  1268  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1269  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1270  05C1  0094               	movwf	20	;volatile
  1271                           
  1272                           ;i2c.c: 94: SSPADD = 50;
  1273  05C2  3032               	movlw	50
  1274  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  1275  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  1276  05C5  0093               	movwf	19	;volatile
  1277  05C6  0008               	return
  1278  05C7                     __end_of_I2C_Init:	
  1279                           
  1280                           	psect	text4
  1281  0686                     __ptext4:	
  1282 ;; *************** function _RTC_GetDateTime *****************
  1283 ;; Defined at:
  1284 ;;		line 131 in file "rtc.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  rtc             1    wreg     PTR struct .
  1287 ;;		 -> main@rtc(7), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  rtc             1    4[COMMON] PTR struct .
  1290 ;;		 -> main@rtc(7), 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         1       0       0       0       0
  1302 ;;      Temps:          1       0       0       0       0
  1303 ;;      Totals:         2       0       0       0       0
  1304 ;;Total ram usage:        2 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    2
  1307 ;; This function calls:
  1308 ;;		_I2C_Read
  1309 ;;		_I2C_Start
  1310 ;;		_I2C_Stop
  1311 ;;		_I2C_Write
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           
  1318                           ;psect for function _RTC_GetDateTime
  1319  0686                     _RTC_GetDateTime:	
  1320                           
  1321                           ;incstack = 0
  1322                           ; Regs used in _RTC_GetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1323                           ;RTC_GetDateTime@rtc stored from wreg
  1324  0686  00F4               	movwf	RTC_GetDateTime@rtc
  1325                           
  1326                           ;rtc.c: 133: I2C_Start();
  1327  0687  120A  118A  2572  120A  118A  	fcall	_I2C_Start
  1328                           
  1329                           ;rtc.c: 135: I2C_Write(0xD0u);
  1330  068C  30D0               	movlw	208
  1331  068D  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1332                           
  1333                           ;rtc.c: 136: I2C_Write(0x00u);
  1334  0692  3000               	movlw	0
  1335  0693  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1336                           
  1337                           ;rtc.c: 138: I2C_Stop();
  1338  0698  120A  118A  2578  120A  118A  	fcall	_I2C_Stop
  1339                           
  1340                           ;rtc.c: 140: I2C_Start();
  1341  069D  120A  118A  2572  120A  118A  	fcall	_I2C_Start
  1342                           
  1343                           ;rtc.c: 141: I2C_Write(0xD1u);
  1344  06A2  30D1               	movlw	209
  1345  06A3  120A  118A  25AC  120A  118A  	fcall	_I2C_Write
  1346                           
  1347                           ;rtc.c: 143: rtc->sec = I2C_Read(1);
  1348  06A8  3001               	movlw	1
  1349  06A9  120A  118A  25EC  120A  118A  	fcall	_I2C_Read
  1350  06AE  00F3               	movwf	??_RTC_GetDateTime
  1351  06AF  0874               	movf	RTC_GetDateTime@rtc,w
  1352  06B0  0084               	movwf	4
  1353  06B1  0873               	movf	??_RTC_GetDateTime,w
  1354  06B2  1383               	bcf	3,7	;select IRP bank0
  1355  06B3  0080               	movwf	0
  1356                           
  1357                           ;rtc.c: 144: rtc->min = I2C_Read(1);
  1358  06B4  3001               	movlw	1
  1359  06B5  120A  118A  25EC  120A  118A  	fcall	_I2C_Read
  1360  06BA  00F3               	movwf	??_RTC_GetDateTime
  1361  06BB  0A74               	incf	RTC_GetDateTime@rtc,w
  1362  06BC  0084               	movwf	4
  1363  06BD  0873               	movf	??_RTC_GetDateTime,w
  1364  06BE  1383               	bcf	3,7	;select IRP bank0
  1365  06BF  0080               	movwf	0
  1366                           
  1367                           ;rtc.c: 145: rtc->hour= I2C_Read(1);
  1368  06C0  3001               	movlw	1
  1369  06C1  120A  118A  25EC  120A  118A  	fcall	_I2C_Read
  1370  06C6  00F3               	movwf	??_RTC_GetDateTime
  1371  06C7  0874               	movf	RTC_GetDateTime@rtc,w
  1372  06C8  3E02               	addlw	2
  1373  06C9  0084               	movwf	4
  1374  06CA  0873               	movf	??_RTC_GetDateTime,w
  1375  06CB  1383               	bcf	3,7	;select IRP bank0
  1376  06CC  0080               	movwf	0
  1377                           
  1378                           ;rtc.c: 146: rtc->weekDay = I2C_Read(1);
  1379  06CD  3001               	movlw	1
  1380  06CE  120A  118A  25EC  120A  118A  	fcall	_I2C_Read
  1381  06D3  00F3               	movwf	??_RTC_GetDateTime
  1382  06D4  0874               	movf	RTC_GetDateTime@rtc,w
  1383  06D5  3E03               	addlw	3
  1384  06D6  0084               	movwf	4
  1385  06D7  0873               	movf	??_RTC_GetDateTime,w
  1386  06D8  1383               	bcf	3,7	;select IRP bank0
  1387  06D9  0080               	movwf	0
  1388                           
  1389                           ;rtc.c: 147: rtc->date= I2C_Read(1);
  1390  06DA  3001               	movlw	1
  1391  06DB  120A  118A  25EC  120A  118A  	fcall	_I2C_Read
  1392  06E0  00F3               	movwf	??_RTC_GetDateTime
  1393  06E1  0874               	movf	RTC_GetDateTime@rtc,w
  1394  06E2  3E04               	addlw	4
  1395  06E3  0084               	movwf	4
  1396  06E4  0873               	movf	??_RTC_GetDateTime,w
  1397  06E5  1383               	bcf	3,7	;select IRP bank0
  1398  06E6  0080               	movwf	0
  1399                           
  1400                           ;rtc.c: 148: rtc->month=I2C_Read(1);
  1401  06E7  3001               	movlw	1
  1402  06E8  120A  118A  25EC  120A  118A  	fcall	_I2C_Read
  1403  06ED  00F3               	movwf	??_RTC_GetDateTime
  1404  06EE  0874               	movf	RTC_GetDateTime@rtc,w
  1405  06EF  3E05               	addlw	5
  1406  06F0  0084               	movwf	4
  1407  06F1  0873               	movf	??_RTC_GetDateTime,w
  1408  06F2  1383               	bcf	3,7	;select IRP bank0
  1409  06F3  0080               	movwf	0
  1410                           
  1411                           ;rtc.c: 149: rtc->year =I2C_Read(0);
  1412  06F4  3000               	movlw	0
  1413  06F5  120A  118A  25EC  120A  118A  	fcall	_I2C_Read
  1414  06FA  00F3               	movwf	??_RTC_GetDateTime
  1415  06FB  0874               	movf	RTC_GetDateTime@rtc,w
  1416  06FC  3E06               	addlw	6
  1417  06FD  0084               	movwf	4
  1418  06FE  0873               	movf	??_RTC_GetDateTime,w
  1419  06FF  1383               	bcf	3,7	;select IRP bank0
  1420  0700  0080               	movwf	0
  1421                           
  1422                           ;rtc.c: 151: I2C_Stop();
  1423  0701  120A  118A  2578   	fcall	_I2C_Stop
  1424  0704  0008               	return
  1425  0705                     __end_of_RTC_GetDateTime:	
  1426                           
  1427                           	psect	text5
  1428  05AC                     __ptext5:	
  1429 ;; *************** function _I2C_Write *****************
  1430 ;; Defined at:
  1431 ;;		line 179 in file "i2c.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  v_i2cData_u8    1    wreg     unsigned char 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  v_i2cData_u8    1    0[COMMON] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0, pclath, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         1       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0
  1448 ;;      Totals:         1       0       0       0       0
  1449 ;;Total ram usage:        1 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    1
  1452 ;; This function calls:
  1453 ;;		_i2c_WaitForIdle
  1454 ;; This function is called by:
  1455 ;;		_RTC_Init
  1456 ;;		_RTC_SetDateTime
  1457 ;;		_RTC_GetDateTime
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _I2C_Write
  1463  05AC                     _I2C_Write:	
  1464                           
  1465                           ;incstack = 0
  1466                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  1467                           ;I2C_Write@v_i2cData_u8 stored from wreg
  1468  05AC  00F0               	movwf	I2C_Write@v_i2cData_u8
  1469                           
  1470                           ;i2c.c: 183: SSPBUF = v_i2cData_u8;
  1471  05AD  0870               	movf	I2C_Write@v_i2cData_u8,w
  1472  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1473  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1474  05B0  0093               	movwf	19	;volatile
  1475  05B1                     l122:	
  1476                           ;i2c.c: 184: while(BF==1);
  1477                           
  1478  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  1479  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  1480  05B3  1814               	btfsc	20,0	;volatile
  1481  05B4  2DB1               	goto	l122
  1482                           
  1483                           ;i2c.c: 185: i2c_WaitForIdle();
  1484  05B5  120A  118A  25A1   	fcall	_i2c_WaitForIdle
  1485  05B8  0008               	return
  1486  05B9                     __end_of_I2C_Write:	
  1487                           
  1488                           	psect	text6
  1489  0578                     __ptext6:	
  1490 ;; *************** function _I2C_Stop *****************
  1491 ;; Defined at:
  1492 ;;		line 147 in file "i2c.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		None
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1506 ;;      Params:         0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0
  1509 ;;      Totals:         0       0       0       0       0
  1510 ;;Total ram usage:        0 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_RTC_Init
  1516 ;;		_RTC_SetDateTime
  1517 ;;		_RTC_GetDateTime
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _I2C_Stop
  1523  0578                     _I2C_Stop:	
  1524                           
  1525                           ;i2c.c: 149: PEN = 1;
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _I2C_Stop: []
  1529  0578  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0579  1303               	bcf	3,6	;RP1=0, select bank1
  1531  057A  1511               	bsf	17,2	;volatile
  1532  057B                     l116:	
  1533                           ;i2c.c: 150: while(PEN == 1);
  1534                           
  1535  057B  1D11               	btfss	17,2	;volatile
  1536  057C  0008               	return
  1537  057D  2D7B               	goto	l116
  1538  057E                     __end_of_I2C_Stop:	
  1539                           
  1540                           	psect	text7
  1541  0572                     __ptext7:	
  1542 ;; *************** function _I2C_Start *****************
  1543 ;; Defined at:
  1544 ;;		line 118 in file "i2c.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		None
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0
  1561 ;;      Totals:         0       0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_RTC_Init
  1568 ;;		_RTC_SetDateTime
  1569 ;;		_RTC_GetDateTime
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _I2C_Start
  1575  0572                     _I2C_Start:	
  1576                           
  1577                           ;i2c.c: 120: SEN = 1;
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _I2C_Start: []
  1581  0572  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0573  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0574  1411               	bsf	17,0	;volatile
  1584  0575                     l110:	
  1585                           ;i2c.c: 121: while(SEN == 1);
  1586                           
  1587  0575  1C11               	btfss	17,0	;volatile
  1588  0576  0008               	return
  1589  0577  2D75               	goto	l110
  1590  0578                     __end_of_I2C_Start:	
  1591                           
  1592                           	psect	text8
  1593  05EC                     __ptext8:	
  1594 ;; *************** function _I2C_Read *****************
  1595 ;; Defined at:
  1596 ;;		line 214 in file "i2c.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  v_ackOption_    1    wreg     unsigned char 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  v_ackOption_    1    1[COMMON] unsigned char 
  1601 ;;  v_i2cData_u8    1    2[COMMON] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      unsigned char 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, pclath, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       0       0       0       0
  1612 ;;      Locals:         2       0       0       0       0
  1613 ;;      Temps:          1       0       0       0       0
  1614 ;;      Totals:         3       0       0       0       0
  1615 ;;Total ram usage:        3 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    1
  1618 ;; This function calls:
  1619 ;;		_i2c_Ack
  1620 ;;		_i2c_NoAck
  1621 ;;		_i2c_WaitForIdle
  1622 ;; This function is called by:
  1623 ;;		_RTC_GetDateTime
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function _I2C_Read
  1629  05EC                     _I2C_Read:	
  1630                           
  1631                           ;incstack = 0
  1632                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  1633                           ;I2C_Read@v_ackOption_u8 stored from wreg
  1634  05EC  00F1               	movwf	I2C_Read@v_ackOption_u8
  1635                           
  1636                           ;i2c.c: 216: uint8_t v_i2cData_u8=0x00;
  1637  05ED  01F2               	clrf	I2C_Read@v_i2cData_u8
  1638                           
  1639                           ;i2c.c: 218: RCEN = 1;
  1640  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  1641  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  1642  05F0  1591               	bsf	17,3	;volatile
  1643  05F1                     l128:	
  1644                           ;i2c.c: 219: while(BF==0);
  1645                           
  1646  05F1  1C14               	btfss	20,0	;volatile
  1647  05F2  2DF1               	goto	l128
  1648                           
  1649                           ;i2c.c: 220: v_i2cData_u8 = SSPBUF;
  1650  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  1651  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  1652  05F5  0813               	movf	19,w	;volatile
  1653  05F6  00F0               	movwf	??_I2C_Read
  1654  05F7  0870               	movf	??_I2C_Read,w
  1655  05F8  00F2               	movwf	I2C_Read@v_i2cData_u8
  1656                           
  1657                           ;i2c.c: 221: i2c_WaitForIdle();
  1658  05F9  120A  118A  25A1  120A  118A  	fcall	_i2c_WaitForIdle
  1659                           
  1660                           ;i2c.c: 223: if(v_ackOption_u8==1)
  1661  05FE  0371               	decf	I2C_Read@v_ackOption_u8,w
  1662  05FF  1D03               	btfss	3,2
  1663  0600  2E07               	goto	l1004
  1664                           
  1665                           ;i2c.c: 224: {
  1666                           ;i2c.c: 225: i2c_Ack();
  1667  0601  120A  118A  257E  120A  118A  	fcall	_i2c_Ack
  1668                           
  1669                           ;i2c.c: 226: }
  1670  0606  2E0A               	goto	l1006
  1671  0607                     l1004:	
  1672                           
  1673                           ;i2c.c: 227: else
  1674                           ;i2c.c: 228: {
  1675                           ;i2c.c: 229: i2c_NoAck();
  1676  0607  120A  118A  2585   	fcall	_i2c_NoAck
  1677  060A                     l1006:	
  1678                           
  1679                           ;i2c.c: 230: }
  1680                           ;i2c.c: 232: return v_i2cData_u8;
  1681  060A  0872               	movf	I2C_Read@v_i2cData_u8,w
  1682  060B  0008               	return
  1683  060C                     __end_of_I2C_Read:	
  1684                           
  1685                           	psect	text9
  1686  05A1                     __ptext9:	
  1687 ;; *************** function _i2c_WaitForIdle *****************
  1688 ;; Defined at:
  1689 ;;		line 258 in file "i2c.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		None
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1703 ;;      Params:         0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0
  1705 ;;      Temps:          0       0       0       0       0
  1706 ;;      Totals:         0       0       0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_I2C_Write
  1713 ;;		_I2C_Read
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _i2c_WaitForIdle
  1719  05A1                     _i2c_WaitForIdle:	
  1720  05A1                     l136:	
  1721                           ;i2c.c: 260: while ( (SEN == 1) || (RSEN == 1) || (PEN == 1) || (RCEN == 1) || (R_W == 1
      +                          ) );
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _i2c_WaitForIdle: []
  1725                           
  1726  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  1727  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  1728  05A3  1C11               	btfss	17,0	;volatile
  1729  05A4  1891               	btfsc	17,1	;volatile
  1730  05A5  2DA1               	goto	l136
  1731  05A6  1D11               	btfss	17,2	;volatile
  1732  05A7  1991               	btfsc	17,3	;volatile
  1733  05A8  2DA1               	goto	l136
  1734  05A9  1D14               	btfss	20,2	;volatile
  1735  05AA  0008               	return
  1736  05AB  2DA1               	goto	l136
  1737  05AC                     __end_of_i2c_WaitForIdle:	
  1738                           
  1739                           	psect	text10
  1740  0585                     __ptext10:	
  1741 ;; *************** function _i2c_NoAck *****************
  1742 ;; Defined at:
  1743 ;;		line 299 in file "i2c.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		None
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1757 ;;      Params:         0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0
  1760 ;;      Totals:         0       0       0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_I2C_Read
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _i2c_NoAck
  1772  0585                     _i2c_NoAck:	
  1773                           
  1774                           ;i2c.c: 301: ACKDT = 1;
  1775                           
  1776                           ;incstack = 0
  1777                           ; Regs used in _i2c_NoAck: []
  1778  0585  1683               	bsf	3,5	;RP0=1, select bank1
  1779  0586  1303               	bcf	3,6	;RP1=0, select bank1
  1780  0587  1691               	bsf	17,5	;volatile
  1781                           
  1782                           ;i2c.c: 302: ACKEN = 1;
  1783  0588  1611               	bsf	17,4	;volatile
  1784  0589                     l148:	
  1785                           ;i2c.c: 303: while(ACKEN == 1);
  1786                           
  1787  0589  1E11               	btfss	17,4	;volatile
  1788  058A  0008               	return
  1789  058B  2D89               	goto	l148
  1790  058C                     __end_of_i2c_NoAck:	
  1791                           
  1792                           	psect	text11
  1793  057E                     __ptext11:	
  1794 ;; *************** function _i2c_Ack *****************
  1795 ;; Defined at:
  1796 ;;		line 279 in file "i2c.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		None
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         0       0       0       0       0
  1811 ;;      Locals:         0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0
  1813 ;;      Totals:         0       0       0       0       0
  1814 ;;Total ram usage:        0 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_I2C_Read
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _i2c_Ack
  1825  057E                     _i2c_Ack:	
  1826                           
  1827                           ;i2c.c: 281: ACKDT = 0;
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _i2c_Ack: []
  1831  057E  1683               	bsf	3,5	;RP0=1, select bank1
  1832  057F  1303               	bcf	3,6	;RP1=0, select bank1
  1833  0580  1291               	bcf	17,5	;volatile
  1834                           
  1835                           ;i2c.c: 282: ACKEN = 1;
  1836  0581  1611               	bsf	17,4	;volatile
  1837  0582                     l142:	
  1838                           ;i2c.c: 283: while(ACKEN == 1);
  1839                           
  1840  0582  1E11               	btfss	17,4	;volatile
  1841  0583  0008               	return
  1842  0584  2D82               	goto	l142
  1843  0585                     __end_of_i2c_Ack:	
  1844                           
  1845                           	psect	text12
  1846  05D8                     __ptext12:	
  1847 ;; *************** function _DELAY_ms *****************
  1848 ;; Defined at:
  1849 ;;		line 75 in file "delay.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  ms_count        2    2[COMMON] unsigned int 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         2       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0
  1866 ;;      Totals:         2       0       0       0       0
  1867 ;;Total ram usage:        2 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    1
  1870 ;; This function calls:
  1871 ;;		_DELAY_us
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;;		_DELAY_sec
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _DELAY_ms
  1880  05D8                     _DELAY_ms:	
  1881  05D8                     l1072:	
  1882                           ;delay.c: 77: while (ms_count != 0)
  1883                           
  1884                           ;incstack = 0
  1885                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  1886                           
  1887  05D8  0872               	movf	DELAY_ms@ms_count,w
  1888  05D9  0473               	iorwf	DELAY_ms@ms_count+1,w
  1889  05DA  1903               	btfsc	3,2
  1890  05DB  0008               	return
  1891                           
  1892                           ;delay.c: 78: {
  1893                           ;delay.c: 79: DELAY_us(300u);
  1894  05DC  302C               	movlw	44
  1895  05DD  00F0               	movwf	DELAY_us@us_count
  1896  05DE  3001               	movlw	1
  1897  05DF  00F1               	movwf	DELAY_us@us_count+1
  1898  05E0  120A  118A  2596  120A  118A  	fcall	_DELAY_us
  1899                           
  1900                           ;delay.c: 80: ms_count--;
  1901  05E5  3001               	movlw	1
  1902  05E6  02F2               	subwf	DELAY_ms@ms_count,f
  1903  05E7  3000               	movlw	0
  1904  05E8  1C03               	skipc
  1905  05E9  03F3               	decf	DELAY_ms@ms_count+1,f
  1906  05EA  02F3               	subwf	DELAY_ms@ms_count+1,f
  1907  05EB  2DD8               	goto	l1072
  1908  05EC                     __end_of_DELAY_ms:	
  1909                           
  1910                           	psect	text13
  1911  0596                     __ptext13:	
  1912 ;; *************** function _DELAY_us *****************
  1913 ;; Defined at:
  1914 ;;		line 56 in file "delay.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  us_count        2    0[COMMON] unsigned int 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         2       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0
  1931 ;;      Totals:         2       0       0       0       0
  1932 ;;Total ram usage:        2 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_DELAY_ms
  1938 ;;		_vSendData595
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _DELAY_us
  1944  0596                     _DELAY_us:	
  1945  0596                     l978:	
  1946                           ;delay.c: 58: while (us_count != 0)
  1947                           
  1948                           ;incstack = 0
  1949                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  1950                           
  1951  0596  0870               	movf	DELAY_us@us_count,w
  1952  0597  0471               	iorwf	DELAY_us@us_count+1,w
  1953  0598  1903               	btfsc	3,2
  1954  0599  0008               	return
  1955                           
  1956                           ;delay.c: 59: {
  1957                           ;delay.c: 60: us_count--;
  1958  059A  3001               	movlw	1
  1959  059B  02F0               	subwf	DELAY_us@us_count,f
  1960  059C  3000               	movlw	0
  1961  059D  1C03               	skipc
  1962  059E  03F1               	decf	DELAY_us@us_count+1,f
  1963  059F  02F1               	subwf	DELAY_us@us_count+1,f
  1964  05A0  2D96               	goto	l978
  1965  05A1                     __end_of_DELAY_us:	
  1966  007E                     btemp	set	126	;btemp
  1967  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80     15      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    RTC_GetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK0[7]), 

    RTC_SetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK0[7]), 


Critical Paths under _main in COMMON

    _main->_RTC_GetDateTime
    _RTC_SetDateTime->_I2C_Write
    _RTC_Init->_I2C_Write
    _RTC_GetDateTime->_I2C_Read
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    1340
                                              5 COMMON     1     1      0
                                              0 BANK0     15    15      0
                           _DELAY_ms
                    _RTC_GetDateTime
                           _RTC_Init
                    _RTC_SetDateTime
 ---------------------------------------------------------------------------------
 (1) _RTC_SetDateTime                                      1     1      0     203
                                              1 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0      22
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_GetDateTime                                      2     2      0     249
                                              3 COMMON     2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      46
                                              0 COMMON     3     3      0
                            _i2c_Ack
                          _i2c_NoAck
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (3) _i2c_WaitForIdle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_NoAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DELAY_ms                                             2     0      2     417
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _DELAY_us                                             2     0      2     129
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms
     _DELAY_us
   _RTC_GetDateTime
     _I2C_Read
       _i2c_Ack
       _i2c_NoAck
       _i2c_WaitForIdle
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_Init
     _I2C_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_SetDateTime
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Sep  8 17:08:12 2017

                       pc 0002        __size_of_I2C_Start 0006               __CFG_CP$OFF 0000  
        ?_i2c_WaitForIdle 0070        __size_of_I2C_Write 000D                        _BF 04A0  
                      fsr 0004                       l110 0575                       l122 05B1  
                     l116 057B                       l142 0582                       l136 05A1  
                     l128 05F1                       l148 0589                       l978 0596  
                     u405 0796                       u415 07D2                       _PEN 048A  
            __CFG_CPD$OFF 0000                       _SEN 0488                       _R_W 04A2  
 __end_of_RTC_SetDateTime 0686                       fsr0 0004                       indf 0000  
            __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000                      l1004 0607  
                    l1006 060A                      l1072 05D8                      l1156 0759  
                    _IOCB 0096                      _RCEN 048B                      _RSEN 0489  
             main@ucHours 0022               main@ucMonth 0024              __CFG_WRT$OFF 0000  
                    _main 0705          __end_of_I2C_Init 05C7          __end_of_I2C_Read 060C  
                    btemp 007E          __end_of_I2C_Stop 057E                      start 0000  
        __end_of_DELAY_ms 05EC          __end_of_DELAY_us 05A1           __end_of_i2c_Ack 0585  
                   ?_main 0070                     _ACKEN 048C                     _ACKDT 048D  
           __CFG_WDTE$OFF 0000                     _PORTB 0006                     _PORTD 0008  
            main@ucSetCnt 0021                     _TRISD 0088          __end_of_RTC_Init 062C  
       __end_of_I2C_Start 0578         __end_of_I2C_Write 05B9            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 07F0              __end_of_main 07F0                    ??_main 0075  
      RTC_SetDateTime@rtc 0071          ?_RTC_SetDateTime 0070        __size_of_i2c_NoAck 0007  
                  _SSPADD 0093             main@ucSetData 0020                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
               ??_i2c_Ack 0070            __CFG_PWRTE$OFF 0000     I2C_Write@v_i2cData_u8 0070  
        DELAY_ms@ms_count 0072                 ?_I2C_Init 0070                 ?_I2C_Read 0070  
               ?_I2C_Stop 0070                 ?_DELAY_ms 0072                 ?_DELAY_us 0070  
 __end_of__initialization 07FC            __pcstackCOMMON 0070              __pidataBANK0 058C  
       __end_of_i2c_NoAck 058C                 ?_RTC_Init 0070                ??_I2C_Init 0070  
          _OPTION_REGbits 0081                ??_I2C_Read 0070                ??_I2C_Stop 0070  
              ??_DELAY_ms 0074                ??_DELAY_us 0072  __size_of_RTC_GetDateTime 007F  
              __pmaintext 0705                ??_RTC_Init 0071  __size_of_i2c_WaitForIdle 000B  
        DELAY_us@us_count 0070                   _SSPSTAT 0094                   _i2c_Ack 057E  
               _I2C_Start 0572                 _I2C_Write 05AC                 _ANSELbits 0188  
                 __ptext1 062C                   __ptext2 060C                   __ptext3 05B9  
                 __ptext4 0686                   __ptext5 05AC                   __ptext6 0578  
                 __ptext7 0572                   __ptext8 05EC                   __ptext9 05A1  
                 main@rtc 0028      end_of_initialization 07FC    I2C_Read@v_ackOption_u8 0071  
              ?_I2C_Start 0070                ?_I2C_Write 0070         ??_RTC_GetDateTime 0073  
               _PORTBbits 0006                 _PORTCbits 0007                 _TRISBbits 0086  
               _TRISCbits 0087                 _TRISEbits 0089         __size_of_I2C_Init 000E  
       __size_of_I2C_Read 0020         __size_of_I2C_Stop 0006         __size_of_DELAY_ms 0014  
       __size_of_DELAY_us 000B  __size_of_RTC_SetDateTime 005A         ??_i2c_WaitForIdle 0070  
              main@ucDate 0023                main@ucYear 0025                 _i2c_NoAck 0585  
       __size_of_RTC_Init 0020       start_initialization 07F0               ??_I2C_Start 0070  
             ??_I2C_Write 0070                init_fetch0 05C7               __pdataBANK0 002F  
              ?_i2c_NoAck 0070                 ___latbits 0002             __pcstackBANK0 0020  
               _ucBCD_ARR 002F                  ?_i2c_Ack 0070         ??_RTC_SetDateTime 0071  
    I2C_Read@v_i2cData_u8 0072                  _I2C_Init 05B9                  _I2C_Read 05EC  
                _I2C_Stop 0578                  _DELAY_ms 05D8                  _DELAY_us 0596  
         _RTC_GetDateTime 0686                  _RTC_Init 060C               ??_i2c_NoAck 0070  
         _i2c_WaitForIdle 05A1                  _WPUBbits 0095                 main@ucMin 0027  
               main@ucSec 0026          __size_of_i2c_Ack 0007   __end_of_RTC_GetDateTime 0705  
              _ANSELHbits 0189                  __ptext10 0585                  __ptext11 057E  
                __ptext12 05D8                  __ptext13 0596             __size_of_main 00EB  
 __end_of_i2c_WaitForIdle 05AC                  init_ram0 05CB        RTC_GetDateTime@rtc 0074  
         _RTC_SetDateTime 062C          ?_RTC_GetDateTime 0070  
