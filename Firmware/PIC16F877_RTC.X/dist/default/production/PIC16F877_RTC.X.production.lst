

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Jul 02 22:28:33 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  0008                     	;# 
    35  0009                     	;# 
    36  000A                     	;# 
    37  000B                     	;# 
    38  000C                     	;# 
    39  000D                     	;# 
    40  000E                     	;# 
    41  000E                     	;# 
    42  000F                     	;# 
    43  0010                     	;# 
    44  0011                     	;# 
    45  0012                     	;# 
    46  0013                     	;# 
    47  0014                     	;# 
    48  0015                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001B                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001D                     	;# 
    59  001E                     	;# 
    60  001F                     	;# 
    61  0081                     	;# 
    62  0085                     	;# 
    63  0086                     	;# 
    64  0087                     	;# 
    65  0088                     	;# 
    66  0089                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  008E                     	;# 
    70  008F                     	;# 
    71  0090                     	;# 
    72  0091                     	;# 
    73  0092                     	;# 
    74  0093                     	;# 
    75  0093                     	;# 
    76  0093                     	;# 
    77  0094                     	;# 
    78  0095                     	;# 
    79  0096                     	;# 
    80  0097                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  0105                     	;# 
    90  0107                     	;# 
    91  0108                     	;# 
    92  0109                     	;# 
    93  010C                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  010E                     	;# 
    97  010F                     	;# 
    98  0185                     	;# 
    99  0187                     	;# 
   100  0188                     	;# 
   101  0189                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  008F                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0093                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0097                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009A                     	;# 
   162  009B                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  0105                     	;# 
   168  0107                     	;# 
   169  0108                     	;# 
   170  0109                     	;# 
   171  010C                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  0185                     	;# 
   177  0187                     	;# 
   178  0188                     	;# 
   179  0189                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  000E                     	;# 
   197  000E                     	;# 
   198  000F                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0013                     	;# 
   203  0014                     	;# 
   204  0015                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001D                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  0086                     	;# 
   220  0087                     	;# 
   221  0088                     	;# 
   222  0089                     	;# 
   223  008C                     	;# 
   224  008D                     	;# 
   225  008E                     	;# 
   226  008F                     	;# 
   227  0090                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0093                     	;# 
   232  0093                     	;# 
   233  0094                     	;# 
   234  0095                     	;# 
   235  0096                     	;# 
   236  0097                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009A                     	;# 
   240  009B                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  0105                     	;# 
   246  0107                     	;# 
   247  0108                     	;# 
   248  0109                     	;# 
   249  010C                     	;# 
   250  010C                     	;# 
   251  010D                     	;# 
   252  010E                     	;# 
   253  010F                     	;# 
   254  0185                     	;# 
   255  0187                     	;# 
   256  0188                     	;# 
   257  0189                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  0088                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  008F                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009A                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  0105                     	;# 
   324  0107                     	;# 
   325  0108                     	;# 
   326  0109                     	;# 
   327  010C                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  010F                     	;# 
   332  0185                     	;# 
   333  0187                     	;# 
   334  0188                     	;# 
   335  0189                     	;# 
   336  018C                     	;# 
   337  018D                     	;# 
   338                           
   339                           	psect	idataBANK0
   340  049C                     __pidataBANK0:	
   341                           
   342                           ;initializer for _ucBCD_ARR
   343  049C  34C0               	retlw	192
   344  049D  34F9               	retlw	249
   345  049E  34A4               	retlw	164
   346  049F  34B0               	retlw	176
   347  04A0  3499               	retlw	153
   348  04A1  3492               	retlw	146
   349  04A2  3482               	retlw	130
   350  04A3  34F8               	retlw	248
   351  04A4  3480               	retlw	128
   352  04A5  3490               	retlw	144
   353  0006                     _PORTBbits	set	6
   354  0007                     _PORTCbits	set	7
   355  0008                     _PORTDbits	set	8
   356  0013                     _SSPBUF	set	19
   357  0014                     _SSPCON	set	20
   358  0096                     _IOCB	set	150
   359  0081                     _OPTION_REGbits	set	129
   360  0093                     _SSPADD	set	147
   361  0094                     _SSPSTAT	set	148
   362  0086                     _TRISBbits	set	134
   363  0087                     _TRISCbits	set	135
   364  0088                     _TRISDbits	set	136
   365  0095                     _WPUBbits	set	149
   366  048D                     _ACKDT	set	1165
   367  048C                     _ACKEN	set	1164
   368  04A0                     _BF	set	1184
   369  048A                     _PEN	set	1162
   370  048B                     _RCEN	set	1163
   371  0489                     _RSEN	set	1161
   372  04A2                     _R_W	set	1186
   373  0488                     _SEN	set	1160
   374  043B                     _TRISC3	set	1083
   375  043C                     _TRISC4	set	1084
   376  0189                     _ANSELHbits	set	393
   377                           
   378                           ; #config settings
   379  0000                     
   380                           	psect	cinit
   381  07F0                     start_initialization:	
   382  07F0                     __initialization:	
   383                           
   384                           ; Initialize objects allocated to BANK0
   385  07F0  1383               	bcf	3,7	;select IRP bank0
   386  07F1  3039               	movlw	low (__pdataBANK0+10)
   387  07F2  00FD               	movwf	btemp+-1
   388  07F3  3004               	movlw	high __pidataBANK0
   389  07F4  00FE               	movwf	btemp
   390  07F5  309C               	movlw	low __pidataBANK0
   391  07F6  00FF               	movwf	btemp+1
   392  07F7  302F               	movlw	low __pdataBANK0
   393  07F8  0084               	movwf	4
   394  07F9  120A  118A  24DB   	fcall	init_ram0
   395  07FC                     end_of_initialization:	
   396                           ;End of C runtime variable initialization code
   397                           
   398  07FC                     __end_of__initialization:	
   399  07FC  0183               	clrf	3
   400  07FD  120A  118A  2E43   	ljmp	_main	;jump to C main() function
   401                           
   402                           	psect	dataBANK0
   403  002F                     __pdataBANK0:	
   404  002F                     _ucBCD_ARR:	
   405  002F                     	ds	10
   406                           
   407                           	psect	inittext
   408  04D7                     init_fetch0:	
   409                           ;	Called with low address in FSR and high address in W
   410                           
   411  04D7  087E               	movf	126,w
   412  04D8  008A               	movwf	10
   413  04D9  087F               	movf	127,w
   414  04DA  0082               	movwf	2
   415  04DB                     init_ram0:	
   416                           ;Called with:
   417                           ;	high address of idata address in btemp 
   418                           ;	low address of idata address in btemp+1 
   419                           ;	low address of data in FSR
   420                           ;	high address + 1 of data in btemp-1
   421                           
   422  04DB  24D7  120A  118A   	fcall	init_fetch0
   423  04DE  0080               	movwf	0
   424  04DF  0A84               	incf	4,f
   425  04E0  0804               	movf	4,w
   426  04E1  067D               	xorwf	125,w
   427  04E2  1903               	btfsc	3,2
   428  04E3  3400               	retlw	0
   429  04E4  0AFF               	incf	127,f
   430  04E5  1903               	btfsc	3,2
   431  04E6  0AFE               	incf	126,f
   432  04E7  2CDB               	goto	init_ram0
   433                           
   434                           	psect	cstackCOMMON
   435  0070                     __pcstackCOMMON:	
   436  0070                     ?_RTC_Init:	
   437  0070                     ?_RTC_SetDateTime:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_RTC_GetDateTime:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_vSendData595:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_DELAY_us:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_i2c_WaitForIdle:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ??_i2c_WaitForIdle:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_i2c_Ack:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ??_i2c_Ack:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_i2c_NoAck:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ??_i2c_NoAck:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_I2C_Init:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ??_I2C_Init:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_I2C_Start:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ??_I2C_Start:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_I2C_Stop:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ??_I2C_Stop:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_I2C_Write:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ??_I2C_Write:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_I2C_Read:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ??_I2C_Read:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_main:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     I2C_Write@v_i2cData_u8:	
   501                           ; 2 bytes @ 0x0
   502                           
   503  0070                     DELAY_us@us_count:	
   504                           ; 1 bytes @ 0x0
   505                           
   506                           
   507                           ; 2 bytes @ 0x0
   508  0070                     	ds	1
   509  0071                     ??_RTC_Init:	
   510  0071                     ??_RTC_SetDateTime:	
   511                           ; 1 bytes @ 0x1
   512                           
   513  0071                     I2C_Read@v_ackOption_u8:	
   514                           ; 1 bytes @ 0x1
   515                           
   516  0071                     RTC_SetDateTime@rtc:	
   517                           ; 1 bytes @ 0x1
   518                           
   519                           
   520                           ; 1 bytes @ 0x1
   521  0071                     	ds	1
   522  0072                     ?_DELAY_ms:	
   523  0072                     ??_vSendData595:	
   524                           ; 1 bytes @ 0x2
   525                           
   526  0072                     ??_DELAY_us:	
   527                           ; 1 bytes @ 0x2
   528                           
   529  0072                     I2C_Read@v_i2cData_u8:	
   530                           ; 1 bytes @ 0x2
   531                           
   532  0072                     DELAY_ms@ms_count:	
   533                           ; 1 bytes @ 0x2
   534                           
   535                           
   536                           ; 2 bytes @ 0x2
   537  0072                     	ds	1
   538  0073                     ??_RTC_GetDateTime:	
   539  0073                     vSendData595@x:	
   540                           ; 1 bytes @ 0x3
   541                           
   542                           
   543                           ; 1 bytes @ 0x3
   544  0073                     	ds	1
   545  0074                     ??_DELAY_ms:	
   546  0074                     vSendData595@i:	
   547                           ; 1 bytes @ 0x4
   548                           
   549  0074                     RTC_GetDateTime@rtc:	
   550                           ; 1 bytes @ 0x4
   551                           
   552                           
   553                           ; 1 bytes @ 0x4
   554  0074                     	ds	1
   555  0075                     vSendData595@temp:	
   556                           
   557                           ; 1 bytes @ 0x5
   558  0075                     	ds	1
   559  0076                     ??_main:	
   560                           
   561                           ; 1 bytes @ 0x6
   562  0076                     	ds	1
   563                           
   564                           	psect	cstackBANK0
   565  0020                     __pcstackBANK0:	
   566  0020                     main@ucSetData:	
   567                           
   568                           ; 1 bytes @ 0x0
   569  0020                     	ds	1
   570  0021                     main@ucSec:	
   571                           
   572                           ; 1 bytes @ 0x1
   573  0021                     	ds	1
   574  0022                     main@ucMin:	
   575                           
   576                           ; 1 bytes @ 0x2
   577  0022                     	ds	1
   578  0023                     main@ucHours:	
   579                           
   580                           ; 1 bytes @ 0x3
   581  0023                     	ds	1
   582  0024                     main@ucDate:	
   583                           
   584                           ; 1 bytes @ 0x4
   585  0024                     	ds	1
   586  0025                     main@ucMonth:	
   587                           
   588                           ; 1 bytes @ 0x5
   589  0025                     	ds	1
   590  0026                     main@ucYear:	
   591                           
   592                           ; 1 bytes @ 0x6
   593  0026                     	ds	1
   594  0027                     main@ucSetCnt:	
   595                           
   596                           ; 1 bytes @ 0x7
   597  0027                     	ds	1
   598  0028                     main@rtc:	
   599                           
   600                           ; 7 bytes @ 0x8
   601  0028                     	ds	7
   602                           
   603                           	psect	maintext
   604  0643                     __pmaintext:	
   605 ;;
   606 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   607 ;;
   608 ;; *************** function _main *****************
   609 ;; Defined at:
   610 ;;		line 19 in file "main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;  rtc             7    8[BANK0 ] struct .
   615 ;;  ucSetCnt        1    7[BANK0 ] unsigned char 
   616 ;;  ucYear          1    6[BANK0 ] unsigned char 
   617 ;;  ucMonth         1    5[BANK0 ] unsigned char 
   618 ;;  ucDate          1    4[BANK0 ] unsigned char 
   619 ;;  ucHours         1    3[BANK0 ] unsigned char 
   620 ;;  ucMin           1    2[BANK0 ] unsigned char 
   621 ;;  ucSec           1    1[BANK0 ] unsigned char 
   622 ;;  ucSetData       1    0[BANK0 ] unsigned char 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  2   36[None  ] int 
   625 ;; Registers used:
   626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : B00/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         0       0       0       0       0
   633 ;;      Locals:         0      15       0       0       0
   634 ;;      Temps:          1       0       0       0       0
   635 ;;      Totals:         1      15       0       0       0
   636 ;;Total ram usage:       16 bytes
   637 ;; Hardware stack levels required when called:    3
   638 ;; This function calls:
   639 ;;		_DELAY_ms
   640 ;;		_DELAY_us
   641 ;;		_RTC_GetDateTime
   642 ;;		_RTC_Init
   643 ;;		_RTC_SetDateTime
   644 ;;		_vSendData595
   645 ;; This function is called by:
   646 ;;		Startup code after reset
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _main
   652  0643                     _main:	
   653                           
   654                           ;main.c: 23: TRISCbits.TRISC5 = 0;
   655                           
   656                           ;incstack = 0
   657                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   658  0643  1683               	bsf	3,5	;RP0=1, select bank1
   659  0644  1303               	bcf	3,6	;RP1=0, select bank1
   660  0645  1287               	bcf	7,5	;volatile
   661                           
   662                           ;main.c: 24: TRISCbits.TRISC6 = 0;
   663  0646  1307               	bcf	7,6	;volatile
   664                           
   665                           ;main.c: 25: TRISCbits.TRISC7 = 0;
   666  0647  1387               	bcf	7,7	;volatile
   667                           
   668                           ;main.c: 26: TRISDbits.TRISD0 = 0;
   669  0648  1008               	bcf	8,0	;volatile
   670                           
   671                           ;main.c: 27: TRISDbits.TRISD1 = 0;
   672  0649  1088               	bcf	8,1	;volatile
   673                           
   674                           ;main.c: 29: TRISBbits.TRISB0 = 1;
   675  064A  1406               	bsf	6,0	;volatile
   676                           
   677                           ;main.c: 30: TRISBbits.TRISB1 = 1;
   678  064B  1486               	bsf	6,1	;volatile
   679                           
   680                           ;main.c: 31: TRISBbits.TRISB2 = 1;
   681  064C  1506               	bsf	6,2	;volatile
   682                           
   683                           ;main.c: 32: TRISBbits.TRISB7 = 0;
   684  064D  1386               	bcf	6,7	;volatile
   685                           
   686                           ;main.c: 34: WPUBbits.WPUB0 = 1;
   687  064E  1415               	bsf	21,0	;volatile
   688                           
   689                           ;main.c: 35: WPUBbits.WPUB1 = 1;
   690  064F  1495               	bsf	21,1	;volatile
   691                           
   692                           ;main.c: 36: WPUBbits.WPUB2 = 1;
   693  0650  1515               	bsf	21,2	;volatile
   694                           
   695                           ;main.c: 37: OPTION_REGbits.nRBPU = 0;
   696  0651  1381               	bcf	1,7	;volatile
   697                           
   698                           ;main.c: 39: ANSELHbits.ANS12 = 0;
   699  0652  1683               	bsf	3,5	;RP0=1, select bank3
   700  0653  1703               	bsf	3,6	;RP1=1, select bank3
   701  0654  1209               	bcf	9,4	;volatile
   702                           
   703                           ;main.c: 40: ANSELHbits.ANS10 = 0;
   704  0655  1109               	bcf	9,2	;volatile
   705                           
   706                           ;main.c: 41: ANSELHbits.ANS8 = 0;
   707  0656  1009               	bcf	9,0	;volatile
   708                           
   709                           ;main.c: 43: IOCB = 0x00;
   710  0657  1683               	bsf	3,5	;RP0=1, select bank1
   711  0658  1303               	bcf	3,6	;RP1=0, select bank1
   712  0659  0196               	clrf	22	;volatile
   713                           
   714                           ;main.c: 45: PORTBbits.RB7 = 1;
   715  065A  1283               	bcf	3,5	;RP0=0, select bank0
   716  065B  1303               	bcf	3,6	;RP1=0, select bank0
   717  065C  1786               	bsf	6,7	;volatile
   718                           
   719                           ;main.c: 48: uint8_t ucSec;
   720                           ;main.c: 49: uint8_t ucMin;
   721                           ;main.c: 50: uint8_t ucHours;
   722                           ;main.c: 51: uint8_t ucDate;
   723                           ;main.c: 52: uint8_t ucMonth;
   724                           ;main.c: 53: uint8_t ucYear;
   725                           ;main.c: 55: uint8_t ucSetData;
   726                           ;main.c: 56: uint8_t ucSetCnt;
   727                           ;main.c: 61: rtc_t rtc;
   728                           ;main.c: 65: ucSec = 0;
   729  065D  01A1               	clrf	main@ucSec
   730                           
   731                           ;main.c: 66: ucMin = 0;
   732  065E  01A2               	clrf	main@ucMin
   733                           
   734                           ;main.c: 67: ucHours = 0;
   735  065F  01A3               	clrf	main@ucHours
   736                           
   737                           ;main.c: 68: ucDate = 0;
   738  0660  01A4               	clrf	main@ucDate
   739                           
   740                           ;main.c: 69: ucMonth = 0;
   741  0661  01A5               	clrf	main@ucMonth
   742                           
   743                           ;main.c: 70: ucYear = 0;
   744  0662  01A6               	clrf	main@ucYear
   745                           
   746                           ;main.c: 72: ucSetData = 0;
   747  0663  01A0               	clrf	main@ucSetData
   748                           
   749                           ;main.c: 73: ucSetCnt = 0;
   750  0664  01A7               	clrf	main@ucSetCnt
   751                           
   752                           ;main.c: 77: RTC_Init();
   753  0665  120A  118A  251C  120A  118A  	fcall	_RTC_Init
   754                           
   755                           ;main.c: 81: rtc.hour = 0x23;
   756  066A  3023               	movlw	35
   757  066B  00F6               	movwf	??_main
   758  066C  0876               	movf	??_main,w
   759  066D  1283               	bcf	3,5	;RP0=0, select bank0
   760  066E  1303               	bcf	3,6	;RP1=0, select bank0
   761  066F  00AA               	movwf	main@rtc+2
   762                           
   763                           ;main.c: 82: rtc.min = 0x59;
   764  0670  3059               	movlw	89
   765  0671  00F6               	movwf	??_main
   766  0672  0876               	movf	??_main,w
   767  0673  00A9               	movwf	main@rtc+1
   768                           
   769                           ;main.c: 83: rtc.sec = 0x56;
   770  0674  3056               	movlw	86
   771  0675  00F6               	movwf	??_main
   772  0676  0876               	movf	??_main,w
   773  0677  00A8               	movwf	main@rtc
   774                           
   775                           ;main.c: 85: rtc.date = 0x31;
   776  0678  3031               	movlw	49
   777  0679  00F6               	movwf	??_main
   778  067A  0876               	movf	??_main,w
   779  067B  00AC               	movwf	main@rtc+4
   780                           
   781                           ;main.c: 86: rtc.month = 0x12;
   782  067C  3012               	movlw	18
   783  067D  00F6               	movwf	??_main
   784  067E  0876               	movf	??_main,w
   785  067F  00AD               	movwf	main@rtc+5
   786                           
   787                           ;main.c: 87: rtc.year = 0x16;
   788  0680  3016               	movlw	22
   789  0681  00F6               	movwf	??_main
   790  0682  0876               	movf	??_main,w
   791  0683  00AE               	movwf	main@rtc+6
   792                           
   793                           ;main.c: 88: rtc.weekDay = 5;
   794  0684  3005               	movlw	5
   795  0685  00F6               	movwf	??_main
   796  0686  0876               	movf	??_main,w
   797  0687  00AB               	movwf	main@rtc+3
   798                           
   799                           ;main.c: 93: RTC_SetDateTime(&rtc);
   800  0688  3028               	movlw	(low (main@rtc| 0))& (0+255)
   801  0689  120A  118A  256A  120A  118A  	fcall	_RTC_SetDateTime
   802  068E                     l1083:	
   803                           ;main.c: 96: while(1)
   804                           
   805                           
   806                           ;main.c: 97: {
   807                           ;main.c: 98: if(PORTBbits.RB0 == 0)
   808  068E  1283               	bcf	3,5	;RP0=0, select bank0
   809  068F  1303               	bcf	3,6	;RP1=0, select bank0
   810  0690  1806               	btfsc	6,0	;volatile
   811  0691  2EA7               	goto	l1095
   812                           
   813                           ;main.c: 99: {
   814                           ;main.c: 100: DELAY_ms(50);
   815  0692  3032               	movlw	50
   816  0693  00F2               	movwf	DELAY_ms@ms_count
   817  0694  3000               	movlw	0
   818  0695  00F3               	movwf	DELAY_ms@ms_count+1
   819  0696  120A  118A  24E8  120A  118A  	fcall	_DELAY_ms
   820                           
   821                           ;main.c: 101: if(PORTBbits.RB0 == 0)
   822  069B  1283               	bcf	3,5	;RP0=0, select bank0
   823  069C  1303               	bcf	3,6	;RP1=0, select bank0
   824  069D  1806               	btfsc	6,0	;volatile
   825  069E  2EA7               	goto	l1095
   826                           
   827                           ;main.c: 102: {
   828                           ;main.c: 103: ucSetCnt++;
   829  069F  3001               	movlw	1
   830  06A0  00F6               	movwf	??_main
   831  06A1  0876               	movf	??_main,w
   832  06A2  07A7               	addwf	main@ucSetCnt,f
   833                           
   834                           ;main.c: 104: if(ucSetCnt > 6)
   835  06A3  3007               	movlw	7
   836  06A4  0227               	subwf	main@ucSetCnt,w
   837  06A5  1803               	btfsc	3,0
   838                           
   839                           ;main.c: 105: {
   840                           ;main.c: 106: ucSetCnt = 0;
   841  06A6  01A7               	clrf	main@ucSetCnt
   842  06A7                     l1095:	
   843                           
   844                           ;main.c: 107: }
   845                           ;main.c: 108: }
   846                           ;main.c: 109: }
   847                           ;main.c: 111: if(ucSetCnt)
   848  06A7  0827               	movf	main@ucSetCnt,w
   849  06A8  1903               	btfsc	3,2
   850  06A9  2ECD               	goto	l1113
   851                           
   852                           ;main.c: 112: {
   853                           ;main.c: 114: if(PORTBbits.RB2 == 0)
   854  06AA  1906               	btfsc	6,2	;volatile
   855  06AB  2EBB               	goto	l44
   856                           
   857                           ;main.c: 115: {
   858                           ;main.c: 116: DELAY_ms(50);
   859  06AC  3032               	movlw	50
   860  06AD  00F2               	movwf	DELAY_ms@ms_count
   861  06AE  3000               	movlw	0
   862  06AF  00F3               	movwf	DELAY_ms@ms_count+1
   863  06B0  120A  118A  24E8  120A  118A  	fcall	_DELAY_ms
   864                           
   865                           ;main.c: 117: if(PORTBbits.RB2 == 0)
   866  06B5  1283               	bcf	3,5	;RP0=0, select bank0
   867  06B6  1303               	bcf	3,6	;RP1=0, select bank0
   868  06B7  1906               	btfsc	6,2	;volatile
   869  06B8  2EBB               	goto	l44
   870                           
   871                           ;main.c: 118: {
   872                           ;main.c: 119: ucSetData = 0;
   873  06B9  01A0               	clrf	main@ucSetData
   874                           
   875                           ;main.c: 120: PORTBbits.RB7 = 0;
   876  06BA  1386               	bcf	6,7	;volatile
   877  06BB                     l44:	
   878                           ;main.c: 123: else
   879                           ;main.c: 124: {
   880                           
   881                           ;main.c: 121: }
   882                           ;main.c: 122: }
   883                           
   884                           
   885                           ;main.c: 126: }
   886                           ;main.c: 129: if(PORTBbits.RB1 == 0)
   887  06BB  1886               	btfsc	6,1	;volatile
   888  06BC  2ECD               	goto	l1113
   889                           
   890                           ;main.c: 130: {
   891                           ;main.c: 131: DELAY_ms(50);
   892  06BD  3032               	movlw	50
   893  06BE  00F2               	movwf	DELAY_ms@ms_count
   894  06BF  3000               	movlw	0
   895  06C0  00F3               	movwf	DELAY_ms@ms_count+1
   896  06C1  120A  118A  24E8  120A  118A  	fcall	_DELAY_ms
   897                           
   898                           ;main.c: 132: if(PORTBbits.RB1 == 0)
   899  06C6  1283               	bcf	3,5	;RP0=0, select bank0
   900  06C7  1303               	bcf	3,6	;RP1=0, select bank0
   901  06C8  1886               	btfsc	6,1	;volatile
   902  06C9  2ECD               	goto	l1113
   903                           
   904                           ;main.c: 133: {
   905                           ;main.c: 134: ucSetData = 1;
   906  06CA  01A0               	clrf	main@ucSetData
   907  06CB  0AA0               	incf	main@ucSetData,f
   908                           
   909                           ;main.c: 135: PORTBbits.RB7 = 1;
   910  06CC  1786               	bsf	6,7	;volatile
   911  06CD                     l1113:	
   912                           ;main.c: 143: else
   913                           ;main.c: 144: {
   914                           
   915                           ;main.c: 141: }
   916                           ;main.c: 142: }
   917                           
   918                           ;main.c: 138: else
   919                           ;main.c: 139: {
   920                           
   921                           ;main.c: 136: }
   922                           ;main.c: 137: }
   923                           
   924                           
   925                           ;main.c: 146: }
   926                           ;main.c: 148: RTC_GetDateTime(&rtc);
   927  06CD  3028               	movlw	(low (main@rtc| 0))& (0+255)
   928  06CE  120A  118A  25C4  120A  118A  	fcall	_RTC_GetDateTime
   929                           
   930                           ;main.c: 149: PORTDbits.RD0 = 1; PORTDbits.RD1 = 1;
   931  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   932  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   933  06D5  1408               	bsf	8,0	;volatile
   934  06D6  1488               	bsf	8,1	;volatile
   935                           
   936                           ;main.c: 150: ucSec = rtc.sec;
   937  06D7  0828               	movf	main@rtc,w
   938  06D8  00F6               	movwf	??_main
   939  06D9  0876               	movf	??_main,w
   940  06DA  00A1               	movwf	main@ucSec
   941                           
   942                           ;main.c: 151: ucMin = rtc.min;
   943  06DB  0829               	movf	main@rtc+1,w
   944  06DC  00F6               	movwf	??_main
   945  06DD  0876               	movf	??_main,w
   946  06DE  00A2               	movwf	main@ucMin
   947                           
   948                           ;main.c: 152: ucHours = rtc.hour;
   949  06DF  082A               	movf	main@rtc+2,w
   950  06E0  00F6               	movwf	??_main
   951  06E1  0876               	movf	??_main,w
   952  06E2  00A3               	movwf	main@ucHours
   953                           
   954                           ;main.c: 153: ucDate = rtc.date;
   955  06E3  082C               	movf	main@rtc+4,w
   956  06E4  00F6               	movwf	??_main
   957  06E5  0876               	movf	??_main,w
   958  06E6  00A4               	movwf	main@ucDate
   959                           
   960                           ;main.c: 154: ucMonth = rtc.month;
   961  06E7  082D               	movf	main@rtc+5,w
   962  06E8  00F6               	movwf	??_main
   963  06E9  0876               	movf	??_main,w
   964  06EA  00A5               	movwf	main@ucMonth
   965                           
   966                           ;main.c: 155: ucYear = rtc.year;
   967  06EB  082E               	movf	main@rtc+6,w
   968  06EC  00F6               	movwf	??_main
   969  06ED  0876               	movf	??_main,w
   970  06EE  00A6               	movwf	main@ucYear
   971                           
   972                           ;main.c: 158: vSendData595(~ucBCD_ARR[(ucSec & 0xF0) >> 4]);
   973  06EF  0821               	movf	main@ucSec,w
   974  06F0  00F6               	movwf	??_main
   975  06F1  3004               	movlw	4
   976  06F2                     u605:	
   977  06F2  1003               	clrc
   978  06F3  0CF6               	rrf	??_main,f
   979  06F4  3EFF               	addlw	-1
   980  06F5  1D03               	skipz
   981  06F6  2EF2               	goto	u605
   982  06F7  0876               	movf	??_main,w
   983  06F8  390F               	andlw	15
   984  06F9  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
   985  06FA  0084               	movwf	4
   986  06FB  1383               	bcf	3,7	;select IRP bank0
   987  06FC  0900               	comf	0,w
   988  06FD  120A  118A  253C  120A  118A  	fcall	_vSendData595
   989                           
   990                           ;main.c: 159: vSendData595(~ucBCD_ARR[(ucMin & 0xF0) >> 4]);
   991  0702  1283               	bcf	3,5	;RP0=0, select bank0
   992  0703  1303               	bcf	3,6	;RP1=0, select bank0
   993  0704  0822               	movf	main@ucMin,w
   994  0705  00F6               	movwf	??_main
   995  0706  3004               	movlw	4
   996  0707                     u615:	
   997  0707  1003               	clrc
   998  0708  0CF6               	rrf	??_main,f
   999  0709  3EFF               	addlw	-1
  1000  070A  1D03               	skipz
  1001  070B  2F07               	goto	u615
  1002  070C  0876               	movf	??_main,w
  1003  070D  390F               	andlw	15
  1004  070E  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1005  070F  0084               	movwf	4
  1006  0710  1383               	bcf	3,7	;select IRP bank0
  1007  0711  0900               	comf	0,w
  1008  0712  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1009                           
  1010                           ;main.c: 160: vSendData595(~ucBCD_ARR[(ucHours & 0xF0) >> 4]);
  1011  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0719  0823               	movf	main@ucHours,w
  1014  071A  00F6               	movwf	??_main
  1015  071B  3004               	movlw	4
  1016  071C                     u625:	
  1017  071C  1003               	clrc
  1018  071D  0CF6               	rrf	??_main,f
  1019  071E  3EFF               	addlw	-1
  1020  071F  1D03               	skipz
  1021  0720  2F1C               	goto	u625
  1022  0721  0876               	movf	??_main,w
  1023  0722  390F               	andlw	15
  1024  0723  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1025  0724  0084               	movwf	4
  1026  0725  1383               	bcf	3,7	;select IRP bank0
  1027  0726  0900               	comf	0,w
  1028  0727  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1029                           
  1030                           ;main.c: 161: vSendData595(~ucBCD_ARR[(ucYear & 0xF0) >> 4]);
  1031  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1032  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1033  072E  0826               	movf	main@ucYear,w
  1034  072F  00F6               	movwf	??_main
  1035  0730  3004               	movlw	4
  1036  0731                     u635:	
  1037  0731  1003               	clrc
  1038  0732  0CF6               	rrf	??_main,f
  1039  0733  3EFF               	addlw	-1
  1040  0734  1D03               	skipz
  1041  0735  2F31               	goto	u635
  1042  0736  0876               	movf	??_main,w
  1043  0737  390F               	andlw	15
  1044  0738  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1045  0739  0084               	movwf	4
  1046  073A  1383               	bcf	3,7	;select IRP bank0
  1047  073B  0900               	comf	0,w
  1048  073C  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1049                           
  1050                           ;main.c: 162: vSendData595(~ucBCD_ARR[(ucMonth & 0xF0) >> 4]);
  1051  0741  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0742  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0743  0825               	movf	main@ucMonth,w
  1054  0744  00F6               	movwf	??_main
  1055  0745  3004               	movlw	4
  1056  0746                     u645:	
  1057  0746  1003               	clrc
  1058  0747  0CF6               	rrf	??_main,f
  1059  0748  3EFF               	addlw	-1
  1060  0749  1D03               	skipz
  1061  074A  2F46               	goto	u645
  1062  074B  0876               	movf	??_main,w
  1063  074C  390F               	andlw	15
  1064  074D  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1065  074E  0084               	movwf	4
  1066  074F  1383               	bcf	3,7	;select IRP bank0
  1067  0750  0900               	comf	0,w
  1068  0751  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1069                           
  1070                           ;main.c: 163: vSendData595(~ucBCD_ARR[(ucDate & 0xF0) >> 4]);
  1071  0756  1283               	bcf	3,5	;RP0=0, select bank0
  1072  0757  1303               	bcf	3,6	;RP1=0, select bank0
  1073  0758  0824               	movf	main@ucDate,w
  1074  0759  00F6               	movwf	??_main
  1075  075A  3004               	movlw	4
  1076  075B                     u655:	
  1077  075B  1003               	clrc
  1078  075C  0CF6               	rrf	??_main,f
  1079  075D  3EFF               	addlw	-1
  1080  075E  1D03               	skipz
  1081  075F  2F5B               	goto	u655
  1082  0760  0876               	movf	??_main,w
  1083  0761  390F               	andlw	15
  1084  0762  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1085  0763  0084               	movwf	4
  1086  0764  1383               	bcf	3,7	;select IRP bank0
  1087  0765  0900               	comf	0,w
  1088  0766  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1089                           
  1090                           ;main.c: 164: PORTCbits.RC7 = 0;
  1091  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1092  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1093  076D  1387               	bcf	7,7	;volatile
  1094                           
  1095                           ;main.c: 165: DELAY_us(10);
  1096  076E  300A               	movlw	10
  1097  076F  00F0               	movwf	DELAY_us@us_count
  1098  0770  3000               	movlw	0
  1099  0771  00F1               	movwf	DELAY_us@us_count+1
  1100  0772  120A  118A  24A6  120A  118A  	fcall	_DELAY_us
  1101                           
  1102                           ;main.c: 166: PORTCbits.RC7 = 1;
  1103  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0779  1787               	bsf	7,7	;volatile
  1106                           
  1107                           ;main.c: 168: PORTDbits.RD0 = 0; PORTDbits.RD1 = 1;
  1108  077A  1008               	bcf	8,0	;volatile
  1109  077B  1488               	bsf	8,1	;volatile
  1110                           
  1111                           ;main.c: 169: DELAY_ms(5);
  1112  077C  3005               	movlw	5
  1113  077D  00F2               	movwf	DELAY_ms@ms_count
  1114  077E  3000               	movlw	0
  1115  077F  00F3               	movwf	DELAY_ms@ms_count+1
  1116  0780  120A  118A  24E8  120A  118A  	fcall	_DELAY_ms
  1117                           
  1118                           ;main.c: 171: PORTDbits.RD1 = 1; PORTDbits.RD0 = 1;
  1119  0785  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0786  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0787  1488               	bsf	8,1	;volatile
  1122  0788  1408               	bsf	8,0	;volatile
  1123                           
  1124                           ;main.c: 172: vSendData595(~ucBCD_ARR[ucSec & 0x0F]);
  1125  0789  0821               	movf	main@ucSec,w
  1126  078A  390F               	andlw	15
  1127  078B  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1128  078C  0084               	movwf	4
  1129  078D  1383               	bcf	3,7	;select IRP bank0
  1130  078E  0900               	comf	0,w
  1131  078F  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1132                           
  1133                           ;main.c: 173: vSendData595(~ucBCD_ARR[ucMin & 0x0F]);
  1134  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0796  0822               	movf	main@ucMin,w
  1137  0797  390F               	andlw	15
  1138  0798  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1139  0799  0084               	movwf	4
  1140  079A  1383               	bcf	3,7	;select IRP bank0
  1141  079B  0900               	comf	0,w
  1142  079C  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1143                           
  1144                           ;main.c: 174: vSendData595(~ucBCD_ARR[ucHours & 0x0F]);
  1145  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1146  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1147  07A3  0823               	movf	main@ucHours,w
  1148  07A4  390F               	andlw	15
  1149  07A5  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1150  07A6  0084               	movwf	4
  1151  07A7  1383               	bcf	3,7	;select IRP bank0
  1152  07A8  0900               	comf	0,w
  1153  07A9  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1154                           
  1155                           ;main.c: 175: vSendData595(~ucBCD_ARR[ucYear & 0x0F]);
  1156  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1157  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1158  07B0  0826               	movf	main@ucYear,w
  1159  07B1  390F               	andlw	15
  1160  07B2  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1161  07B3  0084               	movwf	4
  1162  07B4  1383               	bcf	3,7	;select IRP bank0
  1163  07B5  0900               	comf	0,w
  1164  07B6  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1165                           
  1166                           ;main.c: 176: vSendData595(~ucBCD_ARR[ucMonth & 0x0F]);
  1167  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1168  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1169  07BD  0825               	movf	main@ucMonth,w
  1170  07BE  390F               	andlw	15
  1171  07BF  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1172  07C0  0084               	movwf	4
  1173  07C1  1383               	bcf	3,7	;select IRP bank0
  1174  07C2  0900               	comf	0,w
  1175  07C3  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1176                           
  1177                           ;main.c: 177: vSendData595(~ucBCD_ARR[ucDate & 0x0F]);
  1178  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1179  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1180  07CA  0824               	movf	main@ucDate,w
  1181  07CB  390F               	andlw	15
  1182  07CC  3E2F               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1183  07CD  0084               	movwf	4
  1184  07CE  1383               	bcf	3,7	;select IRP bank0
  1185  07CF  0900               	comf	0,w
  1186  07D0  120A  118A  253C  120A  118A  	fcall	_vSendData595
  1187                           
  1188                           ;main.c: 178: PORTCbits.RC7 = 0;
  1189  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1190  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1191  07D7  1387               	bcf	7,7	;volatile
  1192                           
  1193                           ;main.c: 179: DELAY_us(10);
  1194  07D8  300A               	movlw	10
  1195  07D9  00F0               	movwf	DELAY_us@us_count
  1196  07DA  3000               	movlw	0
  1197  07DB  00F1               	movwf	DELAY_us@us_count+1
  1198  07DC  120A  118A  24A6  120A  118A  	fcall	_DELAY_us
  1199                           
  1200                           ;main.c: 180: PORTCbits.RC7 = 1;
  1201  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1202  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1203  07E3  1787               	bsf	7,7	;volatile
  1204                           
  1205                           ;main.c: 182: PORTDbits.RD0 = 1; PORTDbits.RD1 = 0;
  1206  07E4  1408               	bsf	8,0	;volatile
  1207  07E5  1088               	bcf	8,1	;volatile
  1208                           
  1209                           ;main.c: 183: DELAY_ms(5);
  1210  07E6  3005               	movlw	5
  1211  07E7  00F2               	movwf	DELAY_ms@ms_count
  1212  07E8  3000               	movlw	0
  1213  07E9  00F3               	movwf	DELAY_ms@ms_count+1
  1214  07EA  120A  118A  24E8  120A  118A  	fcall	_DELAY_ms
  1215  07EF  2E8E               	goto	l1083
  1216  07F0                     __end_of_main:	
  1217                           ;main.c: 184: }
  1218                           ;main.c: 186: return (0);
  1219                           ;	Return value of _main is never used
  1220                           
  1221                           
  1222                           	psect	text1
  1223  053C                     __ptext1:	
  1224 ;; *************** function _vSendData595 *****************
  1225 ;; Defined at:
  1226 ;;		line 5 in file "IC74hc595.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  x               1    wreg     unsigned char 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  x               1    3[COMMON] unsigned char 
  1231 ;;  temp            1    5[COMMON] unsigned char 
  1232 ;;  i               1    4[COMMON] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0, pclath, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         0       0       0       0       0
  1243 ;;      Locals:         3       0       0       0       0
  1244 ;;      Temps:          1       0       0       0       0
  1245 ;;      Totals:         4       0       0       0       0
  1246 ;;Total ram usage:        4 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    1
  1249 ;; This function calls:
  1250 ;;		_DELAY_us
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           
  1257                           ;psect for function _vSendData595
  1258  053C                     _vSendData595:	
  1259                           
  1260                           ;incstack = 0
  1261                           ; Regs used in _vSendData595: [wreg+status,2+status,0+pclath+cstack]
  1262                           ;vSendData595@x stored from wreg
  1263  053C  00F3               	movwf	vSendData595@x
  1264                           
  1265                           ;IC74hc595.c: 9: unsigned char i, temp;
  1266                           ;IC74hc595.c: 11: for(i=0;i<8;i++)
  1267  053D  01F4               	clrf	vSendData595@i
  1268  053E                     L1:	
  1269  053E  3008               	movlw	8
  1270  053F  0274               	subwf	vSendData595@i,w
  1271  0540  1803               	btfsc	3,0
  1272  0541  0008               	return
  1273                           
  1274                           ;IC74hc595.c: 12: {
  1275                           ;IC74hc595.c: 13: temp=x;
  1276  0542  0873               	movf	vSendData595@x,w
  1277  0543  00F2               	movwf	??_vSendData595
  1278  0544  0872               	movf	??_vSendData595,w
  1279  0545  00F5               	movwf	vSendData595@temp
  1280                           
  1281                           ;IC74hc595.c: 14: temp=temp&0x80;
  1282  0546  0875               	movf	vSendData595@temp,w
  1283  0547  3980               	andlw	128
  1284  0548  00F2               	movwf	??_vSendData595
  1285  0549  0872               	movf	??_vSendData595,w
  1286  054A  00F5               	movwf	vSendData595@temp
  1287                           
  1288                           ;IC74hc595.c: 15: if(temp==0x80)
  1289  054B  3080               	movlw	128
  1290  054C  0675               	xorwf	vSendData595@temp,w
  1291  054D  1D03               	btfss	3,2
  1292  054E  2D53               	goto	l62
  1293                           
  1294                           ;IC74hc595.c: 16: {
  1295                           ;IC74hc595.c: 17: PORTCbits.RC5=1;
  1296  054F  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0550  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0551  1687               	bsf	7,5	;volatile
  1299                           
  1300                           ;IC74hc595.c: 18: }
  1301  0552  2D56               	goto	l1047
  1302  0553                     l62:	
  1303                           
  1304                           ;IC74hc595.c: 19: else
  1305                           ;IC74hc595.c: 20: {
  1306                           ;IC74hc595.c: 21: PORTCbits.RC5=0;
  1307  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0555  1287               	bcf	7,5	;volatile
  1310  0556                     l1047:	
  1311                           
  1312                           ;IC74hc595.c: 22: }
  1313                           ;IC74hc595.c: 23: x <<= 1;
  1314  0556  1003               	clrc
  1315  0557  0DF3               	rlf	vSendData595@x,f
  1316                           
  1317                           ;IC74hc595.c: 25: PORTCbits.RC6 = 0;
  1318  0558  1307               	bcf	7,6	;volatile
  1319                           
  1320                           ;IC74hc595.c: 26: DELAY_us(10);
  1321  0559  300A               	movlw	10
  1322  055A  00F0               	movwf	DELAY_us@us_count
  1323  055B  3000               	movlw	0
  1324  055C  00F1               	movwf	DELAY_us@us_count+1
  1325  055D  120A  118A  24A6  120A  118A  	fcall	_DELAY_us
  1326                           
  1327                           ;IC74hc595.c: 27: PORTCbits.RC6 = 1;
  1328  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0564  1707               	bsf	7,6	;volatile
  1331  0565  3001               	movlw	1
  1332  0566  00F2               	movwf	??_vSendData595
  1333  0567  0872               	movf	??_vSendData595,w
  1334  0568  07F4               	addwf	vSendData595@i,f
  1335  0569  2D3E               	goto	L1
  1336  056A                     __end_of_vSendData595:	
  1337                           
  1338                           	psect	text2
  1339  056A                     __ptext2:	
  1340 ;; *************** function _RTC_SetDateTime *****************
  1341 ;; Defined at:
  1342 ;;		line 95 in file "rtc.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  rtc             1    wreg     PTR struct .
  1345 ;;		 -> main@rtc(7), 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  rtc             1    1[COMMON] PTR struct .
  1348 ;;		 -> main@rtc(7), 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         1       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0
  1361 ;;      Totals:         1       0       0       0       0
  1362 ;;Total ram usage:        1 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    2
  1365 ;; This function calls:
  1366 ;;		_I2C_Start
  1367 ;;		_I2C_Stop
  1368 ;;		_I2C_Write
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           
  1375                           ;psect for function _RTC_SetDateTime
  1376  056A                     _RTC_SetDateTime:	
  1377                           
  1378                           ;incstack = 0
  1379                           ; Regs used in _RTC_SetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1380                           ;RTC_SetDateTime@rtc stored from wreg
  1381  056A  00F1               	movwf	RTC_SetDateTime@rtc
  1382                           
  1383                           ;rtc.c: 97: I2C_Start();
  1384  056B  120A  118A  2482  120A  118A  	fcall	_I2C_Start
  1385                           
  1386                           ;rtc.c: 99: I2C_Write(0xD0u);
  1387  0570  30D0               	movlw	208
  1388  0571  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1389                           
  1390                           ;rtc.c: 100: I2C_Write(0x00u);
  1391  0576  3000               	movlw	0
  1392  0577  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1393                           
  1394                           ;rtc.c: 102: I2C_Write(rtc->sec);
  1395  057C  0871               	movf	RTC_SetDateTime@rtc,w
  1396  057D  0084               	movwf	4
  1397  057E  1383               	bcf	3,7	;select IRP bank0
  1398  057F  0800               	movf	0,w
  1399  0580  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1400                           
  1401                           ;rtc.c: 103: I2C_Write(rtc->min);
  1402  0585  0A71               	incf	RTC_SetDateTime@rtc,w
  1403  0586  0084               	movwf	4
  1404  0587  1383               	bcf	3,7	;select IRP bank0
  1405  0588  0800               	movf	0,w
  1406  0589  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1407                           
  1408                           ;rtc.c: 104: I2C_Write(rtc->hour);
  1409  058E  0871               	movf	RTC_SetDateTime@rtc,w
  1410  058F  3E02               	addlw	2
  1411  0590  0084               	movwf	4
  1412  0591  1383               	bcf	3,7	;select IRP bank0
  1413  0592  0800               	movf	0,w
  1414  0593  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1415                           
  1416                           ;rtc.c: 105: I2C_Write(rtc->weekDay);
  1417  0598  0871               	movf	RTC_SetDateTime@rtc,w
  1418  0599  3E03               	addlw	3
  1419  059A  0084               	movwf	4
  1420  059B  1383               	bcf	3,7	;select IRP bank0
  1421  059C  0800               	movf	0,w
  1422  059D  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1423                           
  1424                           ;rtc.c: 106: I2C_Write(rtc->date);
  1425  05A2  0871               	movf	RTC_SetDateTime@rtc,w
  1426  05A3  3E04               	addlw	4
  1427  05A4  0084               	movwf	4
  1428  05A5  1383               	bcf	3,7	;select IRP bank0
  1429  05A6  0800               	movf	0,w
  1430  05A7  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1431                           
  1432                           ;rtc.c: 107: I2C_Write(rtc->month);
  1433  05AC  0871               	movf	RTC_SetDateTime@rtc,w
  1434  05AD  3E05               	addlw	5
  1435  05AE  0084               	movwf	4
  1436  05AF  1383               	bcf	3,7	;select IRP bank0
  1437  05B0  0800               	movf	0,w
  1438  05B1  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1439                           
  1440                           ;rtc.c: 108: I2C_Write(rtc->year);
  1441  05B6  0871               	movf	RTC_SetDateTime@rtc,w
  1442  05B7  3E06               	addlw	6
  1443  05B8  0084               	movwf	4
  1444  05B9  1383               	bcf	3,7	;select IRP bank0
  1445  05BA  0800               	movf	0,w
  1446  05BB  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1447                           
  1448                           ;rtc.c: 110: I2C_Stop();
  1449  05C0  120A  118A  2488   	fcall	_I2C_Stop
  1450  05C3  0008               	return
  1451  05C4                     __end_of_RTC_SetDateTime:	
  1452                           
  1453                           	psect	text3
  1454  051C                     __ptext3:	
  1455 ;; *************** function _RTC_Init *****************
  1456 ;; Defined at:
  1457 ;;		line 57 in file "rtc.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0
  1474 ;;      Totals:         0       0       0       0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    2
  1478 ;; This function calls:
  1479 ;;		_I2C_Init
  1480 ;;		_I2C_Start
  1481 ;;		_I2C_Stop
  1482 ;;		_I2C_Write
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _RTC_Init
  1490  051C                     _RTC_Init:	
  1491                           
  1492                           ;rtc.c: 59: I2C_Init();
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in _RTC_Init: [wreg+status,2+status,0+pclath+cstack]
  1496  051C  120A  118A  24C9  120A  118A  	fcall	_I2C_Init
  1497                           
  1498                           ;rtc.c: 60: I2C_Start();
  1499  0521  120A  118A  2482  120A  118A  	fcall	_I2C_Start
  1500                           
  1501                           ;rtc.c: 62: I2C_Write(0xD0u);
  1502  0526  30D0               	movlw	208
  1503  0527  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1504                           
  1505                           ;rtc.c: 63: I2C_Write(0x07u);
  1506  052C  3007               	movlw	7
  1507  052D  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1508                           
  1509                           ;rtc.c: 65: I2C_Write(0x00);
  1510  0532  3000               	movlw	0
  1511  0533  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1512                           
  1513                           ;rtc.c: 67: I2C_Stop();
  1514  0538  120A  118A  2488   	fcall	_I2C_Stop
  1515  053B  0008               	return
  1516  053C                     __end_of_RTC_Init:	
  1517                           
  1518                           	psect	text4
  1519  04C9                     __ptext4:	
  1520 ;; *************** function _I2C_Init *****************
  1521 ;; Defined at:
  1522 ;;		line 87 in file "i2c.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1536 ;;      Params:         0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0
  1539 ;;      Totals:         0       0       0       0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_RTC_Init
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           
  1550                           ;psect for function _I2C_Init
  1551  04C9                     _I2C_Init:	
  1552                           
  1553                           ;i2c.c: 89: TRISC3 = 0x01u;
  1554                           
  1555                           ;incstack = 0
  1556                           ; Regs used in _I2C_Init: [wreg]
  1557  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  1558  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  1559  04CB  1587               	bsf	7,3	;volatile
  1560                           
  1561                           ;i2c.c: 90: TRISC4 = 0x01u;
  1562  04CC  1607               	bsf	7,4	;volatile
  1563                           
  1564                           ;i2c.c: 92: SSPSTAT |= 0x80;
  1565  04CD  1794               	bsf	20,7	;volatile
  1566                           
  1567                           ;i2c.c: 93: SSPCON = 0x28;
  1568  04CE  3028               	movlw	40
  1569  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1570  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1571  04D1  0094               	movwf	20	;volatile
  1572                           
  1573                           ;i2c.c: 94: SSPADD = 50;
  1574  04D2  3032               	movlw	50
  1575  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  1576  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  1577  04D5  0093               	movwf	19	;volatile
  1578  04D6  0008               	return
  1579  04D7                     __end_of_I2C_Init:	
  1580                           
  1581                           	psect	text5
  1582  05C4                     __ptext5:	
  1583 ;; *************** function _RTC_GetDateTime *****************
  1584 ;; Defined at:
  1585 ;;		line 131 in file "rtc.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  rtc             1    wreg     PTR struct .
  1588 ;;		 -> main@rtc(7), 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  rtc             1    4[COMMON] PTR struct .
  1591 ;;		 -> main@rtc(7), 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         1       0       0       0       0
  1603 ;;      Temps:          1       0       0       0       0
  1604 ;;      Totals:         2       0       0       0       0
  1605 ;;Total ram usage:        2 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    2
  1608 ;; This function calls:
  1609 ;;		_I2C_Read
  1610 ;;		_I2C_Start
  1611 ;;		_I2C_Stop
  1612 ;;		_I2C_Write
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           
  1619                           ;psect for function _RTC_GetDateTime
  1620  05C4                     _RTC_GetDateTime:	
  1621                           
  1622                           ;incstack = 0
  1623                           ; Regs used in _RTC_GetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1624                           ;RTC_GetDateTime@rtc stored from wreg
  1625  05C4  00F4               	movwf	RTC_GetDateTime@rtc
  1626                           
  1627                           ;rtc.c: 133: I2C_Start();
  1628  05C5  120A  118A  2482  120A  118A  	fcall	_I2C_Start
  1629                           
  1630                           ;rtc.c: 135: I2C_Write(0xD0u);
  1631  05CA  30D0               	movlw	208
  1632  05CB  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1633                           
  1634                           ;rtc.c: 136: I2C_Write(0x00u);
  1635  05D0  3000               	movlw	0
  1636  05D1  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1637                           
  1638                           ;rtc.c: 138: I2C_Stop();
  1639  05D6  120A  118A  2488  120A  118A  	fcall	_I2C_Stop
  1640                           
  1641                           ;rtc.c: 140: I2C_Start();
  1642  05DB  120A  118A  2482  120A  118A  	fcall	_I2C_Start
  1643                           
  1644                           ;rtc.c: 141: I2C_Write(0xD1u);
  1645  05E0  30D1               	movlw	209
  1646  05E1  120A  118A  24BC  120A  118A  	fcall	_I2C_Write
  1647                           
  1648                           ;rtc.c: 143: rtc->sec = I2C_Read(1);
  1649  05E6  3001               	movlw	1
  1650  05E7  120A  118A  24FC  120A  118A  	fcall	_I2C_Read
  1651  05EC  00F3               	movwf	??_RTC_GetDateTime
  1652  05ED  0874               	movf	RTC_GetDateTime@rtc,w
  1653  05EE  0084               	movwf	4
  1654  05EF  0873               	movf	??_RTC_GetDateTime,w
  1655  05F0  1383               	bcf	3,7	;select IRP bank0
  1656  05F1  0080               	movwf	0
  1657                           
  1658                           ;rtc.c: 144: rtc->min = I2C_Read(1);
  1659  05F2  3001               	movlw	1
  1660  05F3  120A  118A  24FC  120A  118A  	fcall	_I2C_Read
  1661  05F8  00F3               	movwf	??_RTC_GetDateTime
  1662  05F9  0A74               	incf	RTC_GetDateTime@rtc,w
  1663  05FA  0084               	movwf	4
  1664  05FB  0873               	movf	??_RTC_GetDateTime,w
  1665  05FC  1383               	bcf	3,7	;select IRP bank0
  1666  05FD  0080               	movwf	0
  1667                           
  1668                           ;rtc.c: 145: rtc->hour= I2C_Read(1);
  1669  05FE  3001               	movlw	1
  1670  05FF  120A  118A  24FC  120A  118A  	fcall	_I2C_Read
  1671  0604  00F3               	movwf	??_RTC_GetDateTime
  1672  0605  0874               	movf	RTC_GetDateTime@rtc,w
  1673  0606  3E02               	addlw	2
  1674  0607  0084               	movwf	4
  1675  0608  0873               	movf	??_RTC_GetDateTime,w
  1676  0609  1383               	bcf	3,7	;select IRP bank0
  1677  060A  0080               	movwf	0
  1678                           
  1679                           ;rtc.c: 146: rtc->weekDay = I2C_Read(1);
  1680  060B  3001               	movlw	1
  1681  060C  120A  118A  24FC  120A  118A  	fcall	_I2C_Read
  1682  0611  00F3               	movwf	??_RTC_GetDateTime
  1683  0612  0874               	movf	RTC_GetDateTime@rtc,w
  1684  0613  3E03               	addlw	3
  1685  0614  0084               	movwf	4
  1686  0615  0873               	movf	??_RTC_GetDateTime,w
  1687  0616  1383               	bcf	3,7	;select IRP bank0
  1688  0617  0080               	movwf	0
  1689                           
  1690                           ;rtc.c: 147: rtc->date= I2C_Read(1);
  1691  0618  3001               	movlw	1
  1692  0619  120A  118A  24FC  120A  118A  	fcall	_I2C_Read
  1693  061E  00F3               	movwf	??_RTC_GetDateTime
  1694  061F  0874               	movf	RTC_GetDateTime@rtc,w
  1695  0620  3E04               	addlw	4
  1696  0621  0084               	movwf	4
  1697  0622  0873               	movf	??_RTC_GetDateTime,w
  1698  0623  1383               	bcf	3,7	;select IRP bank0
  1699  0624  0080               	movwf	0
  1700                           
  1701                           ;rtc.c: 148: rtc->month=I2C_Read(1);
  1702  0625  3001               	movlw	1
  1703  0626  120A  118A  24FC  120A  118A  	fcall	_I2C_Read
  1704  062B  00F3               	movwf	??_RTC_GetDateTime
  1705  062C  0874               	movf	RTC_GetDateTime@rtc,w
  1706  062D  3E05               	addlw	5
  1707  062E  0084               	movwf	4
  1708  062F  0873               	movf	??_RTC_GetDateTime,w
  1709  0630  1383               	bcf	3,7	;select IRP bank0
  1710  0631  0080               	movwf	0
  1711                           
  1712                           ;rtc.c: 149: rtc->year =I2C_Read(0);
  1713  0632  3000               	movlw	0
  1714  0633  120A  118A  24FC  120A  118A  	fcall	_I2C_Read
  1715  0638  00F3               	movwf	??_RTC_GetDateTime
  1716  0639  0874               	movf	RTC_GetDateTime@rtc,w
  1717  063A  3E06               	addlw	6
  1718  063B  0084               	movwf	4
  1719  063C  0873               	movf	??_RTC_GetDateTime,w
  1720  063D  1383               	bcf	3,7	;select IRP bank0
  1721  063E  0080               	movwf	0
  1722                           
  1723                           ;rtc.c: 151: I2C_Stop();
  1724  063F  120A  118A  2488   	fcall	_I2C_Stop
  1725  0642  0008               	return
  1726  0643                     __end_of_RTC_GetDateTime:	
  1727                           
  1728                           	psect	text6
  1729  04BC                     __ptext6:	
  1730 ;; *************** function _I2C_Write *****************
  1731 ;; Defined at:
  1732 ;;		line 179 in file "i2c.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  v_i2cData_u8    1    wreg     unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  v_i2cData_u8    1    0[COMMON] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         1       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0
  1749 ;;      Totals:         1       0       0       0       0
  1750 ;;Total ram usage:        1 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    1
  1753 ;; This function calls:
  1754 ;;		_i2c_WaitForIdle
  1755 ;; This function is called by:
  1756 ;;		_RTC_Init
  1757 ;;		_RTC_SetDateTime
  1758 ;;		_RTC_GetDateTime
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _I2C_Write
  1764  04BC                     _I2C_Write:	
  1765                           
  1766                           ;incstack = 0
  1767                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  1768                           ;I2C_Write@v_i2cData_u8 stored from wreg
  1769  04BC  00F0               	movwf	I2C_Write@v_i2cData_u8
  1770                           
  1771                           ;i2c.c: 183: SSPBUF = v_i2cData_u8;
  1772  04BD  0870               	movf	I2C_Write@v_i2cData_u8,w
  1773  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  1774  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  1775  04C0  0093               	movwf	19	;volatile
  1776  04C1                     l125:	
  1777                           ;i2c.c: 184: while(BF==1);
  1778                           
  1779  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  1780  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  1781  04C3  1814               	btfsc	20,0	;volatile
  1782  04C4  2CC1               	goto	l125
  1783                           
  1784                           ;i2c.c: 185: i2c_WaitForIdle();
  1785  04C5  120A  118A  24B1   	fcall	_i2c_WaitForIdle
  1786  04C8  0008               	return
  1787  04C9                     __end_of_I2C_Write:	
  1788                           
  1789                           	psect	text7
  1790  0488                     __ptext7:	
  1791 ;; *************** function _I2C_Stop *****************
  1792 ;; Defined at:
  1793 ;;		line 147 in file "i2c.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		None
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1807 ;;      Params:         0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; This function calls:
  1814 ;;		Nothing
  1815 ;; This function is called by:
  1816 ;;		_RTC_Init
  1817 ;;		_RTC_SetDateTime
  1818 ;;		_RTC_GetDateTime
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _I2C_Stop
  1824  0488                     _I2C_Stop:	
  1825                           
  1826                           ;i2c.c: 149: PEN = 1;
  1827                           
  1828                           ;incstack = 0
  1829                           ; Regs used in _I2C_Stop: []
  1830  0488  1683               	bsf	3,5	;RP0=1, select bank1
  1831  0489  1303               	bcf	3,6	;RP1=0, select bank1
  1832  048A  1511               	bsf	17,2	;volatile
  1833  048B                     l119:	
  1834                           ;i2c.c: 150: while(PEN == 1);
  1835                           
  1836  048B  1D11               	btfss	17,2	;volatile
  1837  048C  0008               	return
  1838  048D  2C8B               	goto	l119
  1839  048E                     __end_of_I2C_Stop:	
  1840                           
  1841                           	psect	text8
  1842  0482                     __ptext8:	
  1843 ;; *************** function _I2C_Start *****************
  1844 ;; Defined at:
  1845 ;;		line 118 in file "i2c.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		None
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1859 ;;      Params:         0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0
  1862 ;;      Totals:         0       0       0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_RTC_Init
  1869 ;;		_RTC_SetDateTime
  1870 ;;		_RTC_GetDateTime
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           
  1875                           ;psect for function _I2C_Start
  1876  0482                     _I2C_Start:	
  1877                           
  1878                           ;i2c.c: 120: SEN = 1;
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in _I2C_Start: []
  1882  0482  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0483  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0484  1411               	bsf	17,0	;volatile
  1885  0485                     l113:	
  1886                           ;i2c.c: 121: while(SEN == 1);
  1887                           
  1888  0485  1C11               	btfss	17,0	;volatile
  1889  0486  0008               	return
  1890  0487  2C85               	goto	l113
  1891  0488                     __end_of_I2C_Start:	
  1892                           
  1893                           	psect	text9
  1894  04FC                     __ptext9:	
  1895 ;; *************** function _I2C_Read *****************
  1896 ;; Defined at:
  1897 ;;		line 214 in file "i2c.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  v_ackOption_    1    wreg     unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  v_ackOption_    1    1[COMMON] unsigned char 
  1902 ;;  v_i2cData_u8    1    2[COMMON] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      unsigned char 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       0       0       0       0
  1913 ;;      Locals:         2       0       0       0       0
  1914 ;;      Temps:          1       0       0       0       0
  1915 ;;      Totals:         3       0       0       0       0
  1916 ;;Total ram usage:        3 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    1
  1919 ;; This function calls:
  1920 ;;		_i2c_Ack
  1921 ;;		_i2c_NoAck
  1922 ;;		_i2c_WaitForIdle
  1923 ;; This function is called by:
  1924 ;;		_RTC_GetDateTime
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _I2C_Read
  1930  04FC                     _I2C_Read:	
  1931                           
  1932                           ;incstack = 0
  1933                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  1934                           ;I2C_Read@v_ackOption_u8 stored from wreg
  1935  04FC  00F1               	movwf	I2C_Read@v_ackOption_u8
  1936                           
  1937                           ;i2c.c: 216: uint8_t v_i2cData_u8=0x00;
  1938  04FD  01F2               	clrf	I2C_Read@v_i2cData_u8
  1939                           
  1940                           ;i2c.c: 218: RCEN = 1;
  1941  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  1942  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0500  1591               	bsf	17,3	;volatile
  1944  0501                     l131:	
  1945                           ;i2c.c: 219: while(BF==0);
  1946                           
  1947  0501  1C14               	btfss	20,0	;volatile
  1948  0502  2D01               	goto	l131
  1949                           
  1950                           ;i2c.c: 220: v_i2cData_u8 = SSPBUF;
  1951  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1953  0505  0813               	movf	19,w	;volatile
  1954  0506  00F0               	movwf	??_I2C_Read
  1955  0507  0870               	movf	??_I2C_Read,w
  1956  0508  00F2               	movwf	I2C_Read@v_i2cData_u8
  1957                           
  1958                           ;i2c.c: 221: i2c_WaitForIdle();
  1959  0509  120A  118A  24B1  120A  118A  	fcall	_i2c_WaitForIdle
  1960                           
  1961                           ;i2c.c: 223: if(v_ackOption_u8==1)
  1962  050E  0371               	decf	I2C_Read@v_ackOption_u8,w
  1963  050F  1D03               	btfss	3,2
  1964  0510  2D17               	goto	l963
  1965                           
  1966                           ;i2c.c: 224: {
  1967                           ;i2c.c: 225: i2c_Ack();
  1968  0511  120A  118A  248E  120A  118A  	fcall	_i2c_Ack
  1969                           
  1970                           ;i2c.c: 226: }
  1971  0516  2D1A               	goto	l965
  1972  0517                     l963:	
  1973                           
  1974                           ;i2c.c: 227: else
  1975                           ;i2c.c: 228: {
  1976                           ;i2c.c: 229: i2c_NoAck();
  1977  0517  120A  118A  2495   	fcall	_i2c_NoAck
  1978  051A                     l965:	
  1979                           
  1980                           ;i2c.c: 230: }
  1981                           ;i2c.c: 232: return v_i2cData_u8;
  1982  051A  0872               	movf	I2C_Read@v_i2cData_u8,w
  1983  051B  0008               	return
  1984  051C                     __end_of_I2C_Read:	
  1985                           
  1986                           	psect	text10
  1987  04B1                     __ptext10:	
  1988 ;; *************** function _i2c_WaitForIdle *****************
  1989 ;; Defined at:
  1990 ;;		line 258 in file "i2c.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		None
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         0       0       0       0       0
  2005 ;;      Locals:         0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0
  2007 ;;      Totals:         0       0       0       0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_I2C_Write
  2014 ;;		_I2C_Read
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _i2c_WaitForIdle
  2020  04B1                     _i2c_WaitForIdle:	
  2021  04B1                     l139:	
  2022                           ;i2c.c: 260: while ( (SEN == 1) || (RSEN == 1) || (PEN == 1) || (RCEN == 1) || (R_W == 1
      +                          ) );
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _i2c_WaitForIdle: []
  2026                           
  2027  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  2028  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  2029  04B3  1C11               	btfss	17,0	;volatile
  2030  04B4  1891               	btfsc	17,1	;volatile
  2031  04B5  2CB1               	goto	l139
  2032  04B6  1D11               	btfss	17,2	;volatile
  2033  04B7  1991               	btfsc	17,3	;volatile
  2034  04B8  2CB1               	goto	l139
  2035  04B9  1D14               	btfss	20,2	;volatile
  2036  04BA  0008               	return
  2037  04BB  2CB1               	goto	l139
  2038  04BC                     __end_of_i2c_WaitForIdle:	
  2039                           
  2040                           	psect	text11
  2041  0495                     __ptext11:	
  2042 ;; *************** function _i2c_NoAck *****************
  2043 ;; Defined at:
  2044 ;;		line 299 in file "i2c.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		None
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         0       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0
  2061 ;;      Totals:         0       0       0       0       0
  2062 ;;Total ram usage:        0 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_I2C_Read
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _i2c_NoAck
  2073  0495                     _i2c_NoAck:	
  2074                           
  2075                           ;i2c.c: 301: ACKDT = 1;
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _i2c_NoAck: []
  2079  0495  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0496  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0497  1691               	bsf	17,5	;volatile
  2082                           
  2083                           ;i2c.c: 302: ACKEN = 1;
  2084  0498  1611               	bsf	17,4	;volatile
  2085  0499                     l151:	
  2086                           ;i2c.c: 303: while(ACKEN == 1);
  2087                           
  2088  0499  1E11               	btfss	17,4	;volatile
  2089  049A  0008               	return
  2090  049B  2C99               	goto	l151
  2091  049C                     __end_of_i2c_NoAck:	
  2092                           
  2093                           	psect	text12
  2094  048E                     __ptext12:	
  2095 ;; *************** function _i2c_Ack *****************
  2096 ;; Defined at:
  2097 ;;		line 279 in file "i2c.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		None
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_I2C_Read
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _i2c_Ack
  2126  048E                     _i2c_Ack:	
  2127                           
  2128                           ;i2c.c: 281: ACKDT = 0;
  2129                           
  2130                           ;incstack = 0
  2131                           ; Regs used in _i2c_Ack: []
  2132  048E  1683               	bsf	3,5	;RP0=1, select bank1
  2133  048F  1303               	bcf	3,6	;RP1=0, select bank1
  2134  0490  1291               	bcf	17,5	;volatile
  2135                           
  2136                           ;i2c.c: 282: ACKEN = 1;
  2137  0491  1611               	bsf	17,4	;volatile
  2138  0492                     l145:	
  2139                           ;i2c.c: 283: while(ACKEN == 1);
  2140                           
  2141  0492  1E11               	btfss	17,4	;volatile
  2142  0493  0008               	return
  2143  0494  2C92               	goto	l145
  2144  0495                     __end_of_i2c_Ack:	
  2145                           
  2146                           	psect	text13
  2147  04E8                     __ptext13:	
  2148 ;; *************** function _DELAY_ms *****************
  2149 ;; Defined at:
  2150 ;;		line 75 in file "delay.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  ms_count        2    2[COMMON] unsigned int 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0, pclath, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2164 ;;      Params:         2       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0
  2167 ;;      Totals:         2       0       0       0       0
  2168 ;;Total ram usage:        2 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    1
  2171 ;; This function calls:
  2172 ;;		_DELAY_us
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;;		_DELAY_sec
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _DELAY_ms
  2181  04E8                     _DELAY_ms:	
  2182  04E8                     l1007:	
  2183                           ;delay.c: 77: while (ms_count != 0)
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  2187                           
  2188  04E8  0872               	movf	DELAY_ms@ms_count,w
  2189  04E9  0473               	iorwf	DELAY_ms@ms_count+1,w
  2190  04EA  1903               	btfsc	3,2
  2191  04EB  0008               	return
  2192                           
  2193                           ;delay.c: 78: {
  2194                           ;delay.c: 79: DELAY_us(300u);
  2195  04EC  302C               	movlw	44
  2196  04ED  00F0               	movwf	DELAY_us@us_count
  2197  04EE  3001               	movlw	1
  2198  04EF  00F1               	movwf	DELAY_us@us_count+1
  2199  04F0  120A  118A  24A6  120A  118A  	fcall	_DELAY_us
  2200                           
  2201                           ;delay.c: 80: ms_count--;
  2202  04F5  3001               	movlw	1
  2203  04F6  02F2               	subwf	DELAY_ms@ms_count,f
  2204  04F7  3000               	movlw	0
  2205  04F8  1C03               	skipc
  2206  04F9  03F3               	decf	DELAY_ms@ms_count+1,f
  2207  04FA  02F3               	subwf	DELAY_ms@ms_count+1,f
  2208  04FB  2CE8               	goto	l1007
  2209  04FC                     __end_of_DELAY_ms:	
  2210                           
  2211                           	psect	text14
  2212  04A6                     __ptext14:	
  2213 ;; *************** function _DELAY_us *****************
  2214 ;; Defined at:
  2215 ;;		line 56 in file "delay.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  us_count        2    0[COMMON] unsigned int 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         2       0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0
  2232 ;;      Totals:         2       0       0       0       0
  2233 ;;Total ram usage:        2 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;;		_vSendData595
  2240 ;;		_DELAY_ms
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _DELAY_us
  2246  04A6                     _DELAY_us:	
  2247  04A6                     l937:	
  2248                           ;delay.c: 58: while (us_count != 0)
  2249                           
  2250                           ;incstack = 0
  2251                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  2252                           
  2253  04A6  0870               	movf	DELAY_us@us_count,w
  2254  04A7  0471               	iorwf	DELAY_us@us_count+1,w
  2255  04A8  1903               	btfsc	3,2
  2256  04A9  0008               	return
  2257                           
  2258                           ;delay.c: 59: {
  2259                           ;delay.c: 60: us_count--;
  2260  04AA  3001               	movlw	1
  2261  04AB  02F0               	subwf	DELAY_us@us_count,f
  2262  04AC  3000               	movlw	0
  2263  04AD  1C03               	skipc
  2264  04AE  03F1               	decf	DELAY_us@us_count+1,f
  2265  04AF  02F1               	subwf	DELAY_us@us_count+1,f
  2266  04B0  2CA6               	goto	l937
  2267  04B1                     __end_of_DELAY_us:	
  2268  007E                     btemp	set	126	;btemp
  2269  007E                     wtemp	set	126
  2270  007E                     wtemp0	set	126
  2271  0080                     wtemp1	set	128
  2272  0082                     wtemp2	set	130
  2273  0084                     wtemp3	set	132
  2274  0086                     wtemp4	set	134
  2275  0088                     wtemp5	set	136
  2276  007F                     wtemp6	set	127
  2277  007E                     ttemp	set	126
  2278  007E                     ttemp0	set	126
  2279  0081                     ttemp1	set	129
  2280  0084                     ttemp2	set	132
  2281  0087                     ttemp3	set	135
  2282  007F                     ttemp4	set	127
  2283  007E                     ltemp	set	126
  2284  007E                     ltemp0	set	126
  2285  0082                     ltemp1	set	130
  2286  0086                     ltemp2	set	134
  2287  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80     15      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    RTC_GetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK0[7]), 

    RTC_SetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK0[7]), 


Critical Paths under _main in COMMON

    _main->_vSendData595
    _vSendData595->_DELAY_us
    _RTC_SetDateTime->_I2C_Write
    _RTC_Init->_I2C_Write
    _RTC_GetDateTime->_I2C_Read
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    2308
                                              6 COMMON     1     1      0
                                              0 BANK0     15    15      0
                           _DELAY_ms
                           _DELAY_us
                    _RTC_GetDateTime
                           _RTC_Init
                    _RTC_SetDateTime
                       _vSendData595
 ---------------------------------------------------------------------------------
 (1) _vSendData595                                         4     4      0     350
                                              2 COMMON     4     4      0
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _RTC_SetDateTime                                      1     1      0     203
                                              1 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0      22
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_GetDateTime                                      2     2      0     249
                                              3 COMMON     2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      46
                                              0 COMMON     3     3      0
                            _i2c_Ack
                          _i2c_NoAck
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (3) _i2c_WaitForIdle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_NoAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DELAY_ms                                             2     0      2     576
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _DELAY_us                                             2     0      2     235
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms
     _DELAY_us
   _DELAY_us
   _RTC_GetDateTime
     _I2C_Read
       _i2c_Ack
       _i2c_NoAck
       _i2c_WaitForIdle
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_Init
     _I2C_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_SetDateTime
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _vSendData595
     _DELAY_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      19       5       31.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Jul 02 22:28:33 2017

                       pc 0002        __size_of_I2C_Start 0006               __CFG_CP$OFF 0000  
        ?_i2c_WaitForIdle 0070        __size_of_I2C_Write 000D                        _BF 04A0  
                      l44 06BB                        l62 0553                        fsr 0004  
                     l113 0485                       l131 0501                       l125 04C1  
                     l151 0499                       l119 048B                       l145 0492  
                     l139 04B1                       l937 04A6                       l963 0517  
                     l965 051A                       _PEN 048A              __CFG_CPD$OFF 0000  
                     u605 06F2                       u615 0707                       u625 071C  
                     u635 0731                       _SEN 0488                       u645 0746  
                     u655 075B                       _R_W 04A2   __end_of_RTC_SetDateTime 05C4  
                     fsr0 0004                       indf 0000              __CFG_FOSC$HS 0000  
            __CFG_LVP$OFF 0000                      l1007 04E8                      l1113 06CD  
                    l1047 0556                      l1083 068E                      l1095 06A7  
                    _IOCB 0096                      _RCEN 048B                      _RSEN 0489  
             main@ucHours 0023               main@ucMonth 0025              __CFG_WRT$OFF 0000  
                    _main 0643          __end_of_I2C_Init 04D7          __end_of_I2C_Read 051C  
                    btemp 007E          __end_of_I2C_Stop 048E                      ltemp 007E  
                    start 0000                      ttemp 007E                      wtemp 007E  
        __end_of_DELAY_ms 04FC          __end_of_DELAY_us 04B1           __end_of_i2c_Ack 0495  
           ?_vSendData595 0070                     ?_main 0070                     _ACKEN 048C  
                   _ACKDT 048D             __CFG_WDTE$OFF 0000              main@ucSetCnt 0027  
        __end_of_RTC_Init 053C         __end_of_I2C_Start 0488         __end_of_I2C_Write 04C9  
          __CFG_BOREN$OFF 0000                     pclath 000A                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F            ??_vSendData595 0072           __initialization 07F0  
            __end_of_main 07F0                    ??_main 0076        RTC_SetDateTime@rtc 0071  
        ?_RTC_SetDateTime 0070        __size_of_i2c_NoAck 0007                    _SSPADD 0093  
           main@ucSetData 0020                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013                 ??_i2c_Ack 0070  
          __CFG_PWRTE$OFF 0000     I2C_Write@v_i2cData_u8 0070          DELAY_ms@ms_count 0072  
               ?_I2C_Init 0070                 ?_I2C_Read 0070                 ?_I2C_Stop 0070  
               ?_DELAY_ms 0072                 ?_DELAY_us 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070              __pidataBANK0 049C         __end_of_i2c_NoAck 049C  
               ?_RTC_Init 0070                ??_I2C_Init 0070            _OPTION_REGbits 0081  
              ??_I2C_Read 0070                ??_I2C_Stop 0070                ??_DELAY_ms 0074  
              ??_DELAY_us 0072      __end_of_vSendData595 056A  __size_of_RTC_GetDateTime 007F  
              __pmaintext 0643                ??_RTC_Init 0071  __size_of_i2c_WaitForIdle 000B  
        DELAY_us@us_count 0070                   _SSPSTAT 0094                   _i2c_Ack 048E  
               _I2C_Start 0482                 _I2C_Write 04BC          vSendData595@temp 0075  
                 __ptext1 053C                   __ptext2 056A                   __ptext3 051C  
                 __ptext4 04C9                   __ptext5 05C4                   __ptext6 04BC  
                 __ptext7 0488                   __ptext8 0482                   __ptext9 04FC  
           vSendData595@i 0074             vSendData595@x 0073                   main@rtc 0028  
    end_of_initialization 07FC    I2C_Read@v_ackOption_u8 0071                ?_I2C_Start 0070  
              ?_I2C_Write 0070         ??_RTC_GetDateTime 0073                 _PORTBbits 0006  
               _PORTCbits 0007                 _PORTDbits 0008     __size_of_vSendData595 002E  
               _TRISBbits 0086                 _TRISCbits 0087                 _TRISDbits 0088  
       __size_of_I2C_Init 000E         __size_of_I2C_Read 0020         __size_of_I2C_Stop 0006  
       __size_of_DELAY_ms 0014         __size_of_DELAY_us 000B  __size_of_RTC_SetDateTime 005A  
       ??_i2c_WaitForIdle 0070                main@ucDate 0024                main@ucYear 0026  
            _vSendData595 053C                 _i2c_NoAck 0495         __size_of_RTC_Init 0020  
     start_initialization 07F0               ??_I2C_Start 0070               ??_I2C_Write 0070  
              init_fetch0 04D7               __pdataBANK0 002F                ?_i2c_NoAck 0070  
               ___latbits 0002             __pcstackBANK0 0020                 _ucBCD_ARR 002F  
                ?_i2c_Ack 0070         ??_RTC_SetDateTime 0071      I2C_Read@v_i2cData_u8 0072  
                _I2C_Init 04C9                  _I2C_Read 04FC                  _I2C_Stop 0488  
                _DELAY_ms 04E8                  _DELAY_us 04A6           _RTC_GetDateTime 05C4  
                _RTC_Init 051C               ??_i2c_NoAck 0070           _i2c_WaitForIdle 04B1  
                _WPUBbits 0095                 main@ucMin 0022                 main@ucSec 0021  
        __size_of_i2c_Ack 0007   __end_of_RTC_GetDateTime 0643                _ANSELHbits 0189  
                __ptext10 04B1                  __ptext11 0495                  __ptext12 048E  
                __ptext13 04E8                  __ptext14 04A6             __size_of_main 01AD  
 __end_of_i2c_WaitForIdle 04BC                  init_ram0 04DB        RTC_GetDateTime@rtc 0074  
         _RTC_SetDateTime 056A          ?_RTC_GetDateTime 0070  
