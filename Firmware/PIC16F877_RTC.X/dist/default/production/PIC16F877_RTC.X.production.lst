

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Sep 10 04:39:12 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.43
    33                           ; Generated 25/07/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456                           
   457                           	psect	idataBANK0
   458  0361                     __pidataBANK0:	
   459                           
   460                           ;initializer for _ucBCD_ARR
   461  0361  34FC               	retlw	252
   462  0362  3460               	retlw	96
   463  0363  34DA               	retlw	218
   464  0364  34F2               	retlw	242
   465  0365  3466               	retlw	102
   466  0366  34B6               	retlw	182
   467  0367  34BE               	retlw	190
   468  0368  34E0               	retlw	224
   469  0369  34FE               	retlw	254
   470  036A  34F6               	retlw	246
   471  0008                     _PORTD	set	8
   472  0013                     _SSPBUF	set	19
   473  0014                     _SSPCON	set	20
   474  0007                     _PORTCbits	set	7
   475  0006                     _PORTBbits	set	6
   476  0006                     _PORTB	set	6
   477  0093                     _SSPADD	set	147
   478  0094                     _SSPSTAT	set	148
   479  0096                     _IOCB	set	150
   480  0081                     _OPTION_REGbits	set	129
   481  0095                     _WPUBbits	set	149
   482  0089                     _TRISEbits	set	137
   483  0086                     _TRISBbits	set	134
   484  0088                     _TRISD	set	136
   485  0087                     _TRISCbits	set	135
   486  048C                     _ACKEN	set	1164
   487  048D                     _ACKDT	set	1165
   488  04A2                     _R_W	set	1186
   489  048B                     _RCEN	set	1163
   490  04A0                     _BF	set	1184
   491  048A                     _PEN	set	1162
   492  0488                     _SEN	set	1160
   493  043C                     _TRISC4	set	1084
   494  043B                     _TRISC3	set	1083
   495  0489                     _RSEN	set	1161
   496  0188                     _ANSELbits	set	392
   497  0189                     _ANSELHbits	set	393
   498                           
   499                           ; #config settings
   500  0000                     
   501                           	psect	cinit
   502  07F0                     start_initialization:	
   503  07F0                     __initialization:	
   504                           
   505                           ; Initialize objects allocated to BANK0
   506  07F0  1383               	bcf	3,7	;select IRP bank0
   507  07F1  303F               	movlw	low (__pdataBANK0+10)
   508  07F2  00FD               	movwf	btemp+-1
   509  07F3  3003               	movlw	high __pidataBANK0
   510  07F4  00FE               	movwf	btemp
   511  07F5  3061               	movlw	low __pidataBANK0
   512  07F6  00FF               	movwf	btemp+1
   513  07F7  3035               	movlw	low __pdataBANK0
   514  07F8  0084               	movwf	4
   515  07F9  120A  118A  23B1   	fcall	init_ram0
   516  07FC                     end_of_initialization:	
   517                           ;End of C runtime variable initialization code
   518                           
   519  07FC                     __end_of__initialization:	
   520  07FC  0183               	clrf	3
   521  07FD  120A  118A  2E43   	ljmp	_main	;jump to C main() function
   522                           
   523                           	psect	dataBANK0
   524  0035                     __pdataBANK0:	
   525  0035                     _ucBCD_ARR:	
   526  0035                     	ds	10
   527                           
   528                           	psect	inittext
   529  03AD                     init_fetch0:	
   530                           ;	Called with low address in FSR and high address in W
   531                           
   532  03AD  087E               	movf	126,w
   533  03AE  008A               	movwf	10
   534  03AF  087F               	movf	127,w
   535  03B0  0082               	movwf	2
   536  03B1                     init_ram0:	
   537                           ;Called with:
   538                           ;	high address of idata address in btemp 
   539                           ;	low address of idata address in btemp+1 
   540                           ;	low address of data in FSR
   541                           ;	high address + 1 of data in btemp-1
   542                           
   543  03B1  23AD  120A  118A   	fcall	init_fetch0
   544  03B4  0080               	movwf	0
   545  03B5  0A84               	incf	4,f
   546  03B6  0804               	movf	4,w
   547  03B7  067D               	xorwf	125,w
   548  03B8  1903               	btfsc	3,2
   549  03B9  3400               	retlw	0
   550  03BA  0AFF               	incf	127,f
   551  03BB  1903               	btfsc	3,2
   552  03BC  0AFE               	incf	126,f
   553  03BD  2BB1               	goto	init_ram0
   554                           
   555                           	psect	cstackCOMMON
   556  0070                     __pcstackCOMMON:	
   557  0070                     ?_RTC_Init:	
   558  0070                     ?_RTC_GetDateTime:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_ui8Hex2DECDisplay:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_ui8Dec2HexDisplay:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_RTC_SetDateTime:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_DELAY_us:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_i2c_WaitForIdle:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ??_i2c_WaitForIdle:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_i2c_Ack:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ??_i2c_Ack:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_i2c_NoAck:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ??_i2c_NoAck:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_I2C_Init:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ??_I2C_Init:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_I2C_Start:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ??_I2C_Start:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_I2C_Stop:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ??_I2C_Stop:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_I2C_Write:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_I2C_Write:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_I2C_Read:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??_I2C_Read:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?___bmul:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_main:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?___awdiv:	
   628                           ; 2 bytes @ 0x0
   629                           
   630  0070                     ?___awmod:	
   631                           ; 2 bytes @ 0x0
   632                           
   633  0070                     I2C_Write@v_i2cData_u8:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0070                     ___bmul@multiplicand:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     DELAY_us@us_count:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ___awdiv@divisor:	
   643                           ; 2 bytes @ 0x0
   644                           
   645  0070                     ___awmod@divisor:	
   646                           ; 2 bytes @ 0x0
   647                           
   648                           
   649                           ; 2 bytes @ 0x0
   650  0070                     	ds	1
   651  0071                     ??_RTC_Init:	
   652  0071                     ??_RTC_SetDateTime:	
   653                           ; 1 bytes @ 0x1
   654                           
   655  0071                     ??___bmul:	
   656                           ; 1 bytes @ 0x1
   657                           
   658  0071                     I2C_Read@v_ackOption_u8:	
   659                           ; 1 bytes @ 0x1
   660                           
   661  0071                     RTC_SetDateTime@rtc:	
   662                           ; 1 bytes @ 0x1
   663                           
   664                           
   665                           ; 1 bytes @ 0x1
   666  0071                     	ds	1
   667  0072                     ?_DELAY_ms:	
   668  0072                     ??_DELAY_us:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0072                     I2C_Read@v_i2cData_u8:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ___bmul@product:	
   675                           ; 1 bytes @ 0x2
   676                           
   677  0072                     DELAY_ms@ms_count:	
   678                           ; 1 bytes @ 0x2
   679                           
   680  0072                     ___awdiv@dividend:	
   681                           ; 2 bytes @ 0x2
   682                           
   683  0072                     ___awmod@dividend:	
   684                           ; 2 bytes @ 0x2
   685                           
   686                           
   687                           ; 2 bytes @ 0x2
   688  0072                     	ds	1
   689  0073                     ??_RTC_GetDateTime:	
   690  0073                     ___bmul@multiplier:	
   691                           ; 1 bytes @ 0x3
   692                           
   693                           
   694                           ; 1 bytes @ 0x3
   695  0073                     	ds	1
   696  0074                     ??_DELAY_ms:	
   697  0074                     ??_ui8Hex2DECDisplay:	
   698                           ; 1 bytes @ 0x4
   699                           
   700  0074                     ?_vDisplay:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ??___awdiv:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ??___awmod:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0074                     RTC_GetDateTime@rtc:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0074                     vDisplay@ui8Second:	
   713                           ; 1 bytes @ 0x4
   714                           
   715                           
   716                           ; 1 bytes @ 0x4
   717  0074                     	ds	1
   718  0075                     vDisplay@ui8Thrd:	
   719  0075                     ___awdiv@counter:	
   720                           ; 1 bytes @ 0x5
   721                           
   722  0075                     ___awmod@counter:	
   723                           ; 1 bytes @ 0x5
   724                           
   725                           
   726                           ; 1 bytes @ 0x5
   727  0075                     	ds	1
   728  0076                     vDisplay@ui8Fourth:	
   729  0076                     ui8Hex2DECDisplay@ui8Temp:	
   730                           ; 1 bytes @ 0x6
   731                           
   732  0076                     ___awdiv@sign:	
   733                           ; 1 bytes @ 0x6
   734                           
   735  0076                     ___awmod@sign:	
   736                           ; 1 bytes @ 0x6
   737                           
   738                           
   739                           ; 1 bytes @ 0x6
   740  0076                     	ds	1
   741  0077                     ??_vDisplay:	
   742  0077                     ui8Hex2DECDisplay@ui8Input:	
   743                           ; 1 bytes @ 0x7
   744                           
   745  0077                     ___awdiv@quotient:	
   746                           ; 1 bytes @ 0x7
   747                           
   748                           
   749                           ; 2 bytes @ 0x7
   750  0077                     	ds	1
   751  0078                     vDisplay@ui8First:	
   752                           
   753                           ; 1 bytes @ 0x8
   754  0078                     	ds	1
   755  0079                     ??_ui8Dec2HexDisplay:	
   756                           
   757                           ; 1 bytes @ 0x9
   758  0079                     	ds	3
   759                           
   760                           	psect	cstackBANK0
   761  0020                     __pcstackBANK0:	
   762  0020                     ui8Dec2HexDisplay@ui8Output:	
   763                           
   764                           ; 1 bytes @ 0x0
   765  0020                     	ds	1
   766  0021                     ui8Dec2HexDisplay@ui8Input:	
   767                           
   768                           ; 1 bytes @ 0x1
   769  0021                     	ds	1
   770  0022                     ui8Dec2HexDisplay@ui8Temp:	
   771                           
   772                           ; 1 bytes @ 0x2
   773  0022                     	ds	1
   774  0023                     ??_main:	
   775                           
   776                           ; 1 bytes @ 0x3
   777  0023                     	ds	3
   778  0026                     main@ucYear:	
   779                           
   780                           ; 1 bytes @ 0x6
   781  0026                     	ds	1
   782  0027                     main@ucSec:	
   783                           
   784                           ; 1 bytes @ 0x7
   785  0027                     	ds	1
   786  0028                     main@ucMin:	
   787                           
   788                           ; 1 bytes @ 0x8
   789  0028                     	ds	1
   790  0029                     main@ucHours:	
   791                           
   792                           ; 1 bytes @ 0x9
   793  0029                     	ds	1
   794  002A                     main@ucDate:	
   795                           
   796                           ; 1 bytes @ 0xA
   797  002A                     	ds	1
   798  002B                     main@ucMonth:	
   799                           
   800                           ; 1 bytes @ 0xB
   801  002B                     	ds	1
   802  002C                     main@ui8SetMode:	
   803                           
   804                           ; 1 bytes @ 0xC
   805  002C                     	ds	1
   806  002D                     main@ui8SetValue:	
   807                           
   808                           ; 1 bytes @ 0xD
   809  002D                     	ds	1
   810  002E                     main@rtc:	
   811                           
   812                           ; 7 bytes @ 0xE
   813  002E                     	ds	7
   814                           
   815                           	psect	maintext
   816  0643                     __pmaintext:	
   817 ;;
   818 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   819 ;;
   820 ;; *************** function _main *****************
   821 ;; Defined at:
   822 ;;		line 23 in file "main.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  rtc             7   14[BANK0 ] struct .
   827 ;;  ui8SetValue     1   13[BANK0 ] unsigned char 
   828 ;;  ui8SetMode      1   12[BANK0 ] unsigned char 
   829 ;;  ucMonth         1   11[BANK0 ] unsigned char 
   830 ;;  ucDate          1   10[BANK0 ] unsigned char 
   831 ;;  ucHours         1    9[BANK0 ] unsigned char 
   832 ;;  ucMin           1    8[BANK0 ] unsigned char 
   833 ;;  ucSec           1    7[BANK0 ] unsigned char 
   834 ;;  ucYear          1    6[BANK0 ] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  2   42[None  ] int 
   837 ;; Registers used:
   838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : B00/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         0      15       0       0       0
   846 ;;      Temps:          0       3       0       0       0
   847 ;;      Totals:         0      18       0       0       0
   848 ;;Total ram usage:       18 bytes
   849 ;; Hardware stack levels required when called:    3
   850 ;; This function calls:
   851 ;;		_DELAY_ms
   852 ;;		_RTC_GetDateTime
   853 ;;		_RTC_Init
   854 ;;		_RTC_SetDateTime
   855 ;;		_ui8Dec2HexDisplay
   856 ;;		_ui8Hex2DECDisplay
   857 ;;		_vDisplay
   858 ;; This function is called by:
   859 ;;		Startup code after reset
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function _main
   865  0643                     _main:	
   866                           
   867                           ;main.c: 27: TRISCbits.TRISC5 = 0;
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   871  0643  1683               	bsf	3,5	;RP0=1, select bank1
   872  0644  1303               	bcf	3,6	;RP1=0, select bank1
   873  0645  1287               	bcf	7,5	;volatile
   874                           
   875                           ;main.c: 28: TRISCbits.TRISC6 = 0;
   876  0646  1307               	bcf	7,6	;volatile
   877                           
   878                           ;main.c: 29: TRISCbits.TRISC7 = 0;
   879  0647  1387               	bcf	7,7	;volatile
   880                           
   881                           ;main.c: 31: TRISD = 0x00;
   882  0648  0188               	clrf	8	;volatile
   883                           
   884                           ;main.c: 33: TRISBbits.TRISB0 = 1;
   885  0649  1406               	bsf	6,0	;volatile
   886                           
   887                           ;main.c: 34: TRISBbits.TRISB1 = 1;
   888  064A  1486               	bsf	6,1	;volatile
   889                           
   890                           ;main.c: 35: TRISBbits.TRISB2 = 0;
   891  064B  1106               	bcf	6,2	;volatile
   892                           
   893                           ;main.c: 36: TRISBbits.TRISB3 = 0;
   894  064C  1186               	bcf	6,3	;volatile
   895                           
   896                           ;main.c: 37: TRISBbits.TRISB4 = 0;
   897  064D  1206               	bcf	6,4	;volatile
   898                           
   899                           ;main.c: 38: TRISBbits.TRISB5 = 0;
   900  064E  1286               	bcf	6,5	;volatile
   901                           
   902                           ;main.c: 40: TRISBbits.TRISB7 = 0;
   903  064F  1386               	bcf	6,7	;volatile
   904                           
   905                           ;main.c: 42: TRISEbits.TRISE0 = 0;
   906  0650  1009               	bcf	9,0	;volatile
   907                           
   908                           ;main.c: 44: WPUBbits.WPUB0 = 1;
   909  0651  1415               	bsf	21,0	;volatile
   910                           
   911                           ;main.c: 45: WPUBbits.WPUB1 = 1;
   912  0652  1495               	bsf	21,1	;volatile
   913                           
   914                           ;main.c: 46: WPUBbits.WPUB2 = 1;
   915  0653  1515               	bsf	21,2	;volatile
   916                           
   917                           ;main.c: 47: OPTION_REGbits.nRBPU = 0;
   918  0654  1381               	bcf	1,7	;volatile
   919                           
   920                           ;main.c: 49: ANSELHbits.ANS12 = 0;
   921  0655  1683               	bsf	3,5	;RP0=1, select bank3
   922  0656  1703               	bsf	3,6	;RP1=1, select bank3
   923  0657  1209               	bcf	9,4	;volatile
   924                           
   925                           ;main.c: 50: ANSELHbits.ANS10 = 0;
   926  0658  1109               	bcf	9,2	;volatile
   927                           
   928                           ;main.c: 51: ANSELHbits.ANS13 = 0;
   929  0659  1289               	bcf	9,5	;volatile
   930                           
   931                           ;main.c: 52: ANSELHbits.ANS11 = 0;
   932  065A  1189               	bcf	9,3	;volatile
   933                           
   934                           ;main.c: 53: ANSELHbits.ANS9 = 0;
   935  065B  1089               	bcf	9,1	;volatile
   936                           
   937                           ;main.c: 54: ANSELHbits.ANS8 = 0;
   938  065C  1009               	bcf	9,0	;volatile
   939                           
   940                           ;main.c: 55: ANSELbits.ANS5 = 0;
   941  065D  1288               	bcf	8,5	;volatile
   942                           
   943                           ;main.c: 57: IOCB = 0x00;
   944  065E  1683               	bsf	3,5	;RP0=1, select bank1
   945  065F  1303               	bcf	3,6	;RP1=0, select bank1
   946  0660  0196               	clrf	22	;volatile
   947                           
   948                           ;main.c: 59: PORTB = 0xFF;
   949  0661  30FF               	movlw	255
   950  0662  1283               	bcf	3,5	;RP0=0, select bank0
   951  0663  1303               	bcf	3,6	;RP1=0, select bank0
   952  0664  0086               	movwf	6	;volatile
   953                           
   954                           ;main.c: 62: uint8_t ucSec;
   955                           ;main.c: 63: uint8_t ucMin;
   956                           ;main.c: 64: uint8_t ucHours;
   957                           ;main.c: 65: uint8_t ucDate;
   958                           ;main.c: 66: uint8_t ucMonth;
   959                           ;main.c: 67: uint8_t ucYear;
   960                           ;main.c: 69: uint8_t ui8SetMode;
   961                           ;main.c: 70: uint8_t ui8SetValue;
   962                           ;main.c: 72: rtc_t rtc;
   963                           ;main.c: 76: ucSec = 0;
   964  0665  01A7               	clrf	main@ucSec
   965                           
   966                           ;main.c: 77: ucMin = 0;
   967  0666  01A8               	clrf	main@ucMin
   968                           
   969                           ;main.c: 78: ucHours = 0;
   970  0667  01A9               	clrf	main@ucHours
   971                           
   972                           ;main.c: 79: ucDate = 0;
   973  0668  01AA               	clrf	main@ucDate
   974                           
   975                           ;main.c: 80: ucMonth = 0;
   976  0669  01AB               	clrf	main@ucMonth
   977                           
   978                           ;main.c: 81: ucYear = 0;
   979  066A  01A6               	clrf	main@ucYear
   980                           
   981                           ;main.c: 83: ui8SetMode = 0;
   982  066B  01AC               	clrf	main@ui8SetMode
   983                           
   984                           ;main.c: 84: ui8SetValue = 0;
   985  066C  01AD               	clrf	main@ui8SetValue
   986                           
   987                           ;main.c: 87: RTC_Init();
   988  066D  120A  118A  2408  120A  118A  	fcall	_RTC_Init
   989                           
   990                           ;main.c: 91: rtc.hour = 0x00;
   991  0672  1283               	bcf	3,5	;RP0=0, select bank0
   992  0673  1303               	bcf	3,6	;RP1=0, select bank0
   993  0674  01B0               	clrf	main@rtc+2
   994                           
   995                           ;main.c: 92: rtc.min = 0x08;
   996  0675  3008               	movlw	8
   997  0676  00A3               	movwf	??_main
   998  0677  0823               	movf	??_main,w
   999  0678  00AF               	movwf	main@rtc+1
  1000                           
  1001                           ;main.c: 93: rtc.sec = 0x30;
  1002  0679  3030               	movlw	48
  1003  067A  00A3               	movwf	??_main
  1004  067B  0823               	movf	??_main,w
  1005  067C  00AE               	movwf	main@rtc
  1006                           
  1007                           ;main.c: 95: rtc.date = 0x31;
  1008  067D  3031               	movlw	49
  1009  067E  00A3               	movwf	??_main
  1010  067F  0823               	movf	??_main,w
  1011  0680  00B2               	movwf	main@rtc+4
  1012                           
  1013                           ;main.c: 96: rtc.month = 0x12;
  1014  0681  3012               	movlw	18
  1015  0682  00A3               	movwf	??_main
  1016  0683  0823               	movf	??_main,w
  1017  0684  00B3               	movwf	main@rtc+5
  1018                           
  1019                           ;main.c: 97: rtc.year = 0x16;
  1020  0685  3016               	movlw	22
  1021  0686  00A3               	movwf	??_main
  1022  0687  0823               	movf	??_main,w
  1023  0688  00B4               	movwf	main@rtc+6
  1024                           
  1025                           ;main.c: 98: rtc.weekDay = 5;
  1026  0689  3005               	movlw	5
  1027  068A  00A3               	movwf	??_main
  1028  068B  0823               	movf	??_main,w
  1029  068C  00B1               	movwf	main@rtc+3
  1030                           
  1031                           ;main.c: 153: switch(ui8SetMode)
  1032  068D  2F38               	goto	l1529
  1033  068E                     l1573:	
  1034                           ;main.c: 154: {
  1035                           ;main.c: 155: case 1:
  1036                           
  1037                           
  1038                           ;main.c: 156: {
  1039                           ;main.c: 157: if(ui8SetValue == 1)
  1040  068E  032D               	decf	main@ui8SetValue,w
  1041  068F  1D03               	btfss	3,2
  1042  0690  2E9A               	goto	l1583
  1043                           
  1044                           ;main.c: 158: {
  1045                           ;main.c: 159: ui8SetValue = 0;
  1046  0691  01AD               	clrf	main@ui8SetValue
  1047                           
  1048                           ;main.c: 160: ucSec++;
  1049  0692  3001               	movlw	1
  1050  0693  00A3               	movwf	??_main
  1051  0694  0823               	movf	??_main,w
  1052  0695  07A7               	addwf	main@ucSec,f
  1053                           
  1054                           ;main.c: 161: if(ucSec >= 60)
  1055  0696  303C               	movlw	60
  1056  0697  0227               	subwf	main@ucSec,w
  1057  0698  1803               	btfsc	3,0
  1058                           
  1059                           ;main.c: 162: {
  1060                           ;main.c: 163: ucSec = 0;
  1061  0699  01A7               	clrf	main@ucSec
  1062  069A                     l1583:	
  1063                           
  1064                           ;main.c: 164: }
  1065                           ;main.c: 165: }
  1066                           ;main.c: 167: vDisplay(1,2,3,4);
  1067  069A  3002               	movlw	2
  1068  069B  00A3               	movwf	??_main
  1069  069C  0823               	movf	??_main,w
  1070  069D  00F4               	movwf	vDisplay@ui8Second
  1071  069E  3003               	movlw	3
  1072  069F  00A4               	movwf	??_main+1
  1073  06A0  0824               	movf	??_main+1,w
  1074  06A1  00F5               	movwf	vDisplay@ui8Thrd
  1075  06A2  3004               	movlw	4
  1076  06A3  00A5               	movwf	??_main+2
  1077  06A4  0825               	movf	??_main+2,w
  1078  06A5  00F6               	movwf	vDisplay@ui8Fourth
  1079  06A6  3001               	movlw	1
  1080  06A7  120A  118A  2560  120A  118A  	fcall	_vDisplay
  1081                           
  1082                           ;main.c: 169: break;
  1083  06AC  2F38               	goto	l1529
  1084  06AD                     l1585:	
  1085                           ;main.c: 170: }
  1086                           ;main.c: 171: case 2:
  1087                           
  1088                           
  1089                           ;main.c: 172: {
  1090                           ;main.c: 173: if(ui8SetValue == 1)
  1091  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1092  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1093  06AF  032D               	decf	main@ui8SetValue,w
  1094  06B0  1D03               	btfss	3,2
  1095  06B1  2F38               	goto	l1529
  1096                           
  1097                           ;main.c: 174: {
  1098                           ;main.c: 175: ui8SetValue = 0;
  1099  06B2  01AD               	clrf	main@ui8SetValue
  1100                           
  1101                           ;main.c: 176: ucMin++;
  1102  06B3  3001               	movlw	1
  1103  06B4  00A3               	movwf	??_main
  1104  06B5  0823               	movf	??_main,w
  1105  06B6  07A8               	addwf	main@ucMin,f
  1106                           
  1107                           ;main.c: 177: if(ucMin >=60)
  1108  06B7  303C               	movlw	60
  1109  06B8  0228               	subwf	main@ucMin,w
  1110  06B9  1C03               	skipc
  1111  06BA  2F38               	goto	l1529
  1112                           
  1113                           ;main.c: 178: {
  1114                           ;main.c: 179: ucMin = 0;
  1115  06BB  01A8               	clrf	main@ucMin
  1116                           
  1117                           ;main.c: 180: }
  1118                           ;main.c: 181: }
  1119                           ;main.c: 182: break;
  1120  06BC  2F38               	goto	l1529
  1121  06BD                     l1595:	
  1122                           ;main.c: 183: }
  1123                           ;main.c: 184: case 3:
  1124                           
  1125                           
  1126                           ;main.c: 185: {
  1127                           ;main.c: 186: if(ui8SetValue == 1)
  1128  06BD  032D               	decf	main@ui8SetValue,w
  1129  06BE  1D03               	btfss	3,2
  1130  06BF  2F38               	goto	l1529
  1131                           
  1132                           ;main.c: 187: {
  1133                           ;main.c: 188: ui8SetValue = 0;
  1134  06C0  01AD               	clrf	main@ui8SetValue
  1135                           
  1136                           ;main.c: 189: ucHours++;
  1137  06C1  3001               	movlw	1
  1138  06C2  00A3               	movwf	??_main
  1139  06C3  0823               	movf	??_main,w
  1140  06C4  07A9               	addwf	main@ucHours,f
  1141                           
  1142                           ;main.c: 190: if(ucHours >=13)
  1143  06C5  300D               	movlw	13
  1144  06C6  0229               	subwf	main@ucHours,w
  1145  06C7  1C03               	skipc
  1146  06C8  2F38               	goto	l1529
  1147                           
  1148                           ;main.c: 191: {
  1149                           ;main.c: 192: ucHours = 0;
  1150  06C9  01A9               	clrf	main@ucHours
  1151                           
  1152                           ;main.c: 193: }
  1153                           ;main.c: 194: }
  1154                           ;main.c: 195: break;
  1155  06CA  2F38               	goto	l1529
  1156  06CB                     l1605:	
  1157                           ;main.c: 196: }
  1158                           ;main.c: 197: case 4:
  1159                           
  1160                           
  1161                           ;main.c: 198: {
  1162                           ;main.c: 199: if(ui8SetValue == 1)
  1163  06CB  032D               	decf	main@ui8SetValue,w
  1164  06CC  1D03               	btfss	3,2
  1165  06CD  2F38               	goto	l1529
  1166                           
  1167                           ;main.c: 200: {
  1168                           ;main.c: 201: ui8SetValue = 0;
  1169  06CE  01AD               	clrf	main@ui8SetValue
  1170                           
  1171                           ;main.c: 202: ucDate++;
  1172  06CF  3001               	movlw	1
  1173  06D0  00A3               	movwf	??_main
  1174  06D1  0823               	movf	??_main,w
  1175  06D2  07AA               	addwf	main@ucDate,f
  1176                           
  1177                           ;main.c: 203: if(ucDate >=31)
  1178  06D3  301F               	movlw	31
  1179  06D4  022A               	subwf	main@ucDate,w
  1180  06D5  1C03               	skipc
  1181  06D6  2F38               	goto	l1529
  1182                           
  1183                           ;main.c: 204: {
  1184                           ;main.c: 205: ucDate = 0;
  1185  06D7  01AA               	clrf	main@ucDate
  1186                           
  1187                           ;main.c: 206: }
  1188                           ;main.c: 207: }
  1189                           ;main.c: 208: break;
  1190  06D8  2F38               	goto	l1529
  1191  06D9                     l1615:	
  1192                           ;main.c: 209: }
  1193                           ;main.c: 210: case 5:
  1194                           
  1195                           
  1196                           ;main.c: 211: {
  1197                           ;main.c: 212: if(ui8SetValue == 1)
  1198  06D9  032D               	decf	main@ui8SetValue,w
  1199  06DA  1D03               	btfss	3,2
  1200  06DB  2F38               	goto	l1529
  1201                           
  1202                           ;main.c: 213: {
  1203                           ;main.c: 214: ui8SetValue = 0;
  1204  06DC  01AD               	clrf	main@ui8SetValue
  1205                           
  1206                           ;main.c: 215: ucMonth++;
  1207  06DD  3001               	movlw	1
  1208  06DE  00A3               	movwf	??_main
  1209  06DF  0823               	movf	??_main,w
  1210  06E0  07AB               	addwf	main@ucMonth,f
  1211                           
  1212                           ;main.c: 216: if(ucMonth >=13)
  1213  06E1  300D               	movlw	13
  1214  06E2  022B               	subwf	main@ucMonth,w
  1215  06E3  1C03               	skipc
  1216  06E4  2F38               	goto	l1529
  1217                           
  1218                           ;main.c: 217: {
  1219                           ;main.c: 218: ucMonth = 0;
  1220  06E5  01AB               	clrf	main@ucMonth
  1221                           
  1222                           ;main.c: 219: }
  1223                           ;main.c: 220: }
  1224                           ;main.c: 221: break;
  1225  06E6  2F38               	goto	l1529
  1226  06E7                     l1625:	
  1227                           ;main.c: 222: }
  1228                           ;main.c: 223: case 6:
  1229                           
  1230                           
  1231                           ;main.c: 224: {
  1232                           ;main.c: 225: if(ui8SetValue == 1)
  1233  06E7  032D               	decf	main@ui8SetValue,w
  1234  06E8  1D03               	btfss	3,2
  1235  06E9  2F38               	goto	l1529
  1236                           
  1237                           ;main.c: 226: {
  1238                           ;main.c: 227: ui8SetValue = 0;
  1239  06EA  01AD               	clrf	main@ui8SetValue
  1240                           
  1241                           ;main.c: 228: ucYear++;
  1242  06EB  3001               	movlw	1
  1243  06EC  00A3               	movwf	??_main
  1244  06ED  0823               	movf	??_main,w
  1245  06EE  07A6               	addwf	main@ucYear,f
  1246                           
  1247                           ;main.c: 229: if(ucYear >= 2099)
  1248  06EF  2F38               	goto	l1529
  1249  06F0                     l1633:	
  1250                           ;main.c: 237: {
  1251                           ;main.c: 239: }
  1252                           ;main.c: 240: case 8:
  1253                           
  1254                           ;main.c: 235: }
  1255                           ;main.c: 236: case 7:
  1256                           
  1257                           ;main.c: 232: }
  1258                           ;main.c: 233: }
  1259                           ;main.c: 234: break;
  1260                           
  1261                           ;main.c: 230: {
  1262                           ;main.c: 231: ucYear = 0;
  1263                           
  1264                           
  1265                           ;main.c: 241: {
  1266                           ;main.c: 243: rtc.sec = ui8Dec2HexDisplay(ucSec);
  1267  06F0  0827               	movf	main@ucSec,w
  1268  06F1  120A  118A  2428  120A  118A  	fcall	_ui8Dec2HexDisplay
  1269  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1270  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1271  06F8  00A3               	movwf	??_main
  1272  06F9  0823               	movf	??_main,w
  1273  06FA  00AE               	movwf	main@rtc
  1274                           
  1275                           ;main.c: 244: rtc.min = ui8Dec2HexDisplay(ucMin);
  1276  06FB  0828               	movf	main@ucMin,w
  1277  06FC  120A  118A  2428  120A  118A  	fcall	_ui8Dec2HexDisplay
  1278  0701  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0702  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0703  00A3               	movwf	??_main
  1281  0704  0823               	movf	??_main,w
  1282  0705  00AF               	movwf	main@rtc+1
  1283                           
  1284                           ;main.c: 245: rtc.hour = ui8Dec2HexDisplay(ucHours);
  1285  0706  0829               	movf	main@ucHours,w
  1286  0707  120A  118A  2428  120A  118A  	fcall	_ui8Dec2HexDisplay
  1287  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1288  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1289  070E  00A3               	movwf	??_main
  1290  070F  0823               	movf	??_main,w
  1291  0710  00B0               	movwf	main@rtc+2
  1292                           
  1293                           ;main.c: 246: rtc.date = ui8Dec2HexDisplay(ucDate);
  1294  0711  082A               	movf	main@ucDate,w
  1295  0712  120A  118A  2428  120A  118A  	fcall	_ui8Dec2HexDisplay
  1296  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0719  00A3               	movwf	??_main
  1299  071A  0823               	movf	??_main,w
  1300  071B  00B2               	movwf	main@rtc+4
  1301                           
  1302                           ;main.c: 247: rtc.month = ui8Dec2HexDisplay(ucMonth);
  1303  071C  082B               	movf	main@ucMonth,w
  1304  071D  120A  118A  2428  120A  118A  	fcall	_ui8Dec2HexDisplay
  1305  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0724  00A3               	movwf	??_main
  1308  0725  0823               	movf	??_main,w
  1309  0726  00B3               	movwf	main@rtc+5
  1310                           
  1311                           ;main.c: 248: rtc.year = ui8Dec2HexDisplay(ucYear);
  1312  0727  0826               	movf	main@ucYear,w
  1313  0728  120A  118A  2428  120A  118A  	fcall	_ui8Dec2HexDisplay
  1314  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1315  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1316  072F  00A3               	movwf	??_main
  1317  0730  0823               	movf	??_main,w
  1318  0731  00B4               	movwf	main@rtc+6
  1319                           
  1320                           ;main.c: 251: RTC_SetDateTime(&rtc);
  1321  0732  302E               	movlw	(low (main@rtc| 0))& (0+255)
  1322  0733  120A  118A  2506  120A  118A  	fcall	_RTC_SetDateTime
  1323  0738                     l1529:	
  1324                           ;main.c: 106: while(1)
  1325                           
  1326                           ;main.c: 257: }
  1327                           ;main.c: 258: }
  1328                           
  1329                           ;main.c: 255: {
  1330                           ;main.c: 256: break;
  1331                           
  1332                           ;main.c: 253: }
  1333                           ;main.c: 254: default:
  1334                           
  1335                           ;main.c: 252: break;
  1336                           
  1337                           
  1338                           ;main.c: 107: {
  1339                           ;main.c: 110: if(PORTBbits.RB1 == 0)
  1340  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1342  073A  1886               	btfsc	6,1	;volatile
  1343  073B  2F4B               	goto	l1537
  1344                           
  1345                           ;main.c: 111: {
  1346                           ;main.c: 112: DELAY_ms(100);
  1347  073C  3064               	movlw	100
  1348  073D  00F2               	movwf	DELAY_ms@ms_count
  1349  073E  3000               	movlw	0
  1350  073F  00F3               	movwf	DELAY_ms@ms_count+1
  1351  0740  120A  118A  23BE  120A  118A  	fcall	_DELAY_ms
  1352                           
  1353                           ;main.c: 113: if(PORTBbits.RB1 == 0)
  1354  0745  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0746  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0747  1886               	btfsc	6,1	;volatile
  1357  0748  2F4B               	goto	l1537
  1358                           
  1359                           ;main.c: 114: {
  1360                           ;main.c: 115: ui8SetMode = 1;
  1361  0749  01AC               	clrf	main@ui8SetMode
  1362  074A  0AAC               	incf	main@ui8SetMode,f
  1363  074B                     l1537:	
  1364                           
  1365                           ;main.c: 116: }
  1366                           ;main.c: 118: }
  1367                           ;main.c: 120: if(ui8SetMode!= 0)
  1368  074B  082C               	movf	main@ui8SetMode,w
  1369  074C  1903               	btfsc	3,2
  1370  074D  2FDD               	goto	l1641
  1371                           
  1372                           ;main.c: 121: {
  1373                           ;main.c: 122: if(PORTBbits.RB1 == 0)
  1374  074E  1886               	btfsc	6,1	;volatile
  1375  074F  2F65               	goto	l1551
  1376                           
  1377                           ;main.c: 123: {
  1378                           ;main.c: 124: DELAY_ms(100);
  1379  0750  3064               	movlw	100
  1380  0751  00F2               	movwf	DELAY_ms@ms_count
  1381  0752  3000               	movlw	0
  1382  0753  00F3               	movwf	DELAY_ms@ms_count+1
  1383  0754  120A  118A  23BE  120A  118A  	fcall	_DELAY_ms
  1384                           
  1385                           ;main.c: 125: if(PORTBbits.RB1 == 0)
  1386  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1387  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1388  075B  1886               	btfsc	6,1	;volatile
  1389  075C  2F65               	goto	l1551
  1390                           
  1391                           ;main.c: 126: {
  1392                           ;main.c: 127: ui8SetMode++;
  1393  075D  3001               	movlw	1
  1394  075E  00A3               	movwf	??_main
  1395  075F  0823               	movf	??_main,w
  1396  0760  07AC               	addwf	main@ui8SetMode,f
  1397                           
  1398                           ;main.c: 128: if(ui8SetMode > 8)
  1399  0761  3009               	movlw	9
  1400  0762  022C               	subwf	main@ui8SetMode,w
  1401  0763  1803               	btfsc	3,0
  1402                           
  1403                           ;main.c: 129: {
  1404                           ;main.c: 130: ui8SetMode = 0;
  1405  0764  01AC               	clrf	main@ui8SetMode
  1406  0765                     l1551:	
  1407                           
  1408                           ;main.c: 131: }
  1409                           ;main.c: 132: }
  1410                           ;main.c: 134: }
  1411                           ;main.c: 135: if(PORTBbits.RB0 == 0)
  1412  0765  1806               	btfsc	6,0	;volatile
  1413  0766  2F76               	goto	l1559
  1414                           
  1415                           ;main.c: 136: {
  1416                           ;main.c: 137: DELAY_ms(100);
  1417  0767  3064               	movlw	100
  1418  0768  00F2               	movwf	DELAY_ms@ms_count
  1419  0769  3000               	movlw	0
  1420  076A  00F3               	movwf	DELAY_ms@ms_count+1
  1421  076B  120A  118A  23BE  120A  118A  	fcall	_DELAY_ms
  1422                           
  1423                           ;main.c: 138: if(PORTBbits.RB0 == 0)
  1424  0770  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0771  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0772  1806               	btfsc	6,0	;volatile
  1427  0773  2F76               	goto	l1559
  1428                           
  1429                           ;main.c: 139: {
  1430                           ;main.c: 140: ui8SetValue = 1;
  1431  0774  01AD               	clrf	main@ui8SetValue
  1432  0775  0AAD               	incf	main@ui8SetValue,f
  1433  0776                     l1559:	
  1434                           
  1435                           ;main.c: 141: }
  1436                           ;main.c: 142: }
  1437                           ;main.c: 144: RTC_GetDateTime(&rtc);
  1438  0776  302E               	movlw	(low (main@rtc| 0))& (0+255)
  1439  0777  120A  118A  25C4  120A  118A  	fcall	_RTC_GetDateTime
  1440                           
  1441                           ;main.c: 145: ucSec = ui8Hex2DECDisplay(rtc.sec);
  1442  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1443  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1444  077E  082E               	movf	main@rtc,w
  1445  077F  120A  118A  23D2  120A  118A  	fcall	_ui8Hex2DECDisplay
  1446  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0786  00A3               	movwf	??_main
  1449  0787  0823               	movf	??_main,w
  1450  0788  00A7               	movwf	main@ucSec
  1451                           
  1452                           ;main.c: 146: ucMin = ui8Hex2DECDisplay(rtc.min);
  1453  0789  082F               	movf	main@rtc+1,w
  1454  078A  120A  118A  23D2  120A  118A  	fcall	_ui8Hex2DECDisplay
  1455  078F  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0790  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0791  00A3               	movwf	??_main
  1458  0792  0823               	movf	??_main,w
  1459  0793  00A8               	movwf	main@ucMin
  1460                           
  1461                           ;main.c: 147: ucHours = ui8Hex2DECDisplay(rtc.hour);
  1462  0794  0830               	movf	main@rtc+2,w
  1463  0795  120A  118A  23D2  120A  118A  	fcall	_ui8Hex2DECDisplay
  1464  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1465  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1466  079C  00A3               	movwf	??_main
  1467  079D  0823               	movf	??_main,w
  1468  079E  00A9               	movwf	main@ucHours
  1469                           
  1470                           ;main.c: 148: ucDate = ui8Hex2DECDisplay(rtc.date);
  1471  079F  0832               	movf	main@rtc+4,w
  1472  07A0  120A  118A  23D2  120A  118A  	fcall	_ui8Hex2DECDisplay
  1473  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1474  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1475  07A7  00A3               	movwf	??_main
  1476  07A8  0823               	movf	??_main,w
  1477  07A9  00AA               	movwf	main@ucDate
  1478                           
  1479                           ;main.c: 149: ucMonth = ui8Hex2DECDisplay(rtc.month);
  1480  07AA  0833               	movf	main@rtc+5,w
  1481  07AB  120A  118A  23D2  120A  118A  	fcall	_ui8Hex2DECDisplay
  1482  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1483  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1484  07B2  00A3               	movwf	??_main
  1485  07B3  0823               	movf	??_main,w
  1486  07B4  00AB               	movwf	main@ucMonth
  1487                           
  1488                           ;main.c: 150: ucYear = ui8Hex2DECDisplay(rtc.year);
  1489  07B5  0834               	movf	main@rtc+6,w
  1490  07B6  120A  118A  23D2  120A  118A  	fcall	_ui8Hex2DECDisplay
  1491  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1492  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1493  07BD  00A3               	movwf	??_main
  1494  07BE  0823               	movf	??_main,w
  1495  07BF  00A6               	movwf	main@ucYear
  1496  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1497  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1498  07C2  082C               	movf	main@ui8SetMode,w
  1499                           
  1500                           ; Switch size 1, requested type "space"
  1501                           ; Number of cases is 8, Range of values is 1 to 8
  1502                           ; switch strategies available:
  1503                           ; Name         Instructions Cycles
  1504                           ; simple_byte           25    13 (average)
  1505                           ; direct_byte           35    11 (fixed)
  1506                           ; jumptable            263     9 (fixed)
  1507                           ;	Chosen strategy is simple_byte
  1508  07C3  3A01               	xorlw	1	; case 1
  1509  07C4  1903               	skipnz
  1510  07C5  2E8E               	goto	l1573
  1511  07C6  3A03               	xorlw	3	; case 2
  1512  07C7  1903               	skipnz
  1513  07C8  2EAD               	goto	l1585
  1514  07C9  3A01               	xorlw	1	; case 3
  1515  07CA  1903               	skipnz
  1516  07CB  2EBD               	goto	l1595
  1517  07CC  3A07               	xorlw	7	; case 4
  1518  07CD  1903               	skipnz
  1519  07CE  2ECB               	goto	l1605
  1520  07CF  3A01               	xorlw	1	; case 5
  1521  07D0  1903               	skipnz
  1522  07D1  2ED9               	goto	l1615
  1523  07D2  3A03               	xorlw	3	; case 6
  1524  07D3  1903               	skipnz
  1525  07D4  2EE7               	goto	l1625
  1526  07D5  3A01               	xorlw	1	; case 7
  1527  07D6  1903               	skipnz
  1528  07D7  2EF0               	goto	l1633
  1529  07D8  3A0F               	xorlw	15	; case 8
  1530  07D9  1903               	skipnz
  1531  07DA  2EF0               	goto	l1633
  1532  07DB  2F38               	goto	l1529
  1533                           
  1534                           ;main.c: 260: }
  1535  07DC  2F38               	goto	l1529
  1536  07DD                     l1641:	
  1537                           
  1538                           ;main.c: 261: else
  1539                           ;main.c: 262: {
  1540                           ;main.c: 264: vDisplay(5,6,7,8);
  1541  07DD  3006               	movlw	6
  1542  07DE  00A3               	movwf	??_main
  1543  07DF  0823               	movf	??_main,w
  1544  07E0  00F4               	movwf	vDisplay@ui8Second
  1545  07E1  3007               	movlw	7
  1546  07E2  00A4               	movwf	??_main+1
  1547  07E3  0824               	movf	??_main+1,w
  1548  07E4  00F5               	movwf	vDisplay@ui8Thrd
  1549  07E5  3008               	movlw	8
  1550  07E6  00A5               	movwf	??_main+2
  1551  07E7  0825               	movf	??_main+2,w
  1552  07E8  00F6               	movwf	vDisplay@ui8Fourth
  1553  07E9  3005               	movlw	5
  1554  07EA  120A  118A  2560  120A  118A  	fcall	_vDisplay
  1555  07EF  2F38               	goto	l1529
  1556  07F0                     __end_of_main:	
  1557                           ;main.c: 265: }
  1558                           ;main.c: 266: }
  1559                           ;main.c: 268: return (0);
  1560                           ;	Return value of _main is never used
  1561                           
  1562                           
  1563                           	psect	text1
  1564  0560                     __ptext1:	
  1565 ;; *************** function _vDisplay *****************
  1566 ;; Defined at:
  1567 ;;		line 12 in file "display.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  ui8First        1    wreg     unsigned char 
  1570 ;;  ui8Second       1    4[COMMON] unsigned char 
  1571 ;;  ui8Thrd         1    5[COMMON] unsigned char 
  1572 ;;  ui8Fourth       1    6[COMMON] unsigned char 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  ui8First        1    8[COMMON] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         3       0       0       0       0
  1585 ;;      Locals:         1       0       0       0       0
  1586 ;;      Temps:          1       0       0       0       0
  1587 ;;      Totals:         5       0       0       0       0
  1588 ;;Total ram usage:        5 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    2
  1591 ;; This function calls:
  1592 ;;		_DELAY_ms
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _vDisplay
  1600  0560                     _vDisplay:	
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _vDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1604                           ;vDisplay@ui8First stored from wreg
  1605  0560  00F8               	movwf	vDisplay@ui8First
  1606                           
  1607                           ;display.c: 14: PORTD = ucBCD_ARR[ui8Fourth];
  1608  0561  0876               	movf	vDisplay@ui8Fourth,w
  1609  0562  3E35               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1610  0563  0084               	movwf	4
  1611  0564  1383               	bcf	3,7	;select IRP bank0
  1612  0565  0800               	movf	0,w
  1613  0566  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0567  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0568  0088               	movwf	8	;volatile
  1616                           
  1617                           ;display.c: 15: PORTB |= 0x3C;
  1618  0569  303C               	movlw	60
  1619  056A  00F7               	movwf	??_vDisplay
  1620  056B  0877               	movf	??_vDisplay,w
  1621  056C  0486               	iorwf	6,f	;volatile
  1622                           
  1623                           ;display.c: 16: PORTB &= 0xDF;
  1624  056D  30DF               	movlw	223
  1625  056E  00F7               	movwf	??_vDisplay
  1626  056F  0877               	movf	??_vDisplay,w
  1627  0570  0586               	andwf	6,f	;volatile
  1628                           
  1629                           ;display.c: 17: DELAY_ms(5);
  1630  0571  3005               	movlw	5
  1631  0572  00F2               	movwf	DELAY_ms@ms_count
  1632  0573  3000               	movlw	0
  1633  0574  00F3               	movwf	DELAY_ms@ms_count+1
  1634  0575  120A  118A  23BE  120A  118A  	fcall	_DELAY_ms
  1635                           
  1636                           ;display.c: 19: PORTD = ucBCD_ARR[ui8Thrd];
  1637  057A  0875               	movf	vDisplay@ui8Thrd,w
  1638  057B  3E35               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1639  057C  0084               	movwf	4
  1640  057D  1383               	bcf	3,7	;select IRP bank0
  1641  057E  0800               	movf	0,w
  1642  057F  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0580  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0581  0088               	movwf	8	;volatile
  1645                           
  1646                           ;display.c: 20: PORTB |= 0x3C;
  1647  0582  303C               	movlw	60
  1648  0583  00F7               	movwf	??_vDisplay
  1649  0584  0877               	movf	??_vDisplay,w
  1650  0585  0486               	iorwf	6,f	;volatile
  1651                           
  1652                           ;display.c: 21: PORTB &= 0xEF;
  1653  0586  30EF               	movlw	239
  1654  0587  00F7               	movwf	??_vDisplay
  1655  0588  0877               	movf	??_vDisplay,w
  1656  0589  0586               	andwf	6,f	;volatile
  1657                           
  1658                           ;display.c: 22: DELAY_ms(5);
  1659  058A  3005               	movlw	5
  1660  058B  00F2               	movwf	DELAY_ms@ms_count
  1661  058C  3000               	movlw	0
  1662  058D  00F3               	movwf	DELAY_ms@ms_count+1
  1663  058E  120A  118A  23BE  120A  118A  	fcall	_DELAY_ms
  1664                           
  1665                           ;display.c: 24: PORTD = ucBCD_ARR[ui8Second];
  1666  0593  0874               	movf	vDisplay@ui8Second,w
  1667  0594  3E35               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1668  0595  0084               	movwf	4
  1669  0596  1383               	bcf	3,7	;select IRP bank0
  1670  0597  0800               	movf	0,w
  1671  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1673  059A  0088               	movwf	8	;volatile
  1674                           
  1675                           ;display.c: 25: PORTB |= 0x3C;
  1676  059B  303C               	movlw	60
  1677  059C  00F7               	movwf	??_vDisplay
  1678  059D  0877               	movf	??_vDisplay,w
  1679  059E  0486               	iorwf	6,f	;volatile
  1680                           
  1681                           ;display.c: 26: PORTB &= 0xF7;
  1682  059F  30F7               	movlw	247
  1683  05A0  00F7               	movwf	??_vDisplay
  1684  05A1  0877               	movf	??_vDisplay,w
  1685  05A2  0586               	andwf	6,f	;volatile
  1686                           
  1687                           ;display.c: 27: DELAY_ms(5);
  1688  05A3  3005               	movlw	5
  1689  05A4  00F2               	movwf	DELAY_ms@ms_count
  1690  05A5  3000               	movlw	0
  1691  05A6  00F3               	movwf	DELAY_ms@ms_count+1
  1692  05A7  120A  118A  23BE  120A  118A  	fcall	_DELAY_ms
  1693                           
  1694                           ;display.c: 29: PORTD = ucBCD_ARR[ui8First];
  1695  05AC  0878               	movf	vDisplay@ui8First,w
  1696  05AD  3E35               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1697  05AE  0084               	movwf	4
  1698  05AF  1383               	bcf	3,7	;select IRP bank0
  1699  05B0  0800               	movf	0,w
  1700  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1701  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1702  05B3  0088               	movwf	8	;volatile
  1703                           
  1704                           ;display.c: 30: PORTB |= 0x3C;
  1705  05B4  303C               	movlw	60
  1706  05B5  00F7               	movwf	??_vDisplay
  1707  05B6  0877               	movf	??_vDisplay,w
  1708  05B7  0486               	iorwf	6,f	;volatile
  1709                           
  1710                           ;display.c: 31: PORTB &= 0xFB;
  1711  05B8  30FB               	movlw	251
  1712  05B9  00F7               	movwf	??_vDisplay
  1713  05BA  0877               	movf	??_vDisplay,w
  1714  05BB  0586               	andwf	6,f	;volatile
  1715                           
  1716                           ;display.c: 32: DELAY_ms(5);
  1717  05BC  3005               	movlw	5
  1718  05BD  00F2               	movwf	DELAY_ms@ms_count
  1719  05BE  3000               	movlw	0
  1720  05BF  00F3               	movwf	DELAY_ms@ms_count+1
  1721  05C0  120A  118A  23BE   	fcall	_DELAY_ms
  1722  05C3  0008               	return
  1723  05C4                     __end_of_vDisplay:	
  1724                           
  1725                           	psect	text2
  1726  03BE                     __ptext2:	
  1727 ;; *************** function _DELAY_ms *****************
  1728 ;; Defined at:
  1729 ;;		line 75 in file "delay.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  ms_count        2    2[COMMON] unsigned int 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, pclath, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         2       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0
  1745 ;;      Temps:          0       0       0       0       0
  1746 ;;      Totals:         2       0       0       0       0
  1747 ;;Total ram usage:        2 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    1
  1750 ;; This function calls:
  1751 ;;		_DELAY_us
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;;		_vDisplay
  1755 ;;		_DELAY_sec
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function _DELAY_ms
  1761  03BE                     _DELAY_ms:	
  1762  03BE                     l1221:	
  1763                           ;delay.c: 77: while (ms_count != 0)
  1764                           
  1765                           ;incstack = 0
  1766                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  1767                           
  1768  03BE  0872               	movf	DELAY_ms@ms_count,w
  1769  03BF  0473               	iorwf	DELAY_ms@ms_count+1,w
  1770  03C0  1903               	btfsc	3,2
  1771  03C1  0008               	return
  1772                           
  1773                           ;delay.c: 78: {
  1774                           ;delay.c: 79: DELAY_us(300u);
  1775  03C2  302C               	movlw	44
  1776  03C3  00F0               	movwf	DELAY_us@us_count
  1777  03C4  3001               	movlw	1
  1778  03C5  00F1               	movwf	DELAY_us@us_count+1
  1779  03C6  120A  118A  2376  120A  118A  	fcall	_DELAY_us
  1780                           
  1781                           ;delay.c: 80: ms_count--;
  1782  03CB  3001               	movlw	1
  1783  03CC  02F2               	subwf	DELAY_ms@ms_count,f
  1784  03CD  3000               	movlw	0
  1785  03CE  1C03               	skipc
  1786  03CF  03F3               	decf	DELAY_ms@ms_count+1,f
  1787  03D0  02F3               	subwf	DELAY_ms@ms_count+1,f
  1788  03D1  2BBE               	goto	l1221
  1789  03D2                     __end_of_DELAY_ms:	
  1790                           
  1791                           	psect	text3
  1792  0376                     __ptext3:	
  1793 ;; *************** function _DELAY_us *****************
  1794 ;; Defined at:
  1795 ;;		line 56 in file "delay.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  us_count        2    0[COMMON] unsigned int 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         2       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0
  1812 ;;      Totals:         2       0       0       0       0
  1813 ;;Total ram usage:        2 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_DELAY_ms
  1819 ;;		_vSendData595
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _DELAY_us
  1825  0376                     _DELAY_us:	
  1826  0376                     l1199:	
  1827                           ;delay.c: 58: while (us_count != 0)
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  1831                           
  1832  0376  0870               	movf	DELAY_us@us_count,w
  1833  0377  0471               	iorwf	DELAY_us@us_count+1,w
  1834  0378  1903               	btfsc	3,2
  1835  0379  0008               	return
  1836                           
  1837                           ;delay.c: 59: {
  1838                           ;delay.c: 60: us_count--;
  1839  037A  3001               	movlw	1
  1840  037B  02F0               	subwf	DELAY_us@us_count,f
  1841  037C  3000               	movlw	0
  1842  037D  1C03               	skipc
  1843  037E  03F1               	decf	DELAY_us@us_count+1,f
  1844  037F  02F1               	subwf	DELAY_us@us_count+1,f
  1845  0380  2B76               	goto	l1199
  1846  0381                     __end_of_DELAY_us:	
  1847                           
  1848                           	psect	text4
  1849  03D2                     __ptext4:	
  1850 ;; *************** function _ui8Hex2DECDisplay *****************
  1851 ;; Defined at:
  1852 ;;		line 50 in file "display.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  ui8Input        1    wreg     unsigned char 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  ui8Input        1    7[COMMON] unsigned char 
  1857 ;;  ui8Temp         1    6[COMMON] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      unsigned char 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0, pclath, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         0       0       0       0       0
  1868 ;;      Locals:         2       0       0       0       0
  1869 ;;      Temps:          2       0       0       0       0
  1870 ;;      Totals:         4       0       0       0       0
  1871 ;;Total ram usage:        4 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    1
  1874 ;; This function calls:
  1875 ;;		___bmul
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _ui8Hex2DECDisplay
  1883  03D2                     _ui8Hex2DECDisplay:	
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _ui8Hex2DECDisplay: [wreg+status,2+status,0+pclath+cstack]
  1887                           ;ui8Hex2DECDisplay@ui8Input stored from wreg
  1888  03D2  00F7               	movwf	ui8Hex2DECDisplay@ui8Input
  1889                           
  1890                           ;display.c: 53: uint8_t ui8Temp;
  1891                           ;display.c: 54: ui8Temp = ui8Input & 0xF0;
  1892  03D3  0877               	movf	ui8Hex2DECDisplay@ui8Input,w
  1893  03D4  39F0               	andlw	240
  1894  03D5  00F4               	movwf	??_ui8Hex2DECDisplay
  1895  03D6  0874               	movf	??_ui8Hex2DECDisplay,w
  1896  03D7  00F6               	movwf	ui8Hex2DECDisplay@ui8Temp
  1897                           
  1898                           ;display.c: 55: ui8Temp >>= 4;
  1899  03D8  0EF6               	swapf	ui8Hex2DECDisplay@ui8Temp,f
  1900  03D9  300F               	movlw	15
  1901  03DA  05F6               	andwf	ui8Hex2DECDisplay@ui8Temp,f
  1902                           
  1903                           ;display.c: 56: return ((ui8Temp * 10) + (ui8Input & 0x0F));
  1904  03DB  300F               	movlw	15
  1905  03DC  0577               	andwf	ui8Hex2DECDisplay@ui8Input,w
  1906  03DD  00F4               	movwf	??_ui8Hex2DECDisplay
  1907  03DE  300A               	movlw	10
  1908  03DF  00F5               	movwf	??_ui8Hex2DECDisplay+1
  1909  03E0  0875               	movf	??_ui8Hex2DECDisplay+1,w
  1910  03E1  00F0               	movwf	___bmul@multiplicand
  1911  03E2  0876               	movf	ui8Hex2DECDisplay@ui8Temp,w
  1912  03E3  120A  118A  239C   	fcall	___bmul
  1913  03E6  0774               	addwf	??_ui8Hex2DECDisplay,w
  1914  03E7  0008               	return
  1915  03E8                     __end_of_ui8Hex2DECDisplay:	
  1916                           
  1917                           	psect	text5
  1918  039C                     __ptext5:	
  1919 ;; *************** function ___bmul *****************
  1920 ;; Defined at:
  1921 ;;		line 4 in file "/usr/microchip/xc8/v1.43/sources/common/Umul8.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  multiplier      1    wreg     unsigned char 
  1924 ;;  multiplicand    1    0[COMMON] unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  multiplier      1    3[COMMON] unsigned char 
  1927 ;;  product         1    2[COMMON] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      unsigned char 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         1       0       0       0       0
  1938 ;;      Locals:         2       0       0       0       0
  1939 ;;      Temps:          1       0       0       0       0
  1940 ;;      Totals:         4       0       0       0       0
  1941 ;;Total ram usage:        4 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_ui8Hex2DECDisplay
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function ___bmul
  1952  039C                     ___bmul:	
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1956                           ;___bmul@multiplier stored from wreg
  1957  039C  00F3               	movwf	___bmul@multiplier
  1958  039D  01F2               	clrf	___bmul@product
  1959  039E                     l1255:	
  1960  039E  1C73               	btfss	___bmul@multiplier,0
  1961  039F  2BA4               	goto	l1259
  1962  03A0  0870               	movf	___bmul@multiplicand,w
  1963  03A1  00F1               	movwf	??___bmul
  1964  03A2  0871               	movf	??___bmul,w
  1965  03A3  07F2               	addwf	___bmul@product,f
  1966  03A4                     l1259:	
  1967  03A4  1003               	clrc
  1968  03A5  0DF0               	rlf	___bmul@multiplicand,f
  1969  03A6  1003               	clrc
  1970  03A7  0CF3               	rrf	___bmul@multiplier,f
  1971  03A8  0873               	movf	___bmul@multiplier,w
  1972  03A9  1D03               	btfss	3,2
  1973  03AA  2B9E               	goto	l1255
  1974  03AB  0872               	movf	___bmul@product,w
  1975  03AC  0008               	return
  1976  03AD                     __end_of___bmul:	
  1977                           
  1978                           	psect	text6
  1979  0428                     __ptext6:	
  1980 ;; *************** function _ui8Dec2HexDisplay *****************
  1981 ;; Defined at:
  1982 ;;		line 35 in file "display.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  ui8Input        1    wreg     unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  ui8Input        1    1[BANK0 ] unsigned char 
  1987 ;;  ui8Temp         1    2[BANK0 ] unsigned char 
  1988 ;;  ui8Output       1    0[BANK0 ] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      unsigned char 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       0       0       0       0
  1999 ;;      Locals:         0       3       0       0       0
  2000 ;;      Temps:          3       0       0       0       0
  2001 ;;      Totals:         3       3       0       0       0
  2002 ;;Total ram usage:        6 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    1
  2005 ;; This function calls:
  2006 ;;		___awdiv
  2007 ;;		___awmod
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           
  2014                           ;psect for function _ui8Dec2HexDisplay
  2015  0428                     _ui8Dec2HexDisplay:	
  2016                           
  2017                           ;incstack = 0
  2018                           ; Regs used in _ui8Dec2HexDisplay: [wreg+status,2+status,0+pclath+cstack]
  2019                           ;ui8Dec2HexDisplay@ui8Input stored from wreg
  2020  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2022  042A  00A1               	movwf	ui8Dec2HexDisplay@ui8Input
  2023                           
  2024                           ;display.c: 37: uint8_t ui8Output;
  2025                           ;display.c: 38: uint8_t ui8Temp;
  2026                           ;display.c: 40: ui8Temp = (uint8_t)ui8Input/10;
  2027  042B  300A               	movlw	10
  2028  042C  00F0               	movwf	___awdiv@divisor
  2029  042D  3000               	movlw	0
  2030  042E  00F1               	movwf	___awdiv@divisor+1
  2031  042F  0821               	movf	ui8Dec2HexDisplay@ui8Input,w
  2032  0430  00F9               	movwf	??_ui8Dec2HexDisplay
  2033  0431  01FA               	clrf	??_ui8Dec2HexDisplay+1
  2034  0432  0879               	movf	??_ui8Dec2HexDisplay,w
  2035  0433  00F2               	movwf	___awdiv@dividend
  2036  0434  087A               	movf	??_ui8Dec2HexDisplay+1,w
  2037  0435  00F3               	movwf	___awdiv@dividend+1
  2038  0436  120A  118A  24AD  120A  118A  	fcall	___awdiv
  2039  043B  0870               	movf	?___awdiv,w
  2040  043C  00FB               	movwf	??_ui8Dec2HexDisplay+2
  2041  043D  087B               	movf	??_ui8Dec2HexDisplay+2,w
  2042  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2043  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0440  00A2               	movwf	ui8Dec2HexDisplay@ui8Temp
  2045                           
  2046                           ;display.c: 41: ui8Output = ui8Temp;
  2047  0441  0822               	movf	ui8Dec2HexDisplay@ui8Temp,w
  2048  0442  00F9               	movwf	??_ui8Dec2HexDisplay
  2049  0443  0879               	movf	??_ui8Dec2HexDisplay,w
  2050  0444  00A0               	movwf	ui8Dec2HexDisplay@ui8Output
  2051                           
  2052                           ;display.c: 42: ui8Output <<= 4;
  2053  0445  0EA0               	swapf	ui8Dec2HexDisplay@ui8Output,f
  2054  0446  30F0               	movlw	240
  2055  0447  05A0               	andwf	ui8Dec2HexDisplay@ui8Output,f
  2056                           
  2057                           ;display.c: 44: ui8Temp = (uint8_t)ui8Input%10;
  2058  0448  300A               	movlw	10
  2059  0449  00F0               	movwf	___awmod@divisor
  2060  044A  3000               	movlw	0
  2061  044B  00F1               	movwf	___awmod@divisor+1
  2062  044C  0821               	movf	ui8Dec2HexDisplay@ui8Input,w
  2063  044D  00F9               	movwf	??_ui8Dec2HexDisplay
  2064  044E  01FA               	clrf	??_ui8Dec2HexDisplay+1
  2065  044F  0879               	movf	??_ui8Dec2HexDisplay,w
  2066  0450  00F2               	movwf	___awmod@dividend
  2067  0451  087A               	movf	??_ui8Dec2HexDisplay+1,w
  2068  0452  00F3               	movwf	___awmod@dividend+1
  2069  0453  120A  118A  2462   	fcall	___awmod
  2070  0456  0870               	movf	?___awmod,w
  2071  0457  00FB               	movwf	??_ui8Dec2HexDisplay+2
  2072  0458  087B               	movf	??_ui8Dec2HexDisplay+2,w
  2073  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2074  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2075  045B  00A2               	movwf	ui8Dec2HexDisplay@ui8Temp
  2076                           
  2077                           ;display.c: 45: ui8Output |= ui8Temp;
  2078  045C  0822               	movf	ui8Dec2HexDisplay@ui8Temp,w
  2079  045D  00F9               	movwf	??_ui8Dec2HexDisplay
  2080  045E  0879               	movf	??_ui8Dec2HexDisplay,w
  2081  045F  04A0               	iorwf	ui8Dec2HexDisplay@ui8Output,f
  2082                           
  2083                           ;display.c: 47: return ui8Output;
  2084  0460  0820               	movf	ui8Dec2HexDisplay@ui8Output,w
  2085  0461  0008               	return
  2086  0462                     __end_of_ui8Dec2HexDisplay:	
  2087                           
  2088                           	psect	text7
  2089  0462                     __ptext7:	
  2090 ;; *************** function ___awmod *****************
  2091 ;; Defined at:
  2092 ;;		line 6 in file "/usr/microchip/xc8/v1.43/sources/common/awmod.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  divisor         2    0[COMMON] int 
  2095 ;;  dividend        2    2[COMMON] int 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  sign            1    6[COMMON] unsigned char 
  2098 ;;  counter         1    5[COMMON] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  2    0[COMMON] int 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         4       0       0       0       0
  2109 ;;      Locals:         2       0       0       0       0
  2110 ;;      Temps:          1       0       0       0       0
  2111 ;;      Totals:         7       0       0       0       0
  2112 ;;Total ram usage:        7 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_ui8Dec2HexDisplay
  2118 ;;		_Binary2BCD
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function ___awmod
  2124  0462                     ___awmod:	
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2128  0462  01F6               	clrf	___awmod@sign
  2129  0463  1FF3               	btfss	___awmod@dividend+1,7
  2130  0464  2C6C               	goto	l1319
  2131  0465  09F2               	comf	___awmod@dividend,f
  2132  0466  09F3               	comf	___awmod@dividend+1,f
  2133  0467  0AF2               	incf	___awmod@dividend,f
  2134  0468  1903               	skipnz
  2135  0469  0AF3               	incf	___awmod@dividend+1,f
  2136  046A  01F6               	clrf	___awmod@sign
  2137  046B  0AF6               	incf	___awmod@sign,f
  2138  046C                     l1319:	
  2139  046C  1FF1               	btfss	___awmod@divisor+1,7
  2140  046D  2C73               	goto	l1323
  2141  046E  09F0               	comf	___awmod@divisor,f
  2142  046F  09F1               	comf	___awmod@divisor+1,f
  2143  0470  0AF0               	incf	___awmod@divisor,f
  2144  0471  1903               	skipnz
  2145  0472  0AF1               	incf	___awmod@divisor+1,f
  2146  0473                     l1323:	
  2147  0473  0870               	movf	___awmod@divisor,w
  2148  0474  0471               	iorwf	___awmod@divisor+1,w
  2149  0475  1903               	btfsc	3,2
  2150  0476  2CA0               	goto	l1341
  2151  0477  01F5               	clrf	___awmod@counter
  2152  0478  0AF5               	incf	___awmod@counter,f
  2153  0479                     l1331:	
  2154  0479  1BF1               	btfsc	___awmod@divisor+1,7
  2155  047A  2C87               	goto	l1333
  2156  047B  3001               	movlw	1
  2157  047C                     u905:	
  2158  047C  1003               	clrc
  2159  047D  0DF0               	rlf	___awmod@divisor,f
  2160  047E  0DF1               	rlf	___awmod@divisor+1,f
  2161  047F  3EFF               	addlw	-1
  2162  0480  1D03               	skipz
  2163  0481  2C7C               	goto	u905
  2164  0482  3001               	movlw	1
  2165  0483  00F4               	movwf	??___awmod
  2166  0484  0874               	movf	??___awmod,w
  2167  0485  07F5               	addwf	___awmod@counter,f
  2168  0486  2C79               	goto	l1331
  2169  0487                     l1333:	
  2170  0487  0871               	movf	___awmod@divisor+1,w
  2171  0488  0273               	subwf	___awmod@dividend+1,w
  2172  0489  1D03               	skipz
  2173  048A  2C8D               	goto	u925
  2174  048B  0870               	movf	___awmod@divisor,w
  2175  048C  0272               	subwf	___awmod@dividend,w
  2176  048D                     u925:	
  2177  048D  1C03               	skipc
  2178  048E  2C95               	goto	l1337
  2179  048F  0870               	movf	___awmod@divisor,w
  2180  0490  02F2               	subwf	___awmod@dividend,f
  2181  0491  0871               	movf	___awmod@divisor+1,w
  2182  0492  1C03               	skipc
  2183  0493  03F3               	decf	___awmod@dividend+1,f
  2184  0494  02F3               	subwf	___awmod@dividend+1,f
  2185  0495                     l1337:	
  2186  0495  3001               	movlw	1
  2187  0496                     u935:	
  2188  0496  1003               	clrc
  2189  0497  0CF1               	rrf	___awmod@divisor+1,f
  2190  0498  0CF0               	rrf	___awmod@divisor,f
  2191  0499  3EFF               	addlw	-1
  2192  049A  1D03               	skipz
  2193  049B  2C96               	goto	u935
  2194  049C  3001               	movlw	1
  2195  049D  02F5               	subwf	___awmod@counter,f
  2196  049E  1D03               	btfss	3,2
  2197  049F  2C87               	goto	l1333
  2198  04A0                     l1341:	
  2199  04A0  0876               	movf	___awmod@sign,w
  2200  04A1  1903               	btfsc	3,2
  2201  04A2  2CA8               	goto	l1345
  2202  04A3  09F2               	comf	___awmod@dividend,f
  2203  04A4  09F3               	comf	___awmod@dividend+1,f
  2204  04A5  0AF2               	incf	___awmod@dividend,f
  2205  04A6  1903               	skipnz
  2206  04A7  0AF3               	incf	___awmod@dividend+1,f
  2207  04A8                     l1345:	
  2208  04A8  0873               	movf	___awmod@dividend+1,w
  2209  04A9  00F1               	movwf	?___awmod+1
  2210  04AA  0872               	movf	___awmod@dividend,w
  2211  04AB  00F0               	movwf	?___awmod
  2212  04AC  0008               	return
  2213  04AD                     __end_of___awmod:	
  2214                           
  2215                           	psect	text8
  2216  04AD                     __ptext8:	
  2217 ;; *************** function ___awdiv *****************
  2218 ;; Defined at:
  2219 ;;		line 6 in file "/usr/microchip/xc8/v1.43/sources/common/awdiv.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  divisor         2    0[COMMON] int 
  2222 ;;  dividend        2    2[COMMON] int 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  quotient        2    7[COMMON] int 
  2225 ;;  sign            1    6[COMMON] unsigned char 
  2226 ;;  counter         1    5[COMMON] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  2    0[COMMON] int 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         4       0       0       0       0
  2237 ;;      Locals:         4       0       0       0       0
  2238 ;;      Temps:          1       0       0       0       0
  2239 ;;      Totals:         9       0       0       0       0
  2240 ;;Total ram usage:        9 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; This function calls:
  2243 ;;		Nothing
  2244 ;; This function is called by:
  2245 ;;		_ui8Dec2HexDisplay
  2246 ;;		_Binary2BCD
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function ___awdiv
  2252  04AD                     ___awdiv:	
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2256  04AD  01F6               	clrf	___awdiv@sign
  2257  04AE  1FF1               	btfss	___awdiv@divisor+1,7
  2258  04AF  2CB7               	goto	l1275
  2259  04B0  09F0               	comf	___awdiv@divisor,f
  2260  04B1  09F1               	comf	___awdiv@divisor+1,f
  2261  04B2  0AF0               	incf	___awdiv@divisor,f
  2262  04B3  1903               	skipnz
  2263  04B4  0AF1               	incf	___awdiv@divisor+1,f
  2264  04B5  01F6               	clrf	___awdiv@sign
  2265  04B6  0AF6               	incf	___awdiv@sign,f
  2266  04B7                     l1275:	
  2267  04B7  1FF3               	btfss	___awdiv@dividend+1,7
  2268  04B8  2CC2               	goto	l1281
  2269  04B9  09F2               	comf	___awdiv@dividend,f
  2270  04BA  09F3               	comf	___awdiv@dividend+1,f
  2271  04BB  0AF2               	incf	___awdiv@dividend,f
  2272  04BC  1903               	skipnz
  2273  04BD  0AF3               	incf	___awdiv@dividend+1,f
  2274  04BE  3001               	movlw	1
  2275  04BF  00F4               	movwf	??___awdiv
  2276  04C0  0874               	movf	??___awdiv,w
  2277  04C1  06F6               	xorwf	___awdiv@sign,f
  2278  04C2                     l1281:	
  2279  04C2  01F7               	clrf	___awdiv@quotient
  2280  04C3  01F8               	clrf	___awdiv@quotient+1
  2281  04C4  0870               	movf	___awdiv@divisor,w
  2282  04C5  0471               	iorwf	___awdiv@divisor+1,w
  2283  04C6  1903               	btfsc	3,2
  2284  04C7  2CF9               	goto	l1303
  2285  04C8  01F5               	clrf	___awdiv@counter
  2286  04C9  0AF5               	incf	___awdiv@counter,f
  2287  04CA                     l1291:	
  2288  04CA  1BF1               	btfsc	___awdiv@divisor+1,7
  2289  04CB  2CD8               	goto	l1293
  2290  04CC  3001               	movlw	1
  2291  04CD                     u805:	
  2292  04CD  1003               	clrc
  2293  04CE  0DF0               	rlf	___awdiv@divisor,f
  2294  04CF  0DF1               	rlf	___awdiv@divisor+1,f
  2295  04D0  3EFF               	addlw	-1
  2296  04D1  1D03               	skipz
  2297  04D2  2CCD               	goto	u805
  2298  04D3  3001               	movlw	1
  2299  04D4  00F4               	movwf	??___awdiv
  2300  04D5  0874               	movf	??___awdiv,w
  2301  04D6  07F5               	addwf	___awdiv@counter,f
  2302  04D7  2CCA               	goto	l1291
  2303  04D8                     l1293:	
  2304  04D8  3001               	movlw	1
  2305  04D9                     u825:	
  2306  04D9  1003               	clrc
  2307  04DA  0DF7               	rlf	___awdiv@quotient,f
  2308  04DB  0DF8               	rlf	___awdiv@quotient+1,f
  2309  04DC  3EFF               	addlw	-1
  2310  04DD  1D03               	skipz
  2311  04DE  2CD9               	goto	u825
  2312  04DF  0871               	movf	___awdiv@divisor+1,w
  2313  04E0  0273               	subwf	___awdiv@dividend+1,w
  2314  04E1  1D03               	skipz
  2315  04E2  2CE5               	goto	u835
  2316  04E3  0870               	movf	___awdiv@divisor,w
  2317  04E4  0272               	subwf	___awdiv@dividend,w
  2318  04E5                     u835:	
  2319  04E5  1C03               	skipc
  2320  04E6  2CEE               	goto	l1299
  2321  04E7  0870               	movf	___awdiv@divisor,w
  2322  04E8  02F2               	subwf	___awdiv@dividend,f
  2323  04E9  0871               	movf	___awdiv@divisor+1,w
  2324  04EA  1C03               	skipc
  2325  04EB  03F3               	decf	___awdiv@dividend+1,f
  2326  04EC  02F3               	subwf	___awdiv@dividend+1,f
  2327  04ED  1477               	bsf	___awdiv@quotient,0
  2328  04EE                     l1299:	
  2329  04EE  3001               	movlw	1
  2330  04EF                     u845:	
  2331  04EF  1003               	clrc
  2332  04F0  0CF1               	rrf	___awdiv@divisor+1,f
  2333  04F1  0CF0               	rrf	___awdiv@divisor,f
  2334  04F2  3EFF               	addlw	-1
  2335  04F3  1D03               	skipz
  2336  04F4  2CEF               	goto	u845
  2337  04F5  3001               	movlw	1
  2338  04F6  02F5               	subwf	___awdiv@counter,f
  2339  04F7  1D03               	btfss	3,2
  2340  04F8  2CD8               	goto	l1293
  2341  04F9                     l1303:	
  2342  04F9  0876               	movf	___awdiv@sign,w
  2343  04FA  1903               	btfsc	3,2
  2344  04FB  2D01               	goto	l1307
  2345  04FC  09F7               	comf	___awdiv@quotient,f
  2346  04FD  09F8               	comf	___awdiv@quotient+1,f
  2347  04FE  0AF7               	incf	___awdiv@quotient,f
  2348  04FF  1903               	skipnz
  2349  0500  0AF8               	incf	___awdiv@quotient+1,f
  2350  0501                     l1307:	
  2351  0501  0878               	movf	___awdiv@quotient+1,w
  2352  0502  00F1               	movwf	?___awdiv+1
  2353  0503  0877               	movf	___awdiv@quotient,w
  2354  0504  00F0               	movwf	?___awdiv
  2355  0505  0008               	return
  2356  0506                     __end_of___awdiv:	
  2357                           
  2358                           	psect	text9
  2359  0506                     __ptext9:	
  2360 ;; *************** function _RTC_SetDateTime *****************
  2361 ;; Defined at:
  2362 ;;		line 95 in file "rtc.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  rtc             1    wreg     PTR struct .
  2365 ;;		 -> main@rtc(7), 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  rtc             1    1[COMMON] PTR struct .
  2368 ;;		 -> main@rtc(7), 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         0       0       0       0       0
  2379 ;;      Locals:         1       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0
  2381 ;;      Totals:         1       0       0       0       0
  2382 ;;Total ram usage:        1 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    2
  2385 ;; This function calls:
  2386 ;;		_I2C_Start
  2387 ;;		_I2C_Stop
  2388 ;;		_I2C_Write
  2389 ;; This function is called by:
  2390 ;;		_main
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           
  2395                           ;psect for function _RTC_SetDateTime
  2396  0506                     _RTC_SetDateTime:	
  2397                           
  2398                           ;incstack = 0
  2399                           ; Regs used in _RTC_SetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2400                           ;RTC_SetDateTime@rtc stored from wreg
  2401  0506  00F1               	movwf	RTC_SetDateTime@rtc
  2402                           
  2403                           ;rtc.c: 97: I2C_Start();
  2404  0507  120A  118A  2347  120A  118A  	fcall	_I2C_Start
  2405                           
  2406                           ;rtc.c: 99: I2C_Write(0xD0u);
  2407  050C  30D0               	movlw	208
  2408  050D  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2409                           
  2410                           ;rtc.c: 100: I2C_Write(0x00u);
  2411  0512  3000               	movlw	0
  2412  0513  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2413                           
  2414                           ;rtc.c: 102: I2C_Write(rtc->sec);
  2415  0518  0871               	movf	RTC_SetDateTime@rtc,w
  2416  0519  0084               	movwf	4
  2417  051A  1383               	bcf	3,7	;select IRP bank0
  2418  051B  0800               	movf	0,w
  2419  051C  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2420                           
  2421                           ;rtc.c: 103: I2C_Write(rtc->min);
  2422  0521  0A71               	incf	RTC_SetDateTime@rtc,w
  2423  0522  0084               	movwf	4
  2424  0523  1383               	bcf	3,7	;select IRP bank0
  2425  0524  0800               	movf	0,w
  2426  0525  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2427                           
  2428                           ;rtc.c: 104: I2C_Write(rtc->hour);
  2429  052A  0871               	movf	RTC_SetDateTime@rtc,w
  2430  052B  3E02               	addlw	2
  2431  052C  0084               	movwf	4
  2432  052D  1383               	bcf	3,7	;select IRP bank0
  2433  052E  0800               	movf	0,w
  2434  052F  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2435                           
  2436                           ;rtc.c: 105: I2C_Write(rtc->weekDay);
  2437  0534  0871               	movf	RTC_SetDateTime@rtc,w
  2438  0535  3E03               	addlw	3
  2439  0536  0084               	movwf	4
  2440  0537  1383               	bcf	3,7	;select IRP bank0
  2441  0538  0800               	movf	0,w
  2442  0539  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2443                           
  2444                           ;rtc.c: 106: I2C_Write(rtc->date);
  2445  053E  0871               	movf	RTC_SetDateTime@rtc,w
  2446  053F  3E04               	addlw	4
  2447  0540  0084               	movwf	4
  2448  0541  1383               	bcf	3,7	;select IRP bank0
  2449  0542  0800               	movf	0,w
  2450  0543  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2451                           
  2452                           ;rtc.c: 107: I2C_Write(rtc->month);
  2453  0548  0871               	movf	RTC_SetDateTime@rtc,w
  2454  0549  3E05               	addlw	5
  2455  054A  0084               	movwf	4
  2456  054B  1383               	bcf	3,7	;select IRP bank0
  2457  054C  0800               	movf	0,w
  2458  054D  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2459                           
  2460                           ;rtc.c: 108: I2C_Write(rtc->year);
  2461  0552  0871               	movf	RTC_SetDateTime@rtc,w
  2462  0553  3E06               	addlw	6
  2463  0554  0084               	movwf	4
  2464  0555  1383               	bcf	3,7	;select IRP bank0
  2465  0556  0800               	movf	0,w
  2466  0557  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2467                           
  2468                           ;rtc.c: 110: I2C_Stop();
  2469  055C  120A  118A  234D   	fcall	_I2C_Stop
  2470  055F  0008               	return
  2471  0560                     __end_of_RTC_SetDateTime:	
  2472                           
  2473                           	psect	text10
  2474  0408                     __ptext10:	
  2475 ;; *************** function _RTC_Init *****************
  2476 ;; Defined at:
  2477 ;;		line 57 in file "rtc.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0
  2494 ;;      Totals:         0       0       0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    2
  2498 ;; This function calls:
  2499 ;;		_I2C_Init
  2500 ;;		_I2C_Start
  2501 ;;		_I2C_Stop
  2502 ;;		_I2C_Write
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           
  2509                           ;psect for function _RTC_Init
  2510  0408                     _RTC_Init:	
  2511                           
  2512                           ;rtc.c: 59: I2C_Init();
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in _RTC_Init: [wreg+status,2+status,0+pclath+cstack]
  2516  0408  120A  118A  238E  120A  118A  	fcall	_I2C_Init
  2517                           
  2518                           ;rtc.c: 60: I2C_Start();
  2519  040D  120A  118A  2347  120A  118A  	fcall	_I2C_Start
  2520                           
  2521                           ;rtc.c: 62: I2C_Write(0xD0u);
  2522  0412  30D0               	movlw	208
  2523  0413  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2524                           
  2525                           ;rtc.c: 63: I2C_Write(0x07u);
  2526  0418  3007               	movlw	7
  2527  0419  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2528                           
  2529                           ;rtc.c: 65: I2C_Write(0x00);
  2530  041E  3000               	movlw	0
  2531  041F  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2532                           
  2533                           ;rtc.c: 67: I2C_Stop();
  2534  0424  120A  118A  234D   	fcall	_I2C_Stop
  2535  0427  0008               	return
  2536  0428                     __end_of_RTC_Init:	
  2537                           
  2538                           	psect	text11
  2539  038E                     __ptext11:	
  2540 ;; *************** function _I2C_Init *****************
  2541 ;; Defined at:
  2542 ;;		line 87 in file "i2c.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0
  2559 ;;      Totals:         0       0       0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_RTC_Init
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _I2C_Init
  2571  038E                     _I2C_Init:	
  2572                           
  2573                           ;i2c.c: 89: TRISC3 = 0x01u;
  2574                           
  2575                           ;incstack = 0
  2576                           ; Regs used in _I2C_Init: [wreg]
  2577  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2578  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2579  0390  1587               	bsf	7,3	;volatile
  2580                           
  2581                           ;i2c.c: 90: TRISC4 = 0x01u;
  2582  0391  1607               	bsf	7,4	;volatile
  2583                           
  2584                           ;i2c.c: 92: SSPSTAT |= 0x80;
  2585  0392  1794               	bsf	20,7	;volatile
  2586                           
  2587                           ;i2c.c: 93: SSPCON = 0x28;
  2588  0393  3028               	movlw	40
  2589  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0396  0094               	movwf	20	;volatile
  2592                           
  2593                           ;i2c.c: 94: SSPADD = 50;
  2594  0397  3032               	movlw	50
  2595  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2596  0399  1303               	bcf	3,6	;RP1=0, select bank1
  2597  039A  0093               	movwf	19	;volatile
  2598  039B  0008               	return
  2599  039C                     __end_of_I2C_Init:	
  2600                           
  2601                           	psect	text12
  2602  05C4                     __ptext12:	
  2603 ;; *************** function _RTC_GetDateTime *****************
  2604 ;; Defined at:
  2605 ;;		line 131 in file "rtc.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  rtc             1    wreg     PTR struct .
  2608 ;;		 -> main@rtc(7), 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  rtc             1    4[COMMON] PTR struct .
  2611 ;;		 -> main@rtc(7), 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         0       0       0       0       0
  2622 ;;      Locals:         1       0       0       0       0
  2623 ;;      Temps:          1       0       0       0       0
  2624 ;;      Totals:         2       0       0       0       0
  2625 ;;Total ram usage:        2 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    2
  2628 ;; This function calls:
  2629 ;;		_I2C_Read
  2630 ;;		_I2C_Start
  2631 ;;		_I2C_Stop
  2632 ;;		_I2C_Write
  2633 ;; This function is called by:
  2634 ;;		_main
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           
  2639                           ;psect for function _RTC_GetDateTime
  2640  05C4                     _RTC_GetDateTime:	
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _RTC_GetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2644                           ;RTC_GetDateTime@rtc stored from wreg
  2645  05C4  00F4               	movwf	RTC_GetDateTime@rtc
  2646                           
  2647                           ;rtc.c: 133: I2C_Start();
  2648  05C5  120A  118A  2347  120A  118A  	fcall	_I2C_Start
  2649                           
  2650                           ;rtc.c: 135: I2C_Write(0xD0u);
  2651  05CA  30D0               	movlw	208
  2652  05CB  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2653                           
  2654                           ;rtc.c: 136: I2C_Write(0x00u);
  2655  05D0  3000               	movlw	0
  2656  05D1  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2657                           
  2658                           ;rtc.c: 138: I2C_Stop();
  2659  05D6  120A  118A  234D  120A  118A  	fcall	_I2C_Stop
  2660                           
  2661                           ;rtc.c: 140: I2C_Start();
  2662  05DB  120A  118A  2347  120A  118A  	fcall	_I2C_Start
  2663                           
  2664                           ;rtc.c: 141: I2C_Write(0xD1u);
  2665  05E0  30D1               	movlw	209
  2666  05E1  120A  118A  2381  120A  118A  	fcall	_I2C_Write
  2667                           
  2668                           ;rtc.c: 143: rtc->sec = I2C_Read(1);
  2669  05E6  3001               	movlw	1
  2670  05E7  120A  118A  23E8  120A  118A  	fcall	_I2C_Read
  2671  05EC  00F3               	movwf	??_RTC_GetDateTime
  2672  05ED  0874               	movf	RTC_GetDateTime@rtc,w
  2673  05EE  0084               	movwf	4
  2674  05EF  0873               	movf	??_RTC_GetDateTime,w
  2675  05F0  1383               	bcf	3,7	;select IRP bank0
  2676  05F1  0080               	movwf	0
  2677                           
  2678                           ;rtc.c: 144: rtc->min = I2C_Read(1);
  2679  05F2  3001               	movlw	1
  2680  05F3  120A  118A  23E8  120A  118A  	fcall	_I2C_Read
  2681  05F8  00F3               	movwf	??_RTC_GetDateTime
  2682  05F9  0A74               	incf	RTC_GetDateTime@rtc,w
  2683  05FA  0084               	movwf	4
  2684  05FB  0873               	movf	??_RTC_GetDateTime,w
  2685  05FC  1383               	bcf	3,7	;select IRP bank0
  2686  05FD  0080               	movwf	0
  2687                           
  2688                           ;rtc.c: 145: rtc->hour= I2C_Read(1);
  2689  05FE  3001               	movlw	1
  2690  05FF  120A  118A  23E8  120A  118A  	fcall	_I2C_Read
  2691  0604  00F3               	movwf	??_RTC_GetDateTime
  2692  0605  0874               	movf	RTC_GetDateTime@rtc,w
  2693  0606  3E02               	addlw	2
  2694  0607  0084               	movwf	4
  2695  0608  0873               	movf	??_RTC_GetDateTime,w
  2696  0609  1383               	bcf	3,7	;select IRP bank0
  2697  060A  0080               	movwf	0
  2698                           
  2699                           ;rtc.c: 146: rtc->weekDay = I2C_Read(1);
  2700  060B  3001               	movlw	1
  2701  060C  120A  118A  23E8  120A  118A  	fcall	_I2C_Read
  2702  0611  00F3               	movwf	??_RTC_GetDateTime
  2703  0612  0874               	movf	RTC_GetDateTime@rtc,w
  2704  0613  3E03               	addlw	3
  2705  0614  0084               	movwf	4
  2706  0615  0873               	movf	??_RTC_GetDateTime,w
  2707  0616  1383               	bcf	3,7	;select IRP bank0
  2708  0617  0080               	movwf	0
  2709                           
  2710                           ;rtc.c: 147: rtc->date= I2C_Read(1);
  2711  0618  3001               	movlw	1
  2712  0619  120A  118A  23E8  120A  118A  	fcall	_I2C_Read
  2713  061E  00F3               	movwf	??_RTC_GetDateTime
  2714  061F  0874               	movf	RTC_GetDateTime@rtc,w
  2715  0620  3E04               	addlw	4
  2716  0621  0084               	movwf	4
  2717  0622  0873               	movf	??_RTC_GetDateTime,w
  2718  0623  1383               	bcf	3,7	;select IRP bank0
  2719  0624  0080               	movwf	0
  2720                           
  2721                           ;rtc.c: 148: rtc->month=I2C_Read(1);
  2722  0625  3001               	movlw	1
  2723  0626  120A  118A  23E8  120A  118A  	fcall	_I2C_Read
  2724  062B  00F3               	movwf	??_RTC_GetDateTime
  2725  062C  0874               	movf	RTC_GetDateTime@rtc,w
  2726  062D  3E05               	addlw	5
  2727  062E  0084               	movwf	4
  2728  062F  0873               	movf	??_RTC_GetDateTime,w
  2729  0630  1383               	bcf	3,7	;select IRP bank0
  2730  0631  0080               	movwf	0
  2731                           
  2732                           ;rtc.c: 149: rtc->year =I2C_Read(0);
  2733  0632  3000               	movlw	0
  2734  0633  120A  118A  23E8  120A  118A  	fcall	_I2C_Read
  2735  0638  00F3               	movwf	??_RTC_GetDateTime
  2736  0639  0874               	movf	RTC_GetDateTime@rtc,w
  2737  063A  3E06               	addlw	6
  2738  063B  0084               	movwf	4
  2739  063C  0873               	movf	??_RTC_GetDateTime,w
  2740  063D  1383               	bcf	3,7	;select IRP bank0
  2741  063E  0080               	movwf	0
  2742                           
  2743                           ;rtc.c: 151: I2C_Stop();
  2744  063F  120A  118A  234D   	fcall	_I2C_Stop
  2745  0642  0008               	return
  2746  0643                     __end_of_RTC_GetDateTime:	
  2747                           
  2748                           	psect	text13
  2749  0381                     __ptext13:	
  2750 ;; *************** function _I2C_Write *****************
  2751 ;; Defined at:
  2752 ;;		line 179 in file "i2c.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  v_i2cData_u8    1    wreg     unsigned char 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  v_i2cData_u8    1    0[COMMON] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       0       0       0       0
  2767 ;;      Locals:         1       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0
  2769 ;;      Totals:         1       0       0       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    1
  2773 ;; This function calls:
  2774 ;;		_i2c_WaitForIdle
  2775 ;; This function is called by:
  2776 ;;		_RTC_Init
  2777 ;;		_RTC_SetDateTime
  2778 ;;		_RTC_GetDateTime
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _I2C_Write
  2784  0381                     _I2C_Write:	
  2785                           
  2786                           ;incstack = 0
  2787                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2788                           ;I2C_Write@v_i2cData_u8 stored from wreg
  2789  0381  00F0               	movwf	I2C_Write@v_i2cData_u8
  2790                           
  2791                           ;i2c.c: 183: SSPBUF = v_i2cData_u8;
  2792  0382  0870               	movf	I2C_Write@v_i2cData_u8,w
  2793  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0385  0093               	movwf	19	;volatile
  2796  0386                     l150:	
  2797                           ;i2c.c: 184: while(BF==1);
  2798                           
  2799  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2800  0387  1303               	bcf	3,6	;RP1=0, select bank1
  2801  0388  1814               	btfsc	20,0	;volatile
  2802  0389  2B86               	goto	l150
  2803                           
  2804                           ;i2c.c: 185: i2c_WaitForIdle();
  2805  038A  120A  118A  236B   	fcall	_i2c_WaitForIdle
  2806  038D  0008               	return
  2807  038E                     __end_of_I2C_Write:	
  2808                           
  2809                           	psect	text14
  2810  034D                     __ptext14:	
  2811 ;; *************** function _I2C_Stop *****************
  2812 ;; Defined at:
  2813 ;;		line 147 in file "i2c.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		None
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_RTC_Init
  2837 ;;		_RTC_SetDateTime
  2838 ;;		_RTC_GetDateTime
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _I2C_Stop
  2844  034D                     _I2C_Stop:	
  2845                           
  2846                           ;i2c.c: 149: PEN = 1;
  2847                           
  2848                           ;incstack = 0
  2849                           ; Regs used in _I2C_Stop: []
  2850  034D  1683               	bsf	3,5	;RP0=1, select bank1
  2851  034E  1303               	bcf	3,6	;RP1=0, select bank1
  2852  034F  1511               	bsf	17,2	;volatile
  2853  0350                     l144:	
  2854                           ;i2c.c: 150: while(PEN == 1);
  2855                           
  2856  0350  1D11               	btfss	17,2	;volatile
  2857  0351  0008               	return
  2858  0352  2B50               	goto	l144
  2859  0353                     __end_of_I2C_Stop:	
  2860                           
  2861                           	psect	text15
  2862  0347                     __ptext15:	
  2863 ;; *************** function _I2C_Start *****************
  2864 ;; Defined at:
  2865 ;;		line 118 in file "i2c.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		None
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_RTC_Init
  2889 ;;		_RTC_SetDateTime
  2890 ;;		_RTC_GetDateTime
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           
  2895                           ;psect for function _I2C_Start
  2896  0347                     _I2C_Start:	
  2897                           
  2898                           ;i2c.c: 120: SEN = 1;
  2899                           
  2900                           ;incstack = 0
  2901                           ; Regs used in _I2C_Start: []
  2902  0347  1683               	bsf	3,5	;RP0=1, select bank1
  2903  0348  1303               	bcf	3,6	;RP1=0, select bank1
  2904  0349  1411               	bsf	17,0	;volatile
  2905  034A                     l138:	
  2906                           ;i2c.c: 121: while(SEN == 1);
  2907                           
  2908  034A  1C11               	btfss	17,0	;volatile
  2909  034B  0008               	return
  2910  034C  2B4A               	goto	l138
  2911  034D                     __end_of_I2C_Start:	
  2912                           
  2913                           	psect	text16
  2914  03E8                     __ptext16:	
  2915 ;; *************** function _I2C_Read *****************
  2916 ;; Defined at:
  2917 ;;		line 214 in file "i2c.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  v_ackOption_    1    wreg     unsigned char 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  v_ackOption_    1    1[COMMON] unsigned char 
  2922 ;;  v_i2cData_u8    1    2[COMMON] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      unsigned char 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, pclath, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2932 ;;      Params:         0       0       0       0       0
  2933 ;;      Locals:         2       0       0       0       0
  2934 ;;      Temps:          1       0       0       0       0
  2935 ;;      Totals:         3       0       0       0       0
  2936 ;;Total ram usage:        3 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    1
  2939 ;; This function calls:
  2940 ;;		_i2c_Ack
  2941 ;;		_i2c_NoAck
  2942 ;;		_i2c_WaitForIdle
  2943 ;; This function is called by:
  2944 ;;		_RTC_GetDateTime
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _I2C_Read
  2950  03E8                     _I2C_Read:	
  2951                           
  2952                           ;incstack = 0
  2953                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  2954                           ;I2C_Read@v_ackOption_u8 stored from wreg
  2955  03E8  00F1               	movwf	I2C_Read@v_ackOption_u8
  2956                           
  2957                           ;i2c.c: 216: uint8_t v_i2cData_u8=0x00;
  2958  03E9  01F2               	clrf	I2C_Read@v_i2cData_u8
  2959                           
  2960                           ;i2c.c: 218: RCEN = 1;
  2961  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  2962  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  2963  03EC  1591               	bsf	17,3	;volatile
  2964  03ED                     l156:	
  2965                           ;i2c.c: 219: while(BF==0);
  2966                           
  2967  03ED  1C14               	btfss	20,0	;volatile
  2968  03EE  2BED               	goto	l156
  2969                           
  2970                           ;i2c.c: 220: v_i2cData_u8 = SSPBUF;
  2971  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2972  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2973  03F1  0813               	movf	19,w	;volatile
  2974  03F2  00F0               	movwf	??_I2C_Read
  2975  03F3  0870               	movf	??_I2C_Read,w
  2976  03F4  00F2               	movwf	I2C_Read@v_i2cData_u8
  2977                           
  2978                           ;i2c.c: 221: i2c_WaitForIdle();
  2979  03F5  120A  118A  236B  120A  118A  	fcall	_i2c_WaitForIdle
  2980                           
  2981                           ;i2c.c: 223: if(v_ackOption_u8==1)
  2982  03FA  0371               	decf	I2C_Read@v_ackOption_u8,w
  2983  03FB  1D03               	btfss	3,2
  2984  03FC  2C03               	goto	l1247
  2985                           
  2986                           ;i2c.c: 224: {
  2987                           ;i2c.c: 225: i2c_Ack();
  2988  03FD  120A  118A  2353  120A  118A  	fcall	_i2c_Ack
  2989                           
  2990                           ;i2c.c: 226: }
  2991  0402  2C06               	goto	l1249
  2992  0403                     l1247:	
  2993                           
  2994                           ;i2c.c: 227: else
  2995                           ;i2c.c: 228: {
  2996                           ;i2c.c: 229: i2c_NoAck();
  2997  0403  120A  118A  235A   	fcall	_i2c_NoAck
  2998  0406                     l1249:	
  2999                           
  3000                           ;i2c.c: 230: }
  3001                           ;i2c.c: 232: return v_i2cData_u8;
  3002  0406  0872               	movf	I2C_Read@v_i2cData_u8,w
  3003  0407  0008               	return
  3004  0408                     __end_of_I2C_Read:	
  3005                           
  3006                           	psect	text17
  3007  036B                     __ptext17:	
  3008 ;; *************** function _i2c_WaitForIdle *****************
  3009 ;; Defined at:
  3010 ;;		line 258 in file "i2c.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		None
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3024 ;;      Params:         0       0       0       0       0
  3025 ;;      Locals:         0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0
  3027 ;;      Totals:         0       0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_I2C_Write
  3034 ;;		_I2C_Read
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function _i2c_WaitForIdle
  3040  036B                     _i2c_WaitForIdle:	
  3041  036B                     l164:	
  3042                           ;i2c.c: 260: while ( (SEN == 1) || (RSEN == 1) || (PEN == 1) || (RCEN == 1) || (R_W == 1
      +                          ) );
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _i2c_WaitForIdle: []
  3046                           
  3047  036B  1683               	bsf	3,5	;RP0=1, select bank1
  3048  036C  1303               	bcf	3,6	;RP1=0, select bank1
  3049  036D  1C11               	btfss	17,0	;volatile
  3050  036E  1891               	btfsc	17,1	;volatile
  3051  036F  2B6B               	goto	l164
  3052  0370  1D11               	btfss	17,2	;volatile
  3053  0371  1991               	btfsc	17,3	;volatile
  3054  0372  2B6B               	goto	l164
  3055  0373  1D14               	btfss	20,2	;volatile
  3056  0374  0008               	return
  3057  0375  2B6B               	goto	l164
  3058  0376                     __end_of_i2c_WaitForIdle:	
  3059                           
  3060                           	psect	text18
  3061  035A                     __ptext18:	
  3062 ;; *************** function _i2c_NoAck *****************
  3063 ;; Defined at:
  3064 ;;		line 299 in file "i2c.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		None
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       0       0       0       0
  3079 ;;      Locals:         0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0
  3081 ;;      Totals:         0       0       0       0       0
  3082 ;;Total ram usage:        0 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_I2C_Read
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _i2c_NoAck
  3093  035A                     _i2c_NoAck:	
  3094                           
  3095                           ;i2c.c: 301: ACKDT = 1;
  3096                           
  3097                           ;incstack = 0
  3098                           ; Regs used in _i2c_NoAck: []
  3099  035A  1683               	bsf	3,5	;RP0=1, select bank1
  3100  035B  1303               	bcf	3,6	;RP1=0, select bank1
  3101  035C  1691               	bsf	17,5	;volatile
  3102                           
  3103                           ;i2c.c: 302: ACKEN = 1;
  3104  035D  1611               	bsf	17,4	;volatile
  3105  035E                     l176:	
  3106                           ;i2c.c: 303: while(ACKEN == 1);
  3107                           
  3108  035E  1E11               	btfss	17,4	;volatile
  3109  035F  0008               	return
  3110  0360  2B5E               	goto	l176
  3111  0361                     __end_of_i2c_NoAck:	
  3112                           
  3113                           	psect	text19
  3114  0353                     __ptext19:	
  3115 ;; *************** function _i2c_Ack *****************
  3116 ;; Defined at:
  3117 ;;		line 279 in file "i2c.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		None
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_I2C_Read
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function _i2c_Ack
  3146  0353                     _i2c_Ack:	
  3147                           
  3148                           ;i2c.c: 281: ACKDT = 0;
  3149                           
  3150                           ;incstack = 0
  3151                           ; Regs used in _i2c_Ack: []
  3152  0353  1683               	bsf	3,5	;RP0=1, select bank1
  3153  0354  1303               	bcf	3,6	;RP1=0, select bank1
  3154  0355  1291               	bcf	17,5	;volatile
  3155                           
  3156                           ;i2c.c: 282: ACKEN = 1;
  3157  0356  1611               	bsf	17,4	;volatile
  3158  0357                     l170:	
  3159                           ;i2c.c: 283: while(ACKEN == 1);
  3160                           
  3161  0357  1E11               	btfss	17,4	;volatile
  3162  0358  0008               	return
  3163  0359  2B57               	goto	l170
  3164  035A                     __end_of_i2c_Ack:	
  3165  007E                     btemp	set	126	;btemp
  3166  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     21      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    RTC_GetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK0[7]), 

    RTC_SetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK0[7]), 


Critical Paths under _main in COMMON

    _main->_ui8Dec2HexDisplay
    _vDisplay->_DELAY_ms
    _DELAY_ms->_DELAY_us
    _ui8Hex2DECDisplay->___bmul
    _ui8Dec2HexDisplay->___awdiv
    _RTC_SetDateTime->_I2C_Write
    _RTC_Init->_I2C_Write
    _RTC_GetDateTime->_I2C_Read

Critical Paths under _main in BANK0

    _main->_ui8Dec2HexDisplay

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    4430
                                              3 BANK0     18    18      0
                           _DELAY_ms
                    _RTC_GetDateTime
                           _RTC_Init
                    _RTC_SetDateTime
                  _ui8Dec2HexDisplay
                  _ui8Hex2DECDisplay
                           _vDisplay
 ---------------------------------------------------------------------------------
 (1) _vDisplay                                             5     2      3     982
                                              4 COMMON     5     2      3
                           _DELAY_ms
 ---------------------------------------------------------------------------------
 (2) _DELAY_ms                                             2     0      2     576
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (3) _DELAY_us                                             2     0      2     129
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ui8Hex2DECDisplay                                    4     4      0     213
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     145
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ui8Dec2HexDisplay                                    6     6      0    1241
                                              9 COMMON     3     3      0
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     614
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _RTC_SetDateTime                                      1     1      0     203
                                              1 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0      22
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_GetDateTime                                      2     2      0     249
                                              3 COMMON     2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      46
                                              0 COMMON     3     3      0
                            _i2c_Ack
                          _i2c_NoAck
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (3) _i2c_WaitForIdle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_NoAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms
     _DELAY_us
   _RTC_GetDateTime
     _I2C_Read
       _i2c_Ack
       _i2c_NoAck
       _i2c_WaitForIdle
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_Init
     _I2C_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_SetDateTime
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _ui8Dec2HexDisplay
     ___awdiv
     ___awmod
   _ui8Hex2DECDisplay
     ___bmul
   _vDisplay
     _DELAY_ms
       _DELAY_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      1F       5       38.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Sep 10 04:39:12 2017

                         pc 0002              ___bmul@product 0072          __size_of_I2C_Start 0006  
               __CFG_CP$OFF 0000            ?_i2c_WaitForIdle 0070          __size_of_I2C_Write 000D  
                        _BF 04A0                ___awdiv@sign 0076                          fsr 0004  
                       l150 0386                         l144 0350                         l170 0357  
                       l138 034A                         l164 036B                         l156 03ED  
                       l176 035E                         _PEN 048A                __CFG_CPD$OFF 0000  
                       _SEN 0488                         u805 04CD                         u825 04D9  
                       u905 047C                         u835 04E5                         u845 04EF  
                       u925 048D                         u935 0496                         _R_W 04A2  
   __end_of_RTC_SetDateTime 0560                         fsr0 0004                         indf 0000  
              ___awmod@sign 0076                __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000  
                      l1221 03BE                        l1303 04F9                        l1307 0501  
                      l1331 0479                        l1323 0473                        l1333 0487  
                      l1341 04A0                        l1247 0403                        l1319 046C  
                      l1255 039E                        l1249 0406                        l1281 04C2  
                      l1345 04A8                        l1337 0495                        l1291 04CA  
                      l1275 04B7                        l1259 03A4                        l1293 04D8  
                      l1605 06CB                        l1199 0376                        l1615 06D9  
                      l1551 0765                        l1633 06F0                        l1625 06E7  
                      l1641 07DD                        l1537 074B                        l1529 0738  
                      l1299 04EE                        l1573 068E                        l1583 069A  
                      l1559 0776                        l1585 06AD                        l1595 06BD  
                      _IOCB 0096                        _RCEN 048B                        _RSEN 0489  
               main@ucHours 0029                 main@ucMonth 002B                __CFG_WRT$OFF 0000  
                      _main 0643            __end_of_I2C_Init 039C            __end_of_I2C_Read 0408  
                      btemp 007E            __end_of_I2C_Stop 0353                        start 0000  
          __end_of_DELAY_ms 03D2            __end_of_DELAY_us 0381           ___bmul@multiplier 0073  
           __end_of_i2c_Ack 035A                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D             __end_of___awdiv 0506               __CFG_WDTE$OFF 0000  
           __end_of___awmod 04AD             ___awdiv@divisor 0070             ___awdiv@counter 0075  
                     _PORTB 0006                       _PORTD 0008                       _TRISD 0088  
          __end_of_RTC_Init 0428           __end_of_I2C_Start 034D           __end_of_I2C_Write 038E  
            __CFG_BOREN$OFF 0000                       pclath 000A   ui8Hex2DECDisplay@ui8Input 0077  
                     status 0003                       wtemp0 007E    ui8Dec2HexDisplay@ui8Temp 0022  
           __initialization 07F0                __end_of_main 07F0                      ??_main 0023  
        RTC_SetDateTime@rtc 0071            ?_RTC_SetDateTime 0070          __size_of_i2c_NoAck 0007  
          ___awdiv@dividend 0072                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
                 ??_i2c_Ack 0070              __CFG_PWRTE$OFF 0000            __end_of_vDisplay 05C4  
     I2C_Write@v_i2cData_u8 0070                      ___bmul 039C                   ??___awdiv 0074  
                 ??___awmod 0074            ___awdiv@quotient 0077             ___awmod@divisor 0070  
           ___awmod@counter 0075            DELAY_ms@ms_count 0072                   ?_I2C_Init 0070  
                 ?_I2C_Read 0070                   ?_I2C_Stop 0070                   ?_DELAY_ms 0072  
                 ?_DELAY_us 0070     __end_of__initialization 07FC         ___bmul@multiplicand 0070  
            __pcstackCOMMON 0070                __pidataBANK0 0361           __end_of_i2c_NoAck 0361  
                 ?_RTC_Init 0070                  ??_I2C_Init 0070              _OPTION_REGbits 0081  
                ??_I2C_Read 0070  ui8Dec2HexDisplay@ui8Output 0020                  ??_I2C_Stop 0070  
          vDisplay@ui8First 0078                  ??_DELAY_ms 0074                  ??_DELAY_us 0072  
  __size_of_RTC_GetDateTime 007F              main@ui8SetMode 002C           _ui8Hex2DECDisplay 03D2  
                __pmaintext 0643                     ?___bmul 0070          ?_ui8Hex2DECDisplay 0070  
                ??_RTC_Init 0071         ??_ui8Hex2DECDisplay 0074           _ui8Dec2HexDisplay 0428  
  __size_of_i2c_WaitForIdle 000B          ?_ui8Dec2HexDisplay 0070                   ?_vDisplay 0074  
          DELAY_us@us_count 0070                     _SSPSTAT 0094         ??_ui8Dec2HexDisplay 0079  
                   _i2c_Ack 0353   __end_of_ui8Hex2DECDisplay 03E8                   _I2C_Start 0347  
                 _I2C_Write 0381             __size_of___bmul 0011                     ___awdiv 04AD  
                   ___awmod 0462                   _ANSELbits 0188   __end_of_ui8Dec2HexDisplay 0462  
                   __ptext1 0560                     __ptext2 03BE                     __ptext3 0376  
                   __ptext4 03D2                     __ptext5 039C                     __ptext6 0428  
                   __ptext7 0462                     __ptext8 04AD                     __ptext9 0506  
          ___awmod@dividend 0072                  ??_vDisplay 0077                     main@rtc 002E  
      end_of_initialization 07FC      I2C_Read@v_ackOption_u8 0071                  ?_I2C_Start 0070  
                ?_I2C_Write 0070           ??_RTC_GetDateTime 0073                   _PORTBbits 0006  
                 _PORTCbits 0007                   _TRISBbits 0086                   _TRISCbits 0087  
                 _TRISEbits 0089           __size_of_I2C_Init 000E           __size_of_I2C_Read 0020  
         __size_of_I2C_Stop 0006           __size_of_DELAY_ms 0014           __size_of_DELAY_us 000B  
  __size_of_RTC_SetDateTime 005A           ??_i2c_WaitForIdle 0070                  main@ucDate 002A  
__size_of_ui8Hex2DECDisplay 0016                  main@ucYear 0026              __end_of___bmul 03AD  
__size_of_ui8Dec2HexDisplay 003A                   _i2c_NoAck 035A           __size_of_RTC_Init 0020  
       start_initialization 07F0                 ??_I2C_Start 0070                 ??_I2C_Write 0070  
         vDisplay@ui8Fourth 0076           vDisplay@ui8Second 0074                    ??___bmul 0071  
                init_fetch0 03AD                 __pdataBANK0 0035                  ?_i2c_NoAck 0070  
                 ___latbits 0002               __pcstackBANK0 0020           __size_of_vDisplay 0064  
           main@ui8SetValue 002D             vDisplay@ui8Thrd 0075                   _ucBCD_ARR 0035  
                  ?_i2c_Ack 0070           ??_RTC_SetDateTime 0071                    ?___awdiv 0070  
                  ?___awmod 0070        I2C_Read@v_i2cData_u8 0072                    _I2C_Init 038E  
                  _I2C_Read 03E8                    _I2C_Stop 034D                    _DELAY_ms 03BE  
                  _DELAY_us 0376             _RTC_GetDateTime 05C4                    _RTC_Init 0408  
               ??_i2c_NoAck 0070             _i2c_WaitForIdle 036B                    _WPUBbits 0095  
                 main@ucMin 0028                   main@ucSec 0027    ui8Hex2DECDisplay@ui8Temp 0076  
          __size_of_i2c_Ack 0007            __size_of___awdiv 0059            __size_of___awmod 004B  
   __end_of_RTC_GetDateTime 0643                  _ANSELHbits 0189                    __ptext10 0408  
                  __ptext11 038E                    __ptext12 05C4                    __ptext13 0381  
                  __ptext14 034D                    __ptext15 0347                    __ptext16 03E8  
                  __ptext17 036B                    __ptext18 035A                    __ptext19 0353  
                  _vDisplay 0560   ui8Dec2HexDisplay@ui8Input 0021               __size_of_main 01AD  
   __end_of_i2c_WaitForIdle 0376                    init_ram0 03B1          RTC_GetDateTime@rtc 0074  
           _RTC_SetDateTime 0506            ?_RTC_GetDateTime 0070  
