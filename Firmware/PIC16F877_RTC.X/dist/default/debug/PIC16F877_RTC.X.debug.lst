

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Sep 15 14:48:16 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.43
    33                           ; Generated 25/07/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456                           
   457                           	psect	idataBANK0
   458  033B                     __pidataBANK0:	
   459                           
   460                           ;initializer for _ucBCD_ARR
   461  033B  34FC               	retlw	252
   462  033C  3460               	retlw	96
   463  033D  34DA               	retlw	218
   464  033E  34F2               	retlw	242
   465  033F  3466               	retlw	102
   466  0340  34B6               	retlw	182
   467  0341  34BE               	retlw	190
   468  0342  34E0               	retlw	224
   469  0343  34FE               	retlw	254
   470  0344  34F6               	retlw	246
   471  0008                     _PORTD	set	8
   472  0013                     _SSPBUF	set	19
   473  0014                     _SSPCON	set	20
   474  0007                     _PORTCbits	set	7
   475  0006                     _PORTBbits	set	6
   476  0006                     _PORTB	set	6
   477  0093                     _SSPADD	set	147
   478  0094                     _SSPSTAT	set	148
   479  0096                     _IOCB	set	150
   480  0081                     _OPTION_REGbits	set	129
   481  0095                     _WPUBbits	set	149
   482  0089                     _TRISEbits	set	137
   483  0086                     _TRISBbits	set	134
   484  0088                     _TRISD	set	136
   485  0087                     _TRISCbits	set	135
   486  048C                     _ACKEN	set	1164
   487  048D                     _ACKDT	set	1165
   488  04A2                     _R_W	set	1186
   489  048B                     _RCEN	set	1163
   490  04A0                     _BF	set	1184
   491  048A                     _PEN	set	1162
   492  0488                     _SEN	set	1160
   493  043C                     _TRISC4	set	1084
   494  043B                     _TRISC3	set	1083
   495  0489                     _RSEN	set	1161
   496  0188                     _ANSELbits	set	392
   497  0189                     _ANSELHbits	set	393
   498                           
   499                           ; #config settings
   500  0000                     
   501                           	psect	cinit
   502  07F0                     start_initialization:	
   503  07F0                     __initialization:	
   504                           
   505                           ; Initialize objects allocated to BANK0
   506  07F0  1383               	bcf	3,7	;select IRP bank0
   507  07F1  3042               	movlw	low (__pdataBANK0+10)
   508  07F2  00FD               	movwf	btemp+-1
   509  07F3  3003               	movlw	high __pidataBANK0
   510  07F4  00FE               	movwf	btemp
   511  07F5  303B               	movlw	low __pidataBANK0
   512  07F6  00FF               	movwf	btemp+1
   513  07F7  3038               	movlw	low __pdataBANK0
   514  07F8  0084               	movwf	4
   515  07F9  120A  118A  238B   	fcall	init_ram0
   516  07FC                     end_of_initialization:	
   517                           ;End of C runtime variable initialization code
   518                           
   519  07FC                     __end_of__initialization:	
   520  07FC  0183               	clrf	3
   521  07FD  120A  118A  2E1D   	ljmp	_main	;jump to C main() function
   522                           
   523                           	psect	dataBANK0
   524  0038                     __pdataBANK0:	
   525  0038                     _ucBCD_ARR:	
   526  0038                     	ds	10
   527                           
   528                           	psect	inittext
   529  0387                     init_fetch0:	
   530                           ;	Called with low address in FSR and high address in W
   531                           
   532  0387  087E               	movf	126,w
   533  0388  008A               	movwf	10
   534  0389  087F               	movf	127,w
   535  038A  0082               	movwf	2
   536  038B                     init_ram0:	
   537                           ;Called with:
   538                           ;	high address of idata address in btemp 
   539                           ;	low address of idata address in btemp+1 
   540                           ;	low address of data in FSR
   541                           ;	high address + 1 of data in btemp-1
   542                           
   543  038B  2387  120A  118A   	fcall	init_fetch0
   544  038E  0080               	movwf	0
   545  038F  0A84               	incf	4,f
   546  0390  0804               	movf	4,w
   547  0391  067D               	xorwf	125,w
   548  0392  1903               	btfsc	3,2
   549  0393  3400               	retlw	0
   550  0394  0AFF               	incf	127,f
   551  0395  1903               	btfsc	3,2
   552  0396  0AFE               	incf	126,f
   553  0397  2B8B               	goto	init_ram0
   554                           
   555                           	psect	cstackCOMMON
   556  0071                     __pcstackCOMMON:	
   557  0071                     ?_RTC_Init:	
   558  0071                     ?_RTC_GetDateTime:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0071                     ?_ui8Hex2DECDisplay:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0071                     ?_ui8Dec2HexDisplay:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0071                     ?_RTC_SetDateTime:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0071                     ?_DELAY_us:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0071                     ?_i2c_WaitForIdle:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0071                     ??_i2c_WaitForIdle:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0071                     ?_i2c_Ack:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0071                     ??_i2c_Ack:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0071                     ?_i2c_NoAck:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0071                     ??_i2c_NoAck:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0071                     ?_I2C_Init:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0071                     ??_I2C_Init:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0071                     ?_I2C_Start:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0071                     ??_I2C_Start:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0071                     ?_I2C_Stop:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0071                     ??_I2C_Stop:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0071                     ?_I2C_Write:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0071                     ??_I2C_Write:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0071                     ?_I2C_Read:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0071                     ??_I2C_Read:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0071                     ?___bmul:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0071                     ?_main:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0071                     ?___awdiv:	
   628                           ; 2 bytes @ 0x0
   629                           
   630  0071                     ?___awmod:	
   631                           ; 2 bytes @ 0x0
   632                           
   633  0071                     I2C_Write@v_i2cData_u8:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0071                     ___bmul@multiplicand:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0071                     DELAY_us@us_count:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0071                     ___awdiv@divisor:	
   643                           ; 2 bytes @ 0x0
   644                           
   645  0071                     ___awmod@divisor:	
   646                           ; 2 bytes @ 0x0
   647                           
   648                           
   649                           ; 2 bytes @ 0x0
   650  0071                     	ds	1
   651  0072                     ??_RTC_Init:	
   652  0072                     ??_RTC_SetDateTime:	
   653                           ; 1 bytes @ 0x1
   654                           
   655  0072                     ??___bmul:	
   656                           ; 1 bytes @ 0x1
   657                           
   658  0072                     I2C_Read@v_ackOption_u8:	
   659                           ; 1 bytes @ 0x1
   660                           
   661  0072                     RTC_SetDateTime@rtc:	
   662                           ; 1 bytes @ 0x1
   663                           
   664                           
   665                           ; 1 bytes @ 0x1
   666  0072                     	ds	1
   667  0073                     ?_DELAY_ms:	
   668  0073                     ??_DELAY_us:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0073                     I2C_Read@v_i2cData_u8:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0073                     ___bmul@product:	
   675                           ; 1 bytes @ 0x2
   676                           
   677  0073                     DELAY_ms@ms_count:	
   678                           ; 1 bytes @ 0x2
   679                           
   680  0073                     ___awdiv@dividend:	
   681                           ; 2 bytes @ 0x2
   682                           
   683  0073                     ___awmod@dividend:	
   684                           ; 2 bytes @ 0x2
   685                           
   686                           
   687                           ; 2 bytes @ 0x2
   688  0073                     	ds	1
   689  0074                     ??_RTC_GetDateTime:	
   690  0074                     ___bmul@multiplier:	
   691                           ; 1 bytes @ 0x3
   692                           
   693                           
   694                           ; 1 bytes @ 0x3
   695  0074                     	ds	1
   696  0075                     ??_DELAY_ms:	
   697  0075                     ??_ui8Hex2DECDisplay:	
   698                           ; 1 bytes @ 0x4
   699                           
   700  0075                     ??___awdiv:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0075                     ??___awmod:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0075                     RTC_GetDateTime@rtc:	
   707                           ; 1 bytes @ 0x4
   708                           
   709                           
   710                           ; 1 bytes @ 0x4
   711  0075                     	ds	1
   712  0076                     ___awdiv@counter:	
   713  0076                     ___awmod@counter:	
   714                           ; 1 bytes @ 0x5
   715                           
   716                           
   717                           ; 1 bytes @ 0x5
   718  0076                     	ds	1
   719  0077                     ui8Hex2DECDisplay@ui8Temp:	
   720  0077                     ___awdiv@sign:	
   721                           ; 1 bytes @ 0x6
   722                           
   723  0077                     ___awmod@sign:	
   724                           ; 1 bytes @ 0x6
   725                           
   726                           
   727                           ; 1 bytes @ 0x6
   728  0077                     	ds	1
   729  0078                     ui8Hex2DECDisplay@ui8Input:	
   730  0078                     ___awdiv@quotient:	
   731                           ; 1 bytes @ 0x7
   732                           
   733                           
   734                           ; 2 bytes @ 0x7
   735  0078                     	ds	2
   736  007A                     ?_vDisplay:	
   737  007A                     ??_ui8Dec2HexDisplay:	
   738                           ; 1 bytes @ 0x9
   739                           
   740  007A                     vDisplay@ui8Second:	
   741                           ; 1 bytes @ 0x9
   742                           
   743                           
   744                           ; 1 bytes @ 0x9
   745  007A                     	ds	1
   746  007B                     vDisplay@ui8Thrd:	
   747                           
   748                           ; 1 bytes @ 0xA
   749  007B                     	ds	1
   750  007C                     vDisplay@ui8Fourth:	
   751                           
   752                           ; 1 bytes @ 0xB
   753  007C                     	ds	1
   754  007D                     ??_vDisplay:	
   755                           
   756                           ; 1 bytes @ 0xC
   757  007D                     	ds	1
   758                           
   759                           	psect	cstackBANK0
   760  0020                     __pcstackBANK0:	
   761  0020                     vDisplay@ui8First:	
   762  0020                     ui8Dec2HexDisplay@ui8Output:	
   763                           ; 1 bytes @ 0x0
   764                           
   765                           
   766                           ; 1 bytes @ 0x0
   767  0020                     	ds	1
   768  0021                     ui8Dec2HexDisplay@ui8Input:	
   769                           
   770                           ; 1 bytes @ 0x1
   771  0021                     	ds	1
   772  0022                     ui8Dec2HexDisplay@ui8Temp:	
   773                           
   774                           ; 1 bytes @ 0x2
   775  0022                     	ds	1
   776  0023                     ??_main:	
   777                           
   778                           ; 1 bytes @ 0x3
   779  0023                     	ds	6
   780  0029                     main@ucYear:	
   781                           
   782                           ; 1 bytes @ 0x9
   783  0029                     	ds	1
   784  002A                     main@ucMin:	
   785                           
   786                           ; 1 bytes @ 0xA
   787  002A                     	ds	1
   788  002B                     main@ucHours:	
   789                           
   790                           ; 1 bytes @ 0xB
   791  002B                     	ds	1
   792  002C                     main@ucDate:	
   793                           
   794                           ; 1 bytes @ 0xC
   795  002C                     	ds	1
   796  002D                     main@ucMonth:	
   797                           
   798                           ; 1 bytes @ 0xD
   799  002D                     	ds	1
   800  002E                     main@ucSec:	
   801                           
   802                           ; 1 bytes @ 0xE
   803  002E                     	ds	1
   804  002F                     main@ui8SetValue:	
   805                           
   806                           ; 1 bytes @ 0xF
   807  002F                     	ds	1
   808  0030                     main@ui8SetMode:	
   809                           
   810                           ; 1 bytes @ 0x10
   811  0030                     	ds	1
   812  0031                     main@rtc:	
   813                           
   814                           ; 7 bytes @ 0x11
   815  0031                     	ds	7
   816                           
   817                           	psect	maintext
   818  061D                     __pmaintext:	
   819 ;;
   820 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   821 ;;
   822 ;; *************** function _main *****************
   823 ;; Defined at:
   824 ;;		line 23 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  rtc             7   17[BANK0 ] struct .
   829 ;;  ui8SetMode      1   16[BANK0 ] unsigned char 
   830 ;;  ui8SetValue     1   15[BANK0 ] unsigned char 
   831 ;;  ucSec           1   14[BANK0 ] unsigned char 
   832 ;;  ucMonth         1   13[BANK0 ] unsigned char 
   833 ;;  ucDate          1   12[BANK0 ] unsigned char 
   834 ;;  ucHours         1   11[BANK0 ] unsigned char 
   835 ;;  ucMin           1   10[BANK0 ] unsigned char 
   836 ;;  ucYear          1    9[BANK0 ] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  2   42[None  ] int 
   839 ;; Registers used:
   840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : B00/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         0       0       0       0       0
   847 ;;      Locals:         0      15       0       0       0
   848 ;;      Temps:          0       6       0       0       0
   849 ;;      Totals:         0      21       0       0       0
   850 ;;Total ram usage:       21 bytes
   851 ;; Hardware stack levels required when called:    3
   852 ;; This function calls:
   853 ;;		_DELAY_ms
   854 ;;		_RTC_GetDateTime
   855 ;;		_RTC_Init
   856 ;;		_RTC_SetDateTime
   857 ;;		___awdiv
   858 ;;		___awmod
   859 ;;		_ui8Dec2HexDisplay
   860 ;;		_ui8Hex2DECDisplay
   861 ;;		_vDisplay
   862 ;; This function is called by:
   863 ;;		Startup code after reset
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _main
   869  061D                     _main:	
   870                           
   871                           ;main.c: 27: TRISCbits.TRISC5 = 0;
   872                           
   873                           ;incstack = 0
   874                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   875  061D  1683               	bsf	3,5	;RP0=1, select bank1
   876  061E  1303               	bcf	3,6	;RP1=0, select bank1
   877  061F  1287               	bcf	7,5	;volatile
   878                           
   879                           ;main.c: 28: TRISCbits.TRISC6 = 0;
   880  0620  1307               	bcf	7,6	;volatile
   881                           
   882                           ;main.c: 29: TRISCbits.TRISC7 = 0;
   883  0621  1387               	bcf	7,7	;volatile
   884                           
   885                           ;main.c: 31: TRISD = 0x00;
   886  0622  0188               	clrf	8	;volatile
   887                           
   888                           ;main.c: 33: TRISBbits.TRISB0 = 1;
   889  0623  1406               	bsf	6,0	;volatile
   890                           
   891                           ;main.c: 34: TRISBbits.TRISB1 = 1;
   892  0624  1486               	bsf	6,1	;volatile
   893                           
   894                           ;main.c: 35: TRISBbits.TRISB2 = 0;
   895  0625  1106               	bcf	6,2	;volatile
   896                           
   897                           ;main.c: 36: TRISBbits.TRISB3 = 0;
   898  0626  1186               	bcf	6,3	;volatile
   899                           
   900                           ;main.c: 37: TRISBbits.TRISB4 = 0;
   901  0627  1206               	bcf	6,4	;volatile
   902                           
   903                           ;main.c: 38: TRISBbits.TRISB5 = 0;
   904  0628  1286               	bcf	6,5	;volatile
   905                           
   906                           ;main.c: 40: TRISBbits.TRISB7 = 0;
   907  0629  1386               	bcf	6,7	;volatile
   908                           
   909                           ;main.c: 42: TRISEbits.TRISE0 = 0;
   910  062A  1009               	bcf	9,0	;volatile
   911                           
   912                           ;main.c: 44: WPUBbits.WPUB0 = 1;
   913  062B  1415               	bsf	21,0	;volatile
   914                           
   915                           ;main.c: 45: WPUBbits.WPUB1 = 1;
   916  062C  1495               	bsf	21,1	;volatile
   917                           
   918                           ;main.c: 46: WPUBbits.WPUB2 = 1;
   919  062D  1515               	bsf	21,2	;volatile
   920                           
   921                           ;main.c: 47: OPTION_REGbits.nRBPU = 0;
   922  062E  1381               	bcf	1,7	;volatile
   923                           
   924                           ;main.c: 49: ANSELHbits.ANS12 = 0;
   925  062F  1683               	bsf	3,5	;RP0=1, select bank3
   926  0630  1703               	bsf	3,6	;RP1=1, select bank3
   927  0631  1209               	bcf	9,4	;volatile
   928                           
   929                           ;main.c: 50: ANSELHbits.ANS10 = 0;
   930  0632  1109               	bcf	9,2	;volatile
   931                           
   932                           ;main.c: 51: ANSELHbits.ANS13 = 0;
   933  0633  1289               	bcf	9,5	;volatile
   934                           
   935                           ;main.c: 52: ANSELHbits.ANS11 = 0;
   936  0634  1189               	bcf	9,3	;volatile
   937                           
   938                           ;main.c: 53: ANSELHbits.ANS9 = 0;
   939  0635  1089               	bcf	9,1	;volatile
   940                           
   941                           ;main.c: 54: ANSELHbits.ANS8 = 0;
   942  0636  1009               	bcf	9,0	;volatile
   943                           
   944                           ;main.c: 55: ANSELbits.ANS5 = 0;
   945  0637  1288               	bcf	8,5	;volatile
   946                           
   947                           ;main.c: 57: IOCB = 0x00;
   948  0638  1683               	bsf	3,5	;RP0=1, select bank1
   949  0639  1303               	bcf	3,6	;RP1=0, select bank1
   950  063A  0196               	clrf	22	;volatile
   951                           
   952                           ;main.c: 59: PORTB = 0xFF;
   953  063B  30FF               	movlw	255
   954  063C  1283               	bcf	3,5	;RP0=0, select bank0
   955  063D  1303               	bcf	3,6	;RP1=0, select bank0
   956  063E  0086               	movwf	6	;volatile
   957                           
   958                           ;main.c: 62: uint8_t ucSec;
   959                           ;main.c: 63: uint8_t ucMin;
   960                           ;main.c: 64: uint8_t ucHours;
   961                           ;main.c: 65: uint8_t ucDate;
   962                           ;main.c: 66: uint8_t ucMonth;
   963                           ;main.c: 67: uint8_t ucYear;
   964                           ;main.c: 69: uint8_t ui8SetMode;
   965                           ;main.c: 70: uint8_t ui8SetValue;
   966                           ;main.c: 72: rtc_t rtc;
   967                           ;main.c: 76: ucSec = 0;
   968  063F  01AE               	clrf	main@ucSec
   969                           
   970                           ;main.c: 77: ucMin = 0;
   971  0640  01AA               	clrf	main@ucMin
   972                           
   973                           ;main.c: 78: ucHours = 0;
   974  0641  01AB               	clrf	main@ucHours
   975                           
   976                           ;main.c: 79: ucDate = 0;
   977  0642  01AC               	clrf	main@ucDate
   978                           
   979                           ;main.c: 80: ucMonth = 0;
   980  0643  01AD               	clrf	main@ucMonth
   981                           
   982                           ;main.c: 81: ucYear = 0;
   983  0644  01A9               	clrf	main@ucYear
   984                           
   985                           ;main.c: 83: ui8SetMode = 0;
   986  0645  01B0               	clrf	main@ui8SetMode
   987                           
   988                           ;main.c: 84: ui8SetValue = 0;
   989  0646  01AF               	clrf	main@ui8SetValue
   990                           
   991                           ;main.c: 87: RTC_Init();
   992  0647  120A  118A  23E2  120A  118A  	fcall	_RTC_Init
   993                           
   994                           ;main.c: 91: rtc.hour = 0x00;
   995  064C  1283               	bcf	3,5	;RP0=0, select bank0
   996  064D  1303               	bcf	3,6	;RP1=0, select bank0
   997  064E  01B3               	clrf	main@rtc+2
   998                           
   999                           ;main.c: 92: rtc.min = 0x08;
  1000  064F  3008               	movlw	8
  1001  0650  00A3               	movwf	??_main
  1002  0651  0823               	movf	??_main,w
  1003  0652  00B2               	movwf	main@rtc+1
  1004                           
  1005                           ;main.c: 93: rtc.sec = 0x30;
  1006  0653  3030               	movlw	48
  1007  0654  00A3               	movwf	??_main
  1008  0655  0823               	movf	??_main,w
  1009  0656  00B1               	movwf	main@rtc
  1010                           
  1011                           ;main.c: 95: rtc.date = 0x31;
  1012  0657  3031               	movlw	49
  1013  0658  00A3               	movwf	??_main
  1014  0659  0823               	movf	??_main,w
  1015  065A  00B5               	movwf	main@rtc+4
  1016                           
  1017                           ;main.c: 96: rtc.month = 0x12;
  1018  065B  3012               	movlw	18
  1019  065C  00A3               	movwf	??_main
  1020  065D  0823               	movf	??_main,w
  1021  065E  00B6               	movwf	main@rtc+5
  1022                           
  1023                           ;main.c: 97: rtc.year = 0x16;
  1024  065F  3016               	movlw	22
  1025  0660  00A3               	movwf	??_main
  1026  0661  0823               	movf	??_main,w
  1027  0662  00B7               	movwf	main@rtc+6
  1028                           
  1029                           ;main.c: 98: rtc.weekDay = 5;
  1030  0663  3005               	movlw	5
  1031  0664  00A3               	movwf	??_main
  1032  0665  0823               	movf	??_main,w
  1033  0666  00B4               	movwf	main@rtc+3
  1034                           
  1035                           ;main.c: 151: switch(ui8SetMode)
  1036  0667  2F4C               	goto	l1541
  1037  0668                     l1583:	
  1038                           ;main.c: 152: {
  1039                           ;main.c: 153: case 1:
  1040                           
  1041                           
  1042                           ;main.c: 154: {
  1043                           ;main.c: 155: if(ui8SetValue == 1)
  1044  0668  032F               	decf	main@ui8SetValue,w
  1045  0669  1D03               	btfss	3,2
  1046  066A  2E74               	goto	l1593
  1047                           
  1048                           ;main.c: 156: {
  1049                           ;main.c: 157: ui8SetValue = 0;
  1050  066B  01AF               	clrf	main@ui8SetValue
  1051                           
  1052                           ;main.c: 158: ucSec = 56;
  1053  066C  3038               	movlw	56
  1054  066D  00A3               	movwf	??_main
  1055  066E  0823               	movf	??_main,w
  1056  066F  00AE               	movwf	main@ucSec
  1057                           
  1058                           ;main.c: 159: if(ucSec >= 60)
  1059  0670  303C               	movlw	60
  1060  0671  022E               	subwf	main@ucSec,w
  1061  0672  1803               	btfsc	3,0
  1062                           
  1063                           ;main.c: 160: {
  1064                           ;main.c: 161: ucSec = 0;
  1065  0673  01AE               	clrf	main@ucSec
  1066  0674                     l1593:	
  1067                           
  1068                           ;main.c: 162: }
  1069                           ;main.c: 163: }
  1070                           ;main.c: 166: vDisplay(0x6E,0,ucSec/10, ucSec%10);
  1071  0674  01FA               	clrf	vDisplay@ui8Second
  1072  0675  300A               	movlw	10
  1073  0676  00F1               	movwf	___awdiv@divisor
  1074  0677  3000               	movlw	0
  1075  0678  00F2               	movwf	___awdiv@divisor+1
  1076  0679  082E               	movf	main@ucSec,w
  1077  067A  00A3               	movwf	??_main
  1078  067B  01A4               	clrf	??_main+1
  1079  067C  0823               	movf	??_main,w
  1080  067D  00F3               	movwf	___awdiv@dividend
  1081  067E  0824               	movf	??_main+1,w
  1082  067F  00F4               	movwf	___awdiv@dividend+1
  1083  0680  120A  118A  2487  120A  118A  	fcall	___awdiv
  1084  0685  0871               	movf	?___awdiv,w
  1085  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0688  00A5               	movwf	??_main+2
  1088  0689  0825               	movf	??_main+2,w
  1089  068A  00FB               	movwf	vDisplay@ui8Thrd
  1090  068B  300A               	movlw	10
  1091  068C  00F1               	movwf	___awmod@divisor
  1092  068D  3000               	movlw	0
  1093  068E  00F2               	movwf	___awmod@divisor+1
  1094  068F  082E               	movf	main@ucSec,w
  1095  0690  00A6               	movwf	??_main+3
  1096  0691  01A7               	clrf	??_main+4
  1097  0692  0826               	movf	??_main+3,w
  1098  0693  00F3               	movwf	___awmod@dividend
  1099  0694  0827               	movf	??_main+4,w
  1100  0695  00F4               	movwf	___awmod@dividend+1
  1101  0696  120A  118A  243C  120A  118A  	fcall	___awmod
  1102  069B  0871               	movf	?___awmod,w
  1103  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1104  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1105  069E  00A8               	movwf	??_main+5
  1106  069F  0828               	movf	??_main+5,w
  1107  06A0  00FC               	movwf	vDisplay@ui8Fourth
  1108  06A1  306E               	movlw	110
  1109  06A2  2F47               	goto	L1
  1110  06A3                     l1595:	
  1111                           ;main.c: 169: }
  1112                           ;main.c: 170: case 2:
  1113                           
  1114                           ;main.c: 168: break;
  1115                           
  1116                           
  1117                           ;main.c: 171: {
  1118                           ;main.c: 172: if(ui8SetValue == 1)
  1119  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  1120  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  1121  06A5  032F               	decf	main@ui8SetValue,w
  1122  06A6  1D03               	btfss	3,2
  1123  06A7  2F3C               	goto	L5
  1124                           
  1125                           ;main.c: 173: {
  1126                           ;main.c: 174: ui8SetValue = 0;
  1127  06A8  01AF               	clrf	main@ui8SetValue
  1128                           
  1129                           ;main.c: 175: ucMin++;
  1130  06A9  3001               	movlw	1
  1131  06AA  00A3               	movwf	??_main
  1132  06AB  0823               	movf	??_main,w
  1133  06AC  07AA               	addwf	main@ucMin,f
  1134                           
  1135                           ;main.c: 176: if(ucMin >=60)
  1136  06AD  303C               	movlw	60
  1137  06AE  022A               	subwf	main@ucMin,w
  1138  06AF  1803               	btfsc	3,0
  1139                           
  1140                           ;main.c: 177: {
  1141                           ;main.c: 178: ucMin = 0;
  1142  06B0  01AA               	clrf	main@ucMin
  1143  06B1  2F3C               	goto	L5
  1144  06B2                     l1607:	
  1145                           ;main.c: 183: }
  1146                           ;main.c: 184: case 3:
  1147                           
  1148                           ;main.c: 182: break;
  1149                           
  1150                           ;main.c: 179: }
  1151                           ;main.c: 180: }
  1152                           ;main.c: 181: vDisplay(0,0,0,ui8SetMode);
  1153                           
  1154                           
  1155                           ;main.c: 185: {
  1156                           ;main.c: 186: if(ui8SetValue == 1)
  1157  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1158  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1159  06B4  032F               	decf	main@ui8SetValue,w
  1160  06B5  1D03               	btfss	3,2
  1161  06B6  2F3C               	goto	L5
  1162                           
  1163                           ;main.c: 187: {
  1164                           ;main.c: 188: ui8SetValue = 0;
  1165  06B7  01AF               	clrf	main@ui8SetValue
  1166                           
  1167                           ;main.c: 189: ucHours++;
  1168  06B8  3001               	movlw	1
  1169  06B9  00A3               	movwf	??_main
  1170  06BA  0823               	movf	??_main,w
  1171  06BB  07AB               	addwf	main@ucHours,f
  1172                           
  1173                           ;main.c: 190: if(ucHours >=13)
  1174  06BC  300D               	movlw	13
  1175  06BD  022B               	subwf	main@ucHours,w
  1176  06BE  1803               	btfsc	3,0
  1177                           
  1178                           ;main.c: 191: {
  1179                           ;main.c: 192: ucHours = 0;
  1180  06BF  01AB               	clrf	main@ucHours
  1181  06C0  2F3C               	goto	L5
  1182  06C1                     l1619:	
  1183                           ;main.c: 197: }
  1184                           ;main.c: 198: case 4:
  1185                           
  1186                           ;main.c: 196: break;
  1187                           
  1188                           ;main.c: 193: }
  1189                           ;main.c: 194: }
  1190                           ;main.c: 195: vDisplay(0,0,0,ui8SetMode);
  1191                           
  1192                           
  1193                           ;main.c: 199: {
  1194                           ;main.c: 200: if(ui8SetValue == 1)
  1195  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1196  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1197  06C3  032F               	decf	main@ui8SetValue,w
  1198  06C4  1D03               	btfss	3,2
  1199  06C5  2F3C               	goto	L5
  1200                           
  1201                           ;main.c: 201: {
  1202                           ;main.c: 202: ui8SetValue = 0;
  1203  06C6  01AF               	clrf	main@ui8SetValue
  1204                           
  1205                           ;main.c: 203: ucDate++;
  1206  06C7  3001               	movlw	1
  1207  06C8  00A3               	movwf	??_main
  1208  06C9  0823               	movf	??_main,w
  1209  06CA  07AC               	addwf	main@ucDate,f
  1210                           
  1211                           ;main.c: 204: if(ucDate >=31)
  1212  06CB  301F               	movlw	31
  1213  06CC  022C               	subwf	main@ucDate,w
  1214  06CD  1803               	btfsc	3,0
  1215                           
  1216                           ;main.c: 205: {
  1217                           ;main.c: 206: ucDate = 0;
  1218  06CE  01AC               	clrf	main@ucDate
  1219  06CF  2F3C               	goto	L5
  1220  06D0                     l1631:	
  1221                           ;main.c: 211: }
  1222                           ;main.c: 212: case 5:
  1223                           
  1224                           ;main.c: 210: break;
  1225                           
  1226                           ;main.c: 207: }
  1227                           ;main.c: 208: }
  1228                           ;main.c: 209: vDisplay(0,0,0,ui8SetMode);
  1229                           
  1230                           
  1231                           ;main.c: 213: {
  1232                           ;main.c: 214: if(ui8SetValue == 1)
  1233  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1234  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1235  06D2  032F               	decf	main@ui8SetValue,w
  1236  06D3  1D03               	btfss	3,2
  1237  06D4  2F3C               	goto	L5
  1238                           
  1239                           ;main.c: 215: {
  1240                           ;main.c: 216: ui8SetValue = 0;
  1241  06D5  01AF               	clrf	main@ui8SetValue
  1242                           
  1243                           ;main.c: 217: ucMonth++;
  1244  06D6  3001               	movlw	1
  1245  06D7  00A3               	movwf	??_main
  1246  06D8  0823               	movf	??_main,w
  1247  06D9  07AD               	addwf	main@ucMonth,f
  1248                           
  1249                           ;main.c: 218: if(ucMonth >=13)
  1250  06DA  300D               	movlw	13
  1251  06DB  022D               	subwf	main@ucMonth,w
  1252  06DC  1803               	btfsc	3,0
  1253                           
  1254                           ;main.c: 219: {
  1255                           ;main.c: 220: ucMonth = 0;
  1256  06DD  01AD               	clrf	main@ucMonth
  1257  06DE  2F3C               	goto	L5
  1258  06DF                     l1643:	
  1259                           ;main.c: 225: }
  1260                           ;main.c: 226: case 6:
  1261                           
  1262                           ;main.c: 224: break;
  1263                           
  1264                           ;main.c: 221: }
  1265                           ;main.c: 222: }
  1266                           ;main.c: 223: vDisplay(0,0,0,ui8SetMode);
  1267                           
  1268                           
  1269                           ;main.c: 227: {
  1270                           ;main.c: 228: if(ui8SetValue == 1)
  1271  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1272  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1273  06E1  032F               	decf	main@ui8SetValue,w
  1274  06E2  1D03               	btfss	3,2
  1275  06E3  2F3C               	goto	L5
  1276                           
  1277                           ;main.c: 229: {
  1278                           ;main.c: 230: ui8SetValue = 0;
  1279  06E4  01AF               	clrf	main@ui8SetValue
  1280                           
  1281                           ;main.c: 231: ucYear++;
  1282  06E5  3001               	movlw	1
  1283  06E6  00A3               	movwf	??_main
  1284  06E7  0823               	movf	??_main,w
  1285  06E8  07A9               	addwf	main@ucYear,f
  1286                           
  1287                           ;main.c: 233: {
  1288                           ;main.c: 234: ucYear = 0;
  1289                           
  1290                           ;main.c: 232: if(ucYear >= 2099)
  1291  06E9  2F3C               	goto	L5
  1292  06EA                     l1653:	
  1293                           ;main.c: 239: }
  1294                           ;main.c: 240: case 7:
  1295                           
  1296                           ;main.c: 238: break;
  1297                           
  1298                           ;main.c: 235: }
  1299                           ;main.c: 236: }
  1300                           ;main.c: 237: vDisplay(0,0,0,ui8SetMode);
  1301                           
  1302                           
  1303                           ;main.c: 241: {
  1304                           ;main.c: 242: vDisplay(0,0,0,ui8SetMode);
  1305  06EA  01FA               	clrf	vDisplay@ui8Second
  1306  06EB  01FB               	clrf	vDisplay@ui8Thrd
  1307  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1308  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1309  06EE  2F3E               	goto	L4
  1310  06EF                     l1655:	
  1311                           ;main.c: 245: }
  1312                           ;main.c: 246: case 8:
  1313                           
  1314                           ;main.c: 243: break;
  1315                           
  1316                           
  1317                           ;main.c: 247: {
  1318                           ;main.c: 249: rtc.sec = ui8Dec2HexDisplay(ucSec);
  1319  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1320  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1321  06F1  082E               	movf	main@ucSec,w
  1322  06F2  120A  118A  2402  120A  118A  	fcall	_ui8Dec2HexDisplay
  1323  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1324  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1325  06F9  00A3               	movwf	??_main
  1326  06FA  0823               	movf	??_main,w
  1327  06FB  00B1               	movwf	main@rtc
  1328                           
  1329                           ;main.c: 250: rtc.min = ui8Dec2HexDisplay(ucMin);
  1330  06FC  082A               	movf	main@ucMin,w
  1331  06FD  120A  118A  2402  120A  118A  	fcall	_ui8Dec2HexDisplay
  1332  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0704  00A3               	movwf	??_main
  1335  0705  0823               	movf	??_main,w
  1336  0706  00B2               	movwf	main@rtc+1
  1337                           
  1338                           ;main.c: 251: rtc.hour = ui8Dec2HexDisplay(ucHours);
  1339  0707  082B               	movf	main@ucHours,w
  1340  0708  120A  118A  2402  120A  118A  	fcall	_ui8Dec2HexDisplay
  1341  070D  1283               	bcf	3,5	;RP0=0, select bank0
  1342  070E  1303               	bcf	3,6	;RP1=0, select bank0
  1343  070F  00A3               	movwf	??_main
  1344  0710  0823               	movf	??_main,w
  1345  0711  00B3               	movwf	main@rtc+2
  1346                           
  1347                           ;main.c: 252: rtc.date = ui8Dec2HexDisplay(ucDate);
  1348  0712  082C               	movf	main@ucDate,w
  1349  0713  120A  118A  2402  120A  118A  	fcall	_ui8Dec2HexDisplay
  1350  0718  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0719  1303               	bcf	3,6	;RP1=0, select bank0
  1352  071A  00A3               	movwf	??_main
  1353  071B  0823               	movf	??_main,w
  1354  071C  00B5               	movwf	main@rtc+4
  1355                           
  1356                           ;main.c: 253: rtc.month = ui8Dec2HexDisplay(ucMonth);
  1357  071D  082D               	movf	main@ucMonth,w
  1358  071E  120A  118A  2402  120A  118A  	fcall	_ui8Dec2HexDisplay
  1359  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0725  00A3               	movwf	??_main
  1362  0726  0823               	movf	??_main,w
  1363  0727  00B6               	movwf	main@rtc+5
  1364                           
  1365                           ;main.c: 254: rtc.year = ui8Dec2HexDisplay(ucYear);
  1366  0728  0829               	movf	main@ucYear,w
  1367  0729  120A  118A  2402  120A  118A  	fcall	_ui8Dec2HexDisplay
  1368  072E  1283               	bcf	3,5	;RP0=0, select bank0
  1369  072F  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0730  00A3               	movwf	??_main
  1371  0731  0823               	movf	??_main,w
  1372  0732  00B7               	movwf	main@rtc+6
  1373                           
  1374                           ;main.c: 257: RTC_SetDateTime(&rtc);
  1375  0733  3031               	movlw	(low (main@rtc| 0))& (0+255)
  1376  0734  120A  118A  24E0  120A  118A  	fcall	_RTC_SetDateTime
  1377                           
  1378                           ;main.c: 258: ui8SetMode = 0;
  1379  0739  1283               	bcf	3,5	;RP0=0, select bank0
  1380  073A  1303               	bcf	3,6	;RP1=0, select bank0
  1381  073B  01B0               	clrf	main@ui8SetMode
  1382  073C                     L5:	
  1383                           
  1384                           ;main.c: 259: vDisplay(0,0,0,ui8SetMode);
  1385  073C  01FA               	clrf	vDisplay@ui8Second
  1386  073D  01FB               	clrf	vDisplay@ui8Thrd
  1387  073E                     L4:	
  1388  073E  0830               	movf	main@ui8SetMode,w
  1389  073F  00A3               	movwf	??_main
  1390  0740  0823               	movf	??_main,w
  1391  0741  00FC               	movwf	vDisplay@ui8Fourth
  1392  0742  2F46               	goto	L2
  1393  0743                     l1663:	
  1394                           ;main.c: 261: }
  1395                           ;main.c: 262: default:
  1396                           
  1397                           ;main.c: 260: break;
  1398                           
  1399                           
  1400                           ;main.c: 263: {
  1401                           ;main.c: 264: vDisplay(0,0,0,0);
  1402  0743  01FA               	clrf	vDisplay@ui8Second
  1403  0744  01FB               	clrf	vDisplay@ui8Thrd
  1404  0745  01FC               	clrf	vDisplay@ui8Fourth
  1405  0746                     L2:	
  1406  0746  3000               	movlw	0
  1407  0747                     L1:	
  1408  0747  120A  118A  253A  120A  118A  	fcall	_vDisplay
  1409  074C                     l1541:	
  1410                           ;main.c: 106: while(1)
  1411                           
  1412                           ;main.c: 266: }
  1413                           ;main.c: 267: }
  1414                           
  1415                           ;main.c: 265: break;
  1416                           
  1417                           
  1418                           ;main.c: 107: {
  1419                           ;main.c: 110: if(PORTBbits.RB1 == 0)
  1420  074C  1283               	bcf	3,5	;RP0=0, select bank0
  1421  074D  1303               	bcf	3,6	;RP1=0, select bank0
  1422  074E  1886               	btfsc	6,1	;volatile
  1423  074F  2F61               	goto	l1549
  1424                           
  1425                           ;main.c: 111: {
  1426                           ;main.c: 112: DELAY_ms(100);
  1427  0750  3064               	movlw	100
  1428  0751  00F3               	movwf	DELAY_ms@ms_count
  1429  0752  3000               	movlw	0
  1430  0753  00F4               	movwf	DELAY_ms@ms_count+1
  1431  0754  120A  118A  2398  120A  118A  	fcall	_DELAY_ms
  1432                           
  1433                           ;main.c: 113: if(PORTBbits.RB1 == 0)
  1434  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1435  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1436  075B  1886               	btfsc	6,1	;volatile
  1437  075C  2F61               	goto	l1549
  1438                           
  1439                           ;main.c: 114: {
  1440                           ;main.c: 115: ui8SetMode++;
  1441  075D  3001               	movlw	1
  1442  075E  00A3               	movwf	??_main
  1443  075F  0823               	movf	??_main,w
  1444  0760  07B0               	addwf	main@ui8SetMode,f
  1445  0761                     l1549:	
  1446                           
  1447                           ;main.c: 116: }
  1448                           ;main.c: 118: }
  1449                           ;main.c: 120: if(PORTBbits.RB1 == 0)
  1450  0761  1886               	btfsc	6,1	;volatile
  1451  0762  2F78               	goto	l1561
  1452                           
  1453                           ;main.c: 121: {
  1454                           ;main.c: 122: DELAY_ms(100);
  1455  0763  3064               	movlw	100
  1456  0764  00F3               	movwf	DELAY_ms@ms_count
  1457  0765  3000               	movlw	0
  1458  0766  00F4               	movwf	DELAY_ms@ms_count+1
  1459  0767  120A  118A  2398  120A  118A  	fcall	_DELAY_ms
  1460                           
  1461                           ;main.c: 123: if(PORTBbits.RB1 == 0)
  1462  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1463  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1464  076E  1886               	btfsc	6,1	;volatile
  1465  076F  2F78               	goto	l1561
  1466                           
  1467                           ;main.c: 124: {
  1468                           ;main.c: 125: ui8SetMode++;
  1469  0770  3001               	movlw	1
  1470  0771  00A3               	movwf	??_main
  1471  0772  0823               	movf	??_main,w
  1472  0773  07B0               	addwf	main@ui8SetMode,f
  1473                           
  1474                           ;main.c: 126: if(ui8SetMode > 8)
  1475  0774  3009               	movlw	9
  1476  0775  0230               	subwf	main@ui8SetMode,w
  1477  0776  1803               	btfsc	3,0
  1478                           
  1479                           ;main.c: 127: {
  1480                           ;main.c: 128: ui8SetMode = 0;
  1481  0777  01B0               	clrf	main@ui8SetMode
  1482  0778                     l1561:	
  1483                           
  1484                           ;main.c: 129: }
  1485                           ;main.c: 130: }
  1486                           ;main.c: 132: }
  1487                           ;main.c: 133: if(PORTBbits.RB0 == 0)
  1488  0778  1806               	btfsc	6,0	;volatile
  1489  0779  2F89               	goto	l1569
  1490                           
  1491                           ;main.c: 134: {
  1492                           ;main.c: 135: DELAY_ms(100);
  1493  077A  3064               	movlw	100
  1494  077B  00F3               	movwf	DELAY_ms@ms_count
  1495  077C  3000               	movlw	0
  1496  077D  00F4               	movwf	DELAY_ms@ms_count+1
  1497  077E  120A  118A  2398  120A  118A  	fcall	_DELAY_ms
  1498                           
  1499                           ;main.c: 136: if(PORTBbits.RB0 == 0)
  1500  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0785  1806               	btfsc	6,0	;volatile
  1503  0786  2F89               	goto	l1569
  1504                           
  1505                           ;main.c: 137: {
  1506                           ;main.c: 138: ui8SetValue = 1;
  1507  0787  01AF               	clrf	main@ui8SetValue
  1508  0788  0AAF               	incf	main@ui8SetValue,f
  1509  0789                     l1569:	
  1510                           
  1511                           ;main.c: 139: }
  1512                           ;main.c: 140: }
  1513                           ;main.c: 142: RTC_GetDateTime(&rtc);
  1514  0789  3031               	movlw	(low (main@rtc| 0))& (0+255)
  1515  078A  120A  118A  259E  120A  118A  	fcall	_RTC_GetDateTime
  1516                           
  1517                           ;main.c: 143: ucSec = ui8Hex2DECDisplay(rtc.sec);
  1518  078F  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0790  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0791  0831               	movf	main@rtc,w
  1521  0792  120A  118A  23AC  120A  118A  	fcall	_ui8Hex2DECDisplay
  1522  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0799  00A3               	movwf	??_main
  1525  079A  0823               	movf	??_main,w
  1526  079B  00AE               	movwf	main@ucSec
  1527                           
  1528                           ;main.c: 144: ucMin = ui8Hex2DECDisplay(rtc.min);
  1529  079C  0832               	movf	main@rtc+1,w
  1530  079D  120A  118A  23AC  120A  118A  	fcall	_ui8Hex2DECDisplay
  1531  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1532  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1533  07A4  00A3               	movwf	??_main
  1534  07A5  0823               	movf	??_main,w
  1535  07A6  00AA               	movwf	main@ucMin
  1536                           
  1537                           ;main.c: 145: ucHours = ui8Hex2DECDisplay(rtc.hour);
  1538  07A7  0833               	movf	main@rtc+2,w
  1539  07A8  120A  118A  23AC  120A  118A  	fcall	_ui8Hex2DECDisplay
  1540  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1541  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1542  07AF  00A3               	movwf	??_main
  1543  07B0  0823               	movf	??_main,w
  1544  07B1  00AB               	movwf	main@ucHours
  1545                           
  1546                           ;main.c: 146: ucDate = ui8Hex2DECDisplay(rtc.date);
  1547  07B2  0835               	movf	main@rtc+4,w
  1548  07B3  120A  118A  23AC  120A  118A  	fcall	_ui8Hex2DECDisplay
  1549  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1550  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1551  07BA  00A3               	movwf	??_main
  1552  07BB  0823               	movf	??_main,w
  1553  07BC  00AC               	movwf	main@ucDate
  1554                           
  1555                           ;main.c: 147: ucMonth = ui8Hex2DECDisplay(rtc.month);
  1556  07BD  0836               	movf	main@rtc+5,w
  1557  07BE  120A  118A  23AC  120A  118A  	fcall	_ui8Hex2DECDisplay
  1558  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1559  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1560  07C5  00A3               	movwf	??_main
  1561  07C6  0823               	movf	??_main,w
  1562  07C7  00AD               	movwf	main@ucMonth
  1563                           
  1564                           ;main.c: 148: ucYear = ui8Hex2DECDisplay(rtc.year);
  1565  07C8  0837               	movf	main@rtc+6,w
  1566  07C9  120A  118A  23AC  120A  118A  	fcall	_ui8Hex2DECDisplay
  1567  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1568  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1569  07D0  00A3               	movwf	??_main
  1570  07D1  0823               	movf	??_main,w
  1571  07D2  00A9               	movwf	main@ucYear
  1572  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1573  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1574  07D5  0830               	movf	main@ui8SetMode,w
  1575                           
  1576                           ; Switch size 1, requested type "space"
  1577                           ; Number of cases is 8, Range of values is 1 to 8
  1578                           ; switch strategies available:
  1579                           ; Name         Instructions Cycles
  1580                           ; simple_byte           25    13 (average)
  1581                           ; direct_byte           35    11 (fixed)
  1582                           ; jumptable            263     9 (fixed)
  1583                           ;	Chosen strategy is simple_byte
  1584  07D6  3A01               	xorlw	1	; case 1
  1585  07D7  1903               	skipnz
  1586  07D8  2E68               	goto	l1583
  1587  07D9  3A03               	xorlw	3	; case 2
  1588  07DA  1903               	skipnz
  1589  07DB  2EA3               	goto	l1595
  1590  07DC  3A01               	xorlw	1	; case 3
  1591  07DD  1903               	skipnz
  1592  07DE  2EB2               	goto	l1607
  1593  07DF  3A07               	xorlw	7	; case 4
  1594  07E0  1903               	skipnz
  1595  07E1  2EC1               	goto	l1619
  1596  07E2  3A01               	xorlw	1	; case 5
  1597  07E3  1903               	skipnz
  1598  07E4  2ED0               	goto	l1631
  1599  07E5  3A03               	xorlw	3	; case 6
  1600  07E6  1903               	skipnz
  1601  07E7  2EDF               	goto	l1643
  1602  07E8  3A01               	xorlw	1	; case 7
  1603  07E9  1903               	skipnz
  1604  07EA  2EEA               	goto	l1653
  1605  07EB  3A0F               	xorlw	15	; case 8
  1606  07EC  1903               	skipnz
  1607  07ED  2EEF               	goto	l1655
  1608  07EE  2F43               	goto	l1663
  1609  07EF  2F4C               	goto	l1541
  1610  07F0                     __end_of_main:	
  1611                           ;main.c: 268: }
  1612                           ;main.c: 270: return (0);
  1613                           ;	Return value of _main is never used
  1614                           
  1615                           
  1616                           	psect	text1
  1617  053A                     __ptext1:	
  1618 ;; *************** function _vDisplay *****************
  1619 ;; Defined at:
  1620 ;;		line 12 in file "display.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  ui8First        1    wreg     unsigned char 
  1623 ;;  ui8Second       1    9[COMMON] unsigned char 
  1624 ;;  ui8Thrd         1   10[COMMON] unsigned char 
  1625 ;;  ui8Fourth       1   11[COMMON] unsigned char 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  ui8First        1    0[BANK0 ] unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         3       0       0       0       0
  1638 ;;      Locals:         0       1       0       0       0
  1639 ;;      Temps:          1       0       0       0       0
  1640 ;;      Totals:         4       1       0       0       0
  1641 ;;Total ram usage:        5 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    2
  1644 ;; This function calls:
  1645 ;;		_DELAY_ms
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           
  1652                           ;psect for function _vDisplay
  1653  053A                     _vDisplay:	
  1654                           
  1655                           ;incstack = 0
  1656                           ; Regs used in _vDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1657                           ;vDisplay@ui8First stored from wreg
  1658  053A  1283               	bcf	3,5	;RP0=0, select bank0
  1659  053B  1303               	bcf	3,6	;RP1=0, select bank0
  1660  053C  00A0               	movwf	vDisplay@ui8First
  1661                           
  1662                           ;display.c: 14: PORTD = ucBCD_ARR[ui8Fourth];
  1663  053D  087C               	movf	vDisplay@ui8Fourth,w
  1664  053E  3E38               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1665  053F  0084               	movwf	4
  1666  0540  1383               	bcf	3,7	;select IRP bank0
  1667  0541  0800               	movf	0,w
  1668  0542  0088               	movwf	8	;volatile
  1669                           
  1670                           ;display.c: 15: PORTB |= 0x3C;
  1671  0543  303C               	movlw	60
  1672  0544  00FD               	movwf	??_vDisplay
  1673  0545  087D               	movf	??_vDisplay,w
  1674  0546  0486               	iorwf	6,f	;volatile
  1675                           
  1676                           ;display.c: 16: PORTB &= 0xDF;
  1677  0547  30DF               	movlw	223
  1678  0548  00FD               	movwf	??_vDisplay
  1679  0549  087D               	movf	??_vDisplay,w
  1680  054A  0586               	andwf	6,f	;volatile
  1681                           
  1682                           ;display.c: 17: DELAY_ms(5);
  1683  054B  3005               	movlw	5
  1684  054C  00F3               	movwf	DELAY_ms@ms_count
  1685  054D  3000               	movlw	0
  1686  054E  00F4               	movwf	DELAY_ms@ms_count+1
  1687  054F  120A  118A  2398  120A  118A  	fcall	_DELAY_ms
  1688                           
  1689                           ;display.c: 19: PORTD = ucBCD_ARR[ui8Thrd];
  1690  0554  087B               	movf	vDisplay@ui8Thrd,w
  1691  0555  3E38               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1692  0556  0084               	movwf	4
  1693  0557  1383               	bcf	3,7	;select IRP bank0
  1694  0558  0800               	movf	0,w
  1695  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1696  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1697  055B  0088               	movwf	8	;volatile
  1698                           
  1699                           ;display.c: 20: PORTB |= 0x3C;
  1700  055C  303C               	movlw	60
  1701  055D  00FD               	movwf	??_vDisplay
  1702  055E  087D               	movf	??_vDisplay,w
  1703  055F  0486               	iorwf	6,f	;volatile
  1704                           
  1705                           ;display.c: 21: PORTB &= 0xEF;
  1706  0560  30EF               	movlw	239
  1707  0561  00FD               	movwf	??_vDisplay
  1708  0562  087D               	movf	??_vDisplay,w
  1709  0563  0586               	andwf	6,f	;volatile
  1710                           
  1711                           ;display.c: 22: DELAY_ms(5);
  1712  0564  3005               	movlw	5
  1713  0565  00F3               	movwf	DELAY_ms@ms_count
  1714  0566  3000               	movlw	0
  1715  0567  00F4               	movwf	DELAY_ms@ms_count+1
  1716  0568  120A  118A  2398  120A  118A  	fcall	_DELAY_ms
  1717                           
  1718                           ;display.c: 24: PORTD = ucBCD_ARR[ui8Second];
  1719  056D  087A               	movf	vDisplay@ui8Second,w
  1720  056E  3E38               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1721  056F  0084               	movwf	4
  1722  0570  1383               	bcf	3,7	;select IRP bank0
  1723  0571  0800               	movf	0,w
  1724  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0573  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0574  0088               	movwf	8	;volatile
  1727                           
  1728                           ;display.c: 25: PORTB |= 0x3C;
  1729  0575  303C               	movlw	60
  1730  0576  00FD               	movwf	??_vDisplay
  1731  0577  087D               	movf	??_vDisplay,w
  1732  0578  0486               	iorwf	6,f	;volatile
  1733                           
  1734                           ;display.c: 26: PORTB &= 0xF7;
  1735  0579  30F7               	movlw	247
  1736  057A  00FD               	movwf	??_vDisplay
  1737  057B  087D               	movf	??_vDisplay,w
  1738  057C  0586               	andwf	6,f	;volatile
  1739                           
  1740                           ;display.c: 27: DELAY_ms(5);
  1741  057D  3005               	movlw	5
  1742  057E  00F3               	movwf	DELAY_ms@ms_count
  1743  057F  3000               	movlw	0
  1744  0580  00F4               	movwf	DELAY_ms@ms_count+1
  1745  0581  120A  118A  2398  120A  118A  	fcall	_DELAY_ms
  1746                           
  1747                           ;display.c: 29: PORTD = ucBCD_ARR[ui8First];
  1748  0586  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0587  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0588  0820               	movf	vDisplay@ui8First,w
  1751  0589  3E38               	addlw	(low (_ucBCD_ARR| 0))& (0+255)
  1752  058A  0084               	movwf	4
  1753  058B  1383               	bcf	3,7	;select IRP bank0
  1754  058C  0800               	movf	0,w
  1755  058D  0088               	movwf	8	;volatile
  1756                           
  1757                           ;display.c: 30: PORTB |= 0x3C;
  1758  058E  303C               	movlw	60
  1759  058F  00FD               	movwf	??_vDisplay
  1760  0590  087D               	movf	??_vDisplay,w
  1761  0591  0486               	iorwf	6,f	;volatile
  1762                           
  1763                           ;display.c: 31: PORTB &= 0xFB;
  1764  0592  30FB               	movlw	251
  1765  0593  00FD               	movwf	??_vDisplay
  1766  0594  087D               	movf	??_vDisplay,w
  1767  0595  0586               	andwf	6,f	;volatile
  1768                           
  1769                           ;display.c: 32: DELAY_ms(5);
  1770  0596  3005               	movlw	5
  1771  0597  00F3               	movwf	DELAY_ms@ms_count
  1772  0598  3000               	movlw	0
  1773  0599  00F4               	movwf	DELAY_ms@ms_count+1
  1774  059A  120A  118A  2398   	fcall	_DELAY_ms
  1775  059D  0008               	return
  1776  059E                     __end_of_vDisplay:	
  1777                           
  1778                           	psect	text2
  1779  0398                     __ptext2:	
  1780 ;; *************** function _DELAY_ms *****************
  1781 ;; Defined at:
  1782 ;;		line 75 in file "delay.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  ms_count        2    2[COMMON] unsigned int 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0, pclath, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1796 ;;      Params:         2       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0
  1799 ;;      Totals:         2       0       0       0       0
  1800 ;;Total ram usage:        2 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    1
  1803 ;; This function calls:
  1804 ;;		_DELAY_us
  1805 ;; This function is called by:
  1806 ;;		_main
  1807 ;;		_vDisplay
  1808 ;;		_DELAY_sec
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _DELAY_ms
  1814  0398                     _DELAY_ms:	
  1815  0398                     l1233:	
  1816                           ;delay.c: 77: while (ms_count != 0)
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
  1820                           
  1821  0398  0873               	movf	DELAY_ms@ms_count,w
  1822  0399  0474               	iorwf	DELAY_ms@ms_count+1,w
  1823  039A  1903               	btfsc	3,2
  1824  039B  0008               	return
  1825                           
  1826                           ;delay.c: 78: {
  1827                           ;delay.c: 79: DELAY_us(300u);
  1828  039C  302C               	movlw	44
  1829  039D  00F1               	movwf	DELAY_us@us_count
  1830  039E  3001               	movlw	1
  1831  039F  00F2               	movwf	DELAY_us@us_count+1
  1832  03A0  120A  118A  2350  120A  118A  	fcall	_DELAY_us
  1833                           
  1834                           ;delay.c: 80: ms_count--;
  1835  03A5  3001               	movlw	1
  1836  03A6  02F3               	subwf	DELAY_ms@ms_count,f
  1837  03A7  3000               	movlw	0
  1838  03A8  1C03               	skipc
  1839  03A9  03F4               	decf	DELAY_ms@ms_count+1,f
  1840  03AA  02F4               	subwf	DELAY_ms@ms_count+1,f
  1841  03AB  2B98               	goto	l1233
  1842  03AC                     __end_of_DELAY_ms:	
  1843                           
  1844                           	psect	text3
  1845  0350                     __ptext3:	
  1846 ;; *************** function _DELAY_us *****************
  1847 ;; Defined at:
  1848 ;;		line 56 in file "delay.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  us_count        2    0[COMMON] unsigned int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1862 ;;      Params:         2       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0
  1865 ;;      Totals:         2       0       0       0       0
  1866 ;;Total ram usage:        2 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_DELAY_ms
  1872 ;;		_vSendData595
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function _DELAY_us
  1878  0350                     _DELAY_us:	
  1879  0350                     l1211:	
  1880                           ;delay.c: 58: while (us_count != 0)
  1881                           
  1882                           ;incstack = 0
  1883                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
  1884                           
  1885  0350  0871               	movf	DELAY_us@us_count,w
  1886  0351  0472               	iorwf	DELAY_us@us_count+1,w
  1887  0352  1903               	btfsc	3,2
  1888  0353  0008               	return
  1889                           
  1890                           ;delay.c: 59: {
  1891                           ;delay.c: 60: us_count--;
  1892  0354  3001               	movlw	1
  1893  0355  02F1               	subwf	DELAY_us@us_count,f
  1894  0356  3000               	movlw	0
  1895  0357  1C03               	skipc
  1896  0358  03F2               	decf	DELAY_us@us_count+1,f
  1897  0359  02F2               	subwf	DELAY_us@us_count+1,f
  1898  035A  2B50               	goto	l1211
  1899  035B                     __end_of_DELAY_us:	
  1900                           
  1901                           	psect	text4
  1902  03AC                     __ptext4:	
  1903 ;; *************** function _ui8Hex2DECDisplay *****************
  1904 ;; Defined at:
  1905 ;;		line 50 in file "display.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  ui8Input        1    wreg     unsigned char 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  ui8Input        1    7[COMMON] unsigned char 
  1910 ;;  ui8Temp         1    6[COMMON] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      unsigned char 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         0       0       0       0       0
  1921 ;;      Locals:         2       0       0       0       0
  1922 ;;      Temps:          2       0       0       0       0
  1923 ;;      Totals:         4       0       0       0       0
  1924 ;;Total ram usage:        4 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    1
  1927 ;; This function calls:
  1928 ;;		___bmul
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _ui8Hex2DECDisplay
  1936  03AC                     _ui8Hex2DECDisplay:	
  1937                           
  1938                           ;incstack = 0
  1939                           ; Regs used in _ui8Hex2DECDisplay: [wreg+status,2+status,0+pclath+cstack]
  1940                           ;ui8Hex2DECDisplay@ui8Input stored from wreg
  1941  03AC  00F8               	movwf	ui8Hex2DECDisplay@ui8Input
  1942                           
  1943                           ;display.c: 53: uint8_t ui8Temp;
  1944                           ;display.c: 54: ui8Temp = ui8Input & 0xF0;
  1945  03AD  0878               	movf	ui8Hex2DECDisplay@ui8Input,w
  1946  03AE  39F0               	andlw	240
  1947  03AF  00F5               	movwf	??_ui8Hex2DECDisplay
  1948  03B0  0875               	movf	??_ui8Hex2DECDisplay,w
  1949  03B1  00F7               	movwf	ui8Hex2DECDisplay@ui8Temp
  1950                           
  1951                           ;display.c: 55: ui8Temp >>= 4;
  1952  03B2  0EF7               	swapf	ui8Hex2DECDisplay@ui8Temp,f
  1953  03B3  300F               	movlw	15
  1954  03B4  05F7               	andwf	ui8Hex2DECDisplay@ui8Temp,f
  1955                           
  1956                           ;display.c: 56: return ((ui8Temp * 10) + (ui8Input & 0x0F));
  1957  03B5  300F               	movlw	15
  1958  03B6  0578               	andwf	ui8Hex2DECDisplay@ui8Input,w
  1959  03B7  00F5               	movwf	??_ui8Hex2DECDisplay
  1960  03B8  300A               	movlw	10
  1961  03B9  00F6               	movwf	??_ui8Hex2DECDisplay+1
  1962  03BA  0876               	movf	??_ui8Hex2DECDisplay+1,w
  1963  03BB  00F1               	movwf	___bmul@multiplicand
  1964  03BC  0877               	movf	ui8Hex2DECDisplay@ui8Temp,w
  1965  03BD  120A  118A  2376   	fcall	___bmul
  1966  03C0  0775               	addwf	??_ui8Hex2DECDisplay,w
  1967  03C1  0008               	return
  1968  03C2                     __end_of_ui8Hex2DECDisplay:	
  1969                           
  1970                           	psect	text5
  1971  0376                     __ptext5:	
  1972 ;; *************** function ___bmul *****************
  1973 ;; Defined at:
  1974 ;;		line 4 in file "/usr/microchip/xc8/v1.43/sources/common/Umul8.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  multiplier      1    wreg     unsigned char 
  1977 ;;  multiplicand    1    0[COMMON] unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  multiplier      1    3[COMMON] unsigned char 
  1980 ;;  product         1    2[COMMON] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      unsigned char 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1990 ;;      Params:         1       0       0       0       0
  1991 ;;      Locals:         2       0       0       0       0
  1992 ;;      Temps:          1       0       0       0       0
  1993 ;;      Totals:         4       0       0       0       0
  1994 ;;Total ram usage:        4 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_ui8Hex2DECDisplay
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           
  2004                           ;psect for function ___bmul
  2005  0376                     ___bmul:	
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2009                           ;___bmul@multiplier stored from wreg
  2010  0376  00F4               	movwf	___bmul@multiplier
  2011  0377  01F3               	clrf	___bmul@product
  2012  0378                     l1267:	
  2013  0378  1C74               	btfss	___bmul@multiplier,0
  2014  0379  2B7E               	goto	l1271
  2015  037A  0871               	movf	___bmul@multiplicand,w
  2016  037B  00F2               	movwf	??___bmul
  2017  037C  0872               	movf	??___bmul,w
  2018  037D  07F3               	addwf	___bmul@product,f
  2019  037E                     l1271:	
  2020  037E  1003               	clrc
  2021  037F  0DF1               	rlf	___bmul@multiplicand,f
  2022  0380  1003               	clrc
  2023  0381  0CF4               	rrf	___bmul@multiplier,f
  2024  0382  0874               	movf	___bmul@multiplier,w
  2025  0383  1D03               	btfss	3,2
  2026  0384  2B78               	goto	l1267
  2027  0385  0873               	movf	___bmul@product,w
  2028  0386  0008               	return
  2029  0387                     __end_of___bmul:	
  2030                           
  2031                           	psect	text6
  2032  0402                     __ptext6:	
  2033 ;; *************** function _ui8Dec2HexDisplay *****************
  2034 ;; Defined at:
  2035 ;;		line 35 in file "display.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  ui8Input        1    wreg     unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  ui8Input        1    1[BANK0 ] unsigned char 
  2040 ;;  ui8Temp         1    2[BANK0 ] unsigned char 
  2041 ;;  ui8Output       1    0[BANK0 ] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      unsigned char 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         0       0       0       0       0
  2052 ;;      Locals:         0       3       0       0       0
  2053 ;;      Temps:          3       0       0       0       0
  2054 ;;      Totals:         3       3       0       0       0
  2055 ;;Total ram usage:        6 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    1
  2058 ;; This function calls:
  2059 ;;		___awdiv
  2060 ;;		___awmod
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           
  2067                           ;psect for function _ui8Dec2HexDisplay
  2068  0402                     _ui8Dec2HexDisplay:	
  2069                           
  2070                           ;incstack = 0
  2071                           ; Regs used in _ui8Dec2HexDisplay: [wreg+status,2+status,0+pclath+cstack]
  2072                           ;ui8Dec2HexDisplay@ui8Input stored from wreg
  2073  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0404  00A1               	movwf	ui8Dec2HexDisplay@ui8Input
  2076                           
  2077                           ;display.c: 37: uint8_t ui8Output;
  2078                           ;display.c: 38: uint8_t ui8Temp;
  2079                           ;display.c: 40: ui8Temp = (uint8_t)ui8Input/10;
  2080  0405  300A               	movlw	10
  2081  0406  00F1               	movwf	___awdiv@divisor
  2082  0407  3000               	movlw	0
  2083  0408  00F2               	movwf	___awdiv@divisor+1
  2084  0409  0821               	movf	ui8Dec2HexDisplay@ui8Input,w
  2085  040A  00FA               	movwf	??_ui8Dec2HexDisplay
  2086  040B  01FB               	clrf	??_ui8Dec2HexDisplay+1
  2087  040C  087A               	movf	??_ui8Dec2HexDisplay,w
  2088  040D  00F3               	movwf	___awdiv@dividend
  2089  040E  087B               	movf	??_ui8Dec2HexDisplay+1,w
  2090  040F  00F4               	movwf	___awdiv@dividend+1
  2091  0410  120A  118A  2487  120A  118A  	fcall	___awdiv
  2092  0415  0871               	movf	?___awdiv,w
  2093  0416  00FC               	movwf	??_ui8Dec2HexDisplay+2
  2094  0417  087C               	movf	??_ui8Dec2HexDisplay+2,w
  2095  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2097  041A  00A2               	movwf	ui8Dec2HexDisplay@ui8Temp
  2098                           
  2099                           ;display.c: 41: ui8Output = ui8Temp;
  2100  041B  0822               	movf	ui8Dec2HexDisplay@ui8Temp,w
  2101  041C  00FA               	movwf	??_ui8Dec2HexDisplay
  2102  041D  087A               	movf	??_ui8Dec2HexDisplay,w
  2103  041E  00A0               	movwf	ui8Dec2HexDisplay@ui8Output
  2104                           
  2105                           ;display.c: 42: ui8Output <<= 4;
  2106  041F  0EA0               	swapf	ui8Dec2HexDisplay@ui8Output,f
  2107  0420  30F0               	movlw	240
  2108  0421  05A0               	andwf	ui8Dec2HexDisplay@ui8Output,f
  2109                           
  2110                           ;display.c: 44: ui8Temp = (uint8_t)ui8Input%10;
  2111  0422  300A               	movlw	10
  2112  0423  00F1               	movwf	___awmod@divisor
  2113  0424  3000               	movlw	0
  2114  0425  00F2               	movwf	___awmod@divisor+1
  2115  0426  0821               	movf	ui8Dec2HexDisplay@ui8Input,w
  2116  0427  00FA               	movwf	??_ui8Dec2HexDisplay
  2117  0428  01FB               	clrf	??_ui8Dec2HexDisplay+1
  2118  0429  087A               	movf	??_ui8Dec2HexDisplay,w
  2119  042A  00F3               	movwf	___awmod@dividend
  2120  042B  087B               	movf	??_ui8Dec2HexDisplay+1,w
  2121  042C  00F4               	movwf	___awmod@dividend+1
  2122  042D  120A  118A  243C   	fcall	___awmod
  2123  0430  0871               	movf	?___awmod,w
  2124  0431  00FC               	movwf	??_ui8Dec2HexDisplay+2
  2125  0432  087C               	movf	??_ui8Dec2HexDisplay+2,w
  2126  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0435  00A2               	movwf	ui8Dec2HexDisplay@ui8Temp
  2129                           
  2130                           ;display.c: 45: ui8Output |= ui8Temp;
  2131  0436  0822               	movf	ui8Dec2HexDisplay@ui8Temp,w
  2132  0437  00FA               	movwf	??_ui8Dec2HexDisplay
  2133  0438  087A               	movf	??_ui8Dec2HexDisplay,w
  2134  0439  04A0               	iorwf	ui8Dec2HexDisplay@ui8Output,f
  2135                           
  2136                           ;display.c: 47: return ui8Output;
  2137  043A  0820               	movf	ui8Dec2HexDisplay@ui8Output,w
  2138  043B  0008               	return
  2139  043C                     __end_of_ui8Dec2HexDisplay:	
  2140                           
  2141                           	psect	text7
  2142  043C                     __ptext7:	
  2143 ;; *************** function ___awmod *****************
  2144 ;; Defined at:
  2145 ;;		line 6 in file "/usr/microchip/xc8/v1.43/sources/common/awmod.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  divisor         2    0[COMMON] int 
  2148 ;;  dividend        2    2[COMMON] int 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  sign            1    6[COMMON] unsigned char 
  2151 ;;  counter         1    5[COMMON] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2    0[COMMON] int 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2161 ;;      Params:         4       0       0       0       0
  2162 ;;      Locals:         2       0       0       0       0
  2163 ;;      Temps:          1       0       0       0       0
  2164 ;;      Totals:         7       0       0       0       0
  2165 ;;Total ram usage:        7 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;;		_ui8Dec2HexDisplay
  2172 ;;		_Binary2BCD
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function ___awmod
  2178  043C                     ___awmod:	
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2182  043C  01F7               	clrf	___awmod@sign
  2183  043D  1FF4               	btfss	___awmod@dividend+1,7
  2184  043E  2C46               	goto	l1331
  2185  043F  09F3               	comf	___awmod@dividend,f
  2186  0440  09F4               	comf	___awmod@dividend+1,f
  2187  0441  0AF3               	incf	___awmod@dividend,f
  2188  0442  1903               	skipnz
  2189  0443  0AF4               	incf	___awmod@dividend+1,f
  2190  0444  01F7               	clrf	___awmod@sign
  2191  0445  0AF7               	incf	___awmod@sign,f
  2192  0446                     l1331:	
  2193  0446  1FF2               	btfss	___awmod@divisor+1,7
  2194  0447  2C4D               	goto	l1335
  2195  0448  09F1               	comf	___awmod@divisor,f
  2196  0449  09F2               	comf	___awmod@divisor+1,f
  2197  044A  0AF1               	incf	___awmod@divisor,f
  2198  044B  1903               	skipnz
  2199  044C  0AF2               	incf	___awmod@divisor+1,f
  2200  044D                     l1335:	
  2201  044D  0871               	movf	___awmod@divisor,w
  2202  044E  0472               	iorwf	___awmod@divisor+1,w
  2203  044F  1903               	btfsc	3,2
  2204  0450  2C7A               	goto	l1353
  2205  0451  01F6               	clrf	___awmod@counter
  2206  0452  0AF6               	incf	___awmod@counter,f
  2207  0453                     l1343:	
  2208  0453  1BF2               	btfsc	___awmod@divisor+1,7
  2209  0454  2C61               	goto	l1345
  2210  0455  3001               	movlw	1
  2211  0456                     u895:	
  2212  0456  1003               	clrc
  2213  0457  0DF1               	rlf	___awmod@divisor,f
  2214  0458  0DF2               	rlf	___awmod@divisor+1,f
  2215  0459  3EFF               	addlw	-1
  2216  045A  1D03               	skipz
  2217  045B  2C56               	goto	u895
  2218  045C  3001               	movlw	1
  2219  045D  00F5               	movwf	??___awmod
  2220  045E  0875               	movf	??___awmod,w
  2221  045F  07F6               	addwf	___awmod@counter,f
  2222  0460  2C53               	goto	l1343
  2223  0461                     l1345:	
  2224  0461  0872               	movf	___awmod@divisor+1,w
  2225  0462  0274               	subwf	___awmod@dividend+1,w
  2226  0463  1D03               	skipz
  2227  0464  2C67               	goto	u915
  2228  0465  0871               	movf	___awmod@divisor,w
  2229  0466  0273               	subwf	___awmod@dividend,w
  2230  0467                     u915:	
  2231  0467  1C03               	skipc
  2232  0468  2C6F               	goto	l1349
  2233  0469  0871               	movf	___awmod@divisor,w
  2234  046A  02F3               	subwf	___awmod@dividend,f
  2235  046B  0872               	movf	___awmod@divisor+1,w
  2236  046C  1C03               	skipc
  2237  046D  03F4               	decf	___awmod@dividend+1,f
  2238  046E  02F4               	subwf	___awmod@dividend+1,f
  2239  046F                     l1349:	
  2240  046F  3001               	movlw	1
  2241  0470                     u925:	
  2242  0470  1003               	clrc
  2243  0471  0CF2               	rrf	___awmod@divisor+1,f
  2244  0472  0CF1               	rrf	___awmod@divisor,f
  2245  0473  3EFF               	addlw	-1
  2246  0474  1D03               	skipz
  2247  0475  2C70               	goto	u925
  2248  0476  3001               	movlw	1
  2249  0477  02F6               	subwf	___awmod@counter,f
  2250  0478  1D03               	btfss	3,2
  2251  0479  2C61               	goto	l1345
  2252  047A                     l1353:	
  2253  047A  0877               	movf	___awmod@sign,w
  2254  047B  1903               	btfsc	3,2
  2255  047C  2C82               	goto	l1357
  2256  047D  09F3               	comf	___awmod@dividend,f
  2257  047E  09F4               	comf	___awmod@dividend+1,f
  2258  047F  0AF3               	incf	___awmod@dividend,f
  2259  0480  1903               	skipnz
  2260  0481  0AF4               	incf	___awmod@dividend+1,f
  2261  0482                     l1357:	
  2262  0482  0874               	movf	___awmod@dividend+1,w
  2263  0483  00F2               	movwf	?___awmod+1
  2264  0484  0873               	movf	___awmod@dividend,w
  2265  0485  00F1               	movwf	?___awmod
  2266  0486  0008               	return
  2267  0487                     __end_of___awmod:	
  2268                           
  2269                           	psect	text8
  2270  0487                     __ptext8:	
  2271 ;; *************** function ___awdiv *****************
  2272 ;; Defined at:
  2273 ;;		line 6 in file "/usr/microchip/xc8/v1.43/sources/common/awdiv.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  divisor         2    0[COMMON] int 
  2276 ;;  dividend        2    2[COMMON] int 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  quotient        2    7[COMMON] int 
  2279 ;;  sign            1    6[COMMON] unsigned char 
  2280 ;;  counter         1    5[COMMON] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  2    0[COMMON] int 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2290 ;;      Params:         4       0       0       0       0
  2291 ;;      Locals:         4       0       0       0       0
  2292 ;;      Temps:          1       0       0       0       0
  2293 ;;      Totals:         9       0       0       0       0
  2294 ;;Total ram usage:        9 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;;		_ui8Dec2HexDisplay
  2301 ;;		_Binary2BCD
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function ___awdiv
  2307  0487                     ___awdiv:	
  2308                           
  2309                           ;incstack = 0
  2310                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2311  0487  01F7               	clrf	___awdiv@sign
  2312  0488  1FF2               	btfss	___awdiv@divisor+1,7
  2313  0489  2C91               	goto	l1287
  2314  048A  09F1               	comf	___awdiv@divisor,f
  2315  048B  09F2               	comf	___awdiv@divisor+1,f
  2316  048C  0AF1               	incf	___awdiv@divisor,f
  2317  048D  1903               	skipnz
  2318  048E  0AF2               	incf	___awdiv@divisor+1,f
  2319  048F  01F7               	clrf	___awdiv@sign
  2320  0490  0AF7               	incf	___awdiv@sign,f
  2321  0491                     l1287:	
  2322  0491  1FF4               	btfss	___awdiv@dividend+1,7
  2323  0492  2C9C               	goto	l1293
  2324  0493  09F3               	comf	___awdiv@dividend,f
  2325  0494  09F4               	comf	___awdiv@dividend+1,f
  2326  0495  0AF3               	incf	___awdiv@dividend,f
  2327  0496  1903               	skipnz
  2328  0497  0AF4               	incf	___awdiv@dividend+1,f
  2329  0498  3001               	movlw	1
  2330  0499  00F5               	movwf	??___awdiv
  2331  049A  0875               	movf	??___awdiv,w
  2332  049B  06F7               	xorwf	___awdiv@sign,f
  2333  049C                     l1293:	
  2334  049C  01F8               	clrf	___awdiv@quotient
  2335  049D  01F9               	clrf	___awdiv@quotient+1
  2336  049E  0871               	movf	___awdiv@divisor,w
  2337  049F  0472               	iorwf	___awdiv@divisor+1,w
  2338  04A0  1903               	btfsc	3,2
  2339  04A1  2CD3               	goto	l1315
  2340  04A2  01F6               	clrf	___awdiv@counter
  2341  04A3  0AF6               	incf	___awdiv@counter,f
  2342  04A4                     l1303:	
  2343  04A4  1BF2               	btfsc	___awdiv@divisor+1,7
  2344  04A5  2CB2               	goto	l1305
  2345  04A6  3001               	movlw	1
  2346  04A7                     u795:	
  2347  04A7  1003               	clrc
  2348  04A8  0DF1               	rlf	___awdiv@divisor,f
  2349  04A9  0DF2               	rlf	___awdiv@divisor+1,f
  2350  04AA  3EFF               	addlw	-1
  2351  04AB  1D03               	skipz
  2352  04AC  2CA7               	goto	u795
  2353  04AD  3001               	movlw	1
  2354  04AE  00F5               	movwf	??___awdiv
  2355  04AF  0875               	movf	??___awdiv,w
  2356  04B0  07F6               	addwf	___awdiv@counter,f
  2357  04B1  2CA4               	goto	l1303
  2358  04B2                     l1305:	
  2359  04B2  3001               	movlw	1
  2360  04B3                     u815:	
  2361  04B3  1003               	clrc
  2362  04B4  0DF8               	rlf	___awdiv@quotient,f
  2363  04B5  0DF9               	rlf	___awdiv@quotient+1,f
  2364  04B6  3EFF               	addlw	-1
  2365  04B7  1D03               	skipz
  2366  04B8  2CB3               	goto	u815
  2367  04B9  0872               	movf	___awdiv@divisor+1,w
  2368  04BA  0274               	subwf	___awdiv@dividend+1,w
  2369  04BB  1D03               	skipz
  2370  04BC  2CBF               	goto	u825
  2371  04BD  0871               	movf	___awdiv@divisor,w
  2372  04BE  0273               	subwf	___awdiv@dividend,w
  2373  04BF                     u825:	
  2374  04BF  1C03               	skipc
  2375  04C0  2CC8               	goto	l1311
  2376  04C1  0871               	movf	___awdiv@divisor,w
  2377  04C2  02F3               	subwf	___awdiv@dividend,f
  2378  04C3  0872               	movf	___awdiv@divisor+1,w
  2379  04C4  1C03               	skipc
  2380  04C5  03F4               	decf	___awdiv@dividend+1,f
  2381  04C6  02F4               	subwf	___awdiv@dividend+1,f
  2382  04C7  1478               	bsf	___awdiv@quotient,0
  2383  04C8                     l1311:	
  2384  04C8  3001               	movlw	1
  2385  04C9                     u835:	
  2386  04C9  1003               	clrc
  2387  04CA  0CF2               	rrf	___awdiv@divisor+1,f
  2388  04CB  0CF1               	rrf	___awdiv@divisor,f
  2389  04CC  3EFF               	addlw	-1
  2390  04CD  1D03               	skipz
  2391  04CE  2CC9               	goto	u835
  2392  04CF  3001               	movlw	1
  2393  04D0  02F6               	subwf	___awdiv@counter,f
  2394  04D1  1D03               	btfss	3,2
  2395  04D2  2CB2               	goto	l1305
  2396  04D3                     l1315:	
  2397  04D3  0877               	movf	___awdiv@sign,w
  2398  04D4  1903               	btfsc	3,2
  2399  04D5  2CDB               	goto	l1319
  2400  04D6  09F8               	comf	___awdiv@quotient,f
  2401  04D7  09F9               	comf	___awdiv@quotient+1,f
  2402  04D8  0AF8               	incf	___awdiv@quotient,f
  2403  04D9  1903               	skipnz
  2404  04DA  0AF9               	incf	___awdiv@quotient+1,f
  2405  04DB                     l1319:	
  2406  04DB  0879               	movf	___awdiv@quotient+1,w
  2407  04DC  00F2               	movwf	?___awdiv+1
  2408  04DD  0878               	movf	___awdiv@quotient,w
  2409  04DE  00F1               	movwf	?___awdiv
  2410  04DF  0008               	return
  2411  04E0                     __end_of___awdiv:	
  2412                           
  2413                           	psect	text9
  2414  04E0                     __ptext9:	
  2415 ;; *************** function _RTC_SetDateTime *****************
  2416 ;; Defined at:
  2417 ;;		line 95 in file "rtc.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  rtc             1    wreg     PTR struct .
  2420 ;;		 -> main@rtc(7), 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  rtc             1    1[COMMON] PTR struct .
  2423 ;;		 -> main@rtc(7), 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         0       0       0       0       0
  2434 ;;      Locals:         1       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0
  2436 ;;      Totals:         1       0       0       0       0
  2437 ;;Total ram usage:        1 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    2
  2440 ;; This function calls:
  2441 ;;		_I2C_Start
  2442 ;;		_I2C_Stop
  2443 ;;		_I2C_Write
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _RTC_SetDateTime
  2451  04E0                     _RTC_SetDateTime:	
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in _RTC_SetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2455                           ;RTC_SetDateTime@rtc stored from wreg
  2456  04E0  00F2               	movwf	RTC_SetDateTime@rtc
  2457                           
  2458                           ;rtc.c: 97: I2C_Start();
  2459  04E1  120A  118A  2321  120A  118A  	fcall	_I2C_Start
  2460                           
  2461                           ;rtc.c: 99: I2C_Write(0xD0u);
  2462  04E6  30D0               	movlw	208
  2463  04E7  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2464                           
  2465                           ;rtc.c: 100: I2C_Write(0x00u);
  2466  04EC  3000               	movlw	0
  2467  04ED  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2468                           
  2469                           ;rtc.c: 102: I2C_Write(rtc->sec);
  2470  04F2  0872               	movf	RTC_SetDateTime@rtc,w
  2471  04F3  0084               	movwf	4
  2472  04F4  1383               	bcf	3,7	;select IRP bank0
  2473  04F5  0800               	movf	0,w
  2474  04F6  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2475                           
  2476                           ;rtc.c: 103: I2C_Write(rtc->min);
  2477  04FB  0A72               	incf	RTC_SetDateTime@rtc,w
  2478  04FC  0084               	movwf	4
  2479  04FD  1383               	bcf	3,7	;select IRP bank0
  2480  04FE  0800               	movf	0,w
  2481  04FF  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2482                           
  2483                           ;rtc.c: 104: I2C_Write(rtc->hour);
  2484  0504  0872               	movf	RTC_SetDateTime@rtc,w
  2485  0505  3E02               	addlw	2
  2486  0506  0084               	movwf	4
  2487  0507  1383               	bcf	3,7	;select IRP bank0
  2488  0508  0800               	movf	0,w
  2489  0509  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2490                           
  2491                           ;rtc.c: 105: I2C_Write(rtc->weekDay);
  2492  050E  0872               	movf	RTC_SetDateTime@rtc,w
  2493  050F  3E03               	addlw	3
  2494  0510  0084               	movwf	4
  2495  0511  1383               	bcf	3,7	;select IRP bank0
  2496  0512  0800               	movf	0,w
  2497  0513  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2498                           
  2499                           ;rtc.c: 106: I2C_Write(rtc->date);
  2500  0518  0872               	movf	RTC_SetDateTime@rtc,w
  2501  0519  3E04               	addlw	4
  2502  051A  0084               	movwf	4
  2503  051B  1383               	bcf	3,7	;select IRP bank0
  2504  051C  0800               	movf	0,w
  2505  051D  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2506                           
  2507                           ;rtc.c: 107: I2C_Write(rtc->month);
  2508  0522  0872               	movf	RTC_SetDateTime@rtc,w
  2509  0523  3E05               	addlw	5
  2510  0524  0084               	movwf	4
  2511  0525  1383               	bcf	3,7	;select IRP bank0
  2512  0526  0800               	movf	0,w
  2513  0527  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2514                           
  2515                           ;rtc.c: 108: I2C_Write(rtc->year);
  2516  052C  0872               	movf	RTC_SetDateTime@rtc,w
  2517  052D  3E06               	addlw	6
  2518  052E  0084               	movwf	4
  2519  052F  1383               	bcf	3,7	;select IRP bank0
  2520  0530  0800               	movf	0,w
  2521  0531  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2522                           
  2523                           ;rtc.c: 110: I2C_Stop();
  2524  0536  120A  118A  2327   	fcall	_I2C_Stop
  2525  0539  0008               	return
  2526  053A                     __end_of_RTC_SetDateTime:	
  2527                           
  2528                           	psect	text10
  2529  03E2                     __ptext10:	
  2530 ;; *************** function _RTC_Init *****************
  2531 ;; Defined at:
  2532 ;;		line 57 in file "rtc.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    2
  2553 ;; This function calls:
  2554 ;;		_I2C_Init
  2555 ;;		_I2C_Start
  2556 ;;		_I2C_Stop
  2557 ;;		_I2C_Write
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _RTC_Init
  2565  03E2                     _RTC_Init:	
  2566                           
  2567                           ;rtc.c: 59: I2C_Init();
  2568                           
  2569                           ;incstack = 0
  2570                           ; Regs used in _RTC_Init: [wreg+status,2+status,0+pclath+cstack]
  2571  03E2  120A  118A  2368  120A  118A  	fcall	_I2C_Init
  2572                           
  2573                           ;rtc.c: 60: I2C_Start();
  2574  03E7  120A  118A  2321  120A  118A  	fcall	_I2C_Start
  2575                           
  2576                           ;rtc.c: 62: I2C_Write(0xD0u);
  2577  03EC  30D0               	movlw	208
  2578  03ED  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2579                           
  2580                           ;rtc.c: 63: I2C_Write(0x07u);
  2581  03F2  3007               	movlw	7
  2582  03F3  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2583                           
  2584                           ;rtc.c: 65: I2C_Write(0x00);
  2585  03F8  3000               	movlw	0
  2586  03F9  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2587                           
  2588                           ;rtc.c: 67: I2C_Stop();
  2589  03FE  120A  118A  2327   	fcall	_I2C_Stop
  2590  0401  0008               	return
  2591  0402                     __end_of_RTC_Init:	
  2592                           
  2593                           	psect	text11
  2594  0368                     __ptext11:	
  2595 ;; *************** function _I2C_Init *****************
  2596 ;; Defined at:
  2597 ;;		line 87 in file "i2c.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2611 ;;      Params:         0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0
  2614 ;;      Totals:         0       0       0       0       0
  2615 ;;Total ram usage:        0 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_RTC_Init
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           
  2625                           ;psect for function _I2C_Init
  2626  0368                     _I2C_Init:	
  2627                           
  2628                           ;i2c.c: 89: TRISC3 = 0x01u;
  2629                           
  2630                           ;incstack = 0
  2631                           ; Regs used in _I2C_Init: [wreg]
  2632  0368  1683               	bsf	3,5	;RP0=1, select bank1
  2633  0369  1303               	bcf	3,6	;RP1=0, select bank1
  2634  036A  1587               	bsf	7,3	;volatile
  2635                           
  2636                           ;i2c.c: 90: TRISC4 = 0x01u;
  2637  036B  1607               	bsf	7,4	;volatile
  2638                           
  2639                           ;i2c.c: 92: SSPSTAT |= 0x80;
  2640  036C  1794               	bsf	20,7	;volatile
  2641                           
  2642                           ;i2c.c: 93: SSPCON = 0x28;
  2643  036D  3028               	movlw	40
  2644  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2645  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0370  0094               	movwf	20	;volatile
  2647                           
  2648                           ;i2c.c: 94: SSPADD = 50;
  2649  0371  3032               	movlw	50
  2650  0372  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0373  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0374  0093               	movwf	19	;volatile
  2653  0375  0008               	return
  2654  0376                     __end_of_I2C_Init:	
  2655                           
  2656                           	psect	text12
  2657  059E                     __ptext12:	
  2658 ;; *************** function _RTC_GetDateTime *****************
  2659 ;; Defined at:
  2660 ;;		line 131 in file "rtc.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  rtc             1    wreg     PTR struct .
  2663 ;;		 -> main@rtc(7), 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  rtc             1    4[COMMON] PTR struct .
  2666 ;;		 -> main@rtc(7), 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2676 ;;      Params:         0       0       0       0       0
  2677 ;;      Locals:         1       0       0       0       0
  2678 ;;      Temps:          1       0       0       0       0
  2679 ;;      Totals:         2       0       0       0       0
  2680 ;;Total ram usage:        2 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    2
  2683 ;; This function calls:
  2684 ;;		_I2C_Read
  2685 ;;		_I2C_Start
  2686 ;;		_I2C_Stop
  2687 ;;		_I2C_Write
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           
  2694                           ;psect for function _RTC_GetDateTime
  2695  059E                     _RTC_GetDateTime:	
  2696                           
  2697                           ;incstack = 0
  2698                           ; Regs used in _RTC_GetDateTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2699                           ;RTC_GetDateTime@rtc stored from wreg
  2700  059E  00F5               	movwf	RTC_GetDateTime@rtc
  2701                           
  2702                           ;rtc.c: 133: I2C_Start();
  2703  059F  120A  118A  2321  120A  118A  	fcall	_I2C_Start
  2704                           
  2705                           ;rtc.c: 135: I2C_Write(0xD0u);
  2706  05A4  30D0               	movlw	208
  2707  05A5  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2708                           
  2709                           ;rtc.c: 136: I2C_Write(0x00u);
  2710  05AA  3000               	movlw	0
  2711  05AB  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2712                           
  2713                           ;rtc.c: 138: I2C_Stop();
  2714  05B0  120A  118A  2327  120A  118A  	fcall	_I2C_Stop
  2715                           
  2716                           ;rtc.c: 140: I2C_Start();
  2717  05B5  120A  118A  2321  120A  118A  	fcall	_I2C_Start
  2718                           
  2719                           ;rtc.c: 141: I2C_Write(0xD1u);
  2720  05BA  30D1               	movlw	209
  2721  05BB  120A  118A  235B  120A  118A  	fcall	_I2C_Write
  2722                           
  2723                           ;rtc.c: 143: rtc->sec = I2C_Read(1);
  2724  05C0  3001               	movlw	1
  2725  05C1  120A  118A  23C2  120A  118A  	fcall	_I2C_Read
  2726  05C6  00F4               	movwf	??_RTC_GetDateTime
  2727  05C7  0875               	movf	RTC_GetDateTime@rtc,w
  2728  05C8  0084               	movwf	4
  2729  05C9  0874               	movf	??_RTC_GetDateTime,w
  2730  05CA  1383               	bcf	3,7	;select IRP bank0
  2731  05CB  0080               	movwf	0
  2732                           
  2733                           ;rtc.c: 144: rtc->min = I2C_Read(1);
  2734  05CC  3001               	movlw	1
  2735  05CD  120A  118A  23C2  120A  118A  	fcall	_I2C_Read
  2736  05D2  00F4               	movwf	??_RTC_GetDateTime
  2737  05D3  0A75               	incf	RTC_GetDateTime@rtc,w
  2738  05D4  0084               	movwf	4
  2739  05D5  0874               	movf	??_RTC_GetDateTime,w
  2740  05D6  1383               	bcf	3,7	;select IRP bank0
  2741  05D7  0080               	movwf	0
  2742                           
  2743                           ;rtc.c: 145: rtc->hour= I2C_Read(1);
  2744  05D8  3001               	movlw	1
  2745  05D9  120A  118A  23C2  120A  118A  	fcall	_I2C_Read
  2746  05DE  00F4               	movwf	??_RTC_GetDateTime
  2747  05DF  0875               	movf	RTC_GetDateTime@rtc,w
  2748  05E0  3E02               	addlw	2
  2749  05E1  0084               	movwf	4
  2750  05E2  0874               	movf	??_RTC_GetDateTime,w
  2751  05E3  1383               	bcf	3,7	;select IRP bank0
  2752  05E4  0080               	movwf	0
  2753                           
  2754                           ;rtc.c: 146: rtc->weekDay = I2C_Read(1);
  2755  05E5  3001               	movlw	1
  2756  05E6  120A  118A  23C2  120A  118A  	fcall	_I2C_Read
  2757  05EB  00F4               	movwf	??_RTC_GetDateTime
  2758  05EC  0875               	movf	RTC_GetDateTime@rtc,w
  2759  05ED  3E03               	addlw	3
  2760  05EE  0084               	movwf	4
  2761  05EF  0874               	movf	??_RTC_GetDateTime,w
  2762  05F0  1383               	bcf	3,7	;select IRP bank0
  2763  05F1  0080               	movwf	0
  2764                           
  2765                           ;rtc.c: 147: rtc->date= I2C_Read(1);
  2766  05F2  3001               	movlw	1
  2767  05F3  120A  118A  23C2  120A  118A  	fcall	_I2C_Read
  2768  05F8  00F4               	movwf	??_RTC_GetDateTime
  2769  05F9  0875               	movf	RTC_GetDateTime@rtc,w
  2770  05FA  3E04               	addlw	4
  2771  05FB  0084               	movwf	4
  2772  05FC  0874               	movf	??_RTC_GetDateTime,w
  2773  05FD  1383               	bcf	3,7	;select IRP bank0
  2774  05FE  0080               	movwf	0
  2775                           
  2776                           ;rtc.c: 148: rtc->month=I2C_Read(1);
  2777  05FF  3001               	movlw	1
  2778  0600  120A  118A  23C2  120A  118A  	fcall	_I2C_Read
  2779  0605  00F4               	movwf	??_RTC_GetDateTime
  2780  0606  0875               	movf	RTC_GetDateTime@rtc,w
  2781  0607  3E05               	addlw	5
  2782  0608  0084               	movwf	4
  2783  0609  0874               	movf	??_RTC_GetDateTime,w
  2784  060A  1383               	bcf	3,7	;select IRP bank0
  2785  060B  0080               	movwf	0
  2786                           
  2787                           ;rtc.c: 149: rtc->year =I2C_Read(0);
  2788  060C  3000               	movlw	0
  2789  060D  120A  118A  23C2  120A  118A  	fcall	_I2C_Read
  2790  0612  00F4               	movwf	??_RTC_GetDateTime
  2791  0613  0875               	movf	RTC_GetDateTime@rtc,w
  2792  0614  3E06               	addlw	6
  2793  0615  0084               	movwf	4
  2794  0616  0874               	movf	??_RTC_GetDateTime,w
  2795  0617  1383               	bcf	3,7	;select IRP bank0
  2796  0618  0080               	movwf	0
  2797                           
  2798                           ;rtc.c: 151: I2C_Stop();
  2799  0619  120A  118A  2327   	fcall	_I2C_Stop
  2800  061C  0008               	return
  2801  061D                     __end_of_RTC_GetDateTime:	
  2802                           
  2803                           	psect	text13
  2804  035B                     __ptext13:	
  2805 ;; *************** function _I2C_Write *****************
  2806 ;; Defined at:
  2807 ;;		line 179 in file "i2c.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  v_i2cData_u8    1    wreg     unsigned char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  v_i2cData_u8    1    0[COMMON] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, pclath, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2821 ;;      Params:         0       0       0       0       0
  2822 ;;      Locals:         1       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0
  2824 ;;      Totals:         1       0       0       0       0
  2825 ;;Total ram usage:        1 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    1
  2828 ;; This function calls:
  2829 ;;		_i2c_WaitForIdle
  2830 ;; This function is called by:
  2831 ;;		_RTC_Init
  2832 ;;		_RTC_SetDateTime
  2833 ;;		_RTC_GetDateTime
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _I2C_Write
  2839  035B                     _I2C_Write:	
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2843                           ;I2C_Write@v_i2cData_u8 stored from wreg
  2844  035B  00F1               	movwf	I2C_Write@v_i2cData_u8
  2845                           
  2846                           ;i2c.c: 183: SSPBUF = v_i2cData_u8;
  2847  035C  0871               	movf	I2C_Write@v_i2cData_u8,w
  2848  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2849  035E  1303               	bcf	3,6	;RP1=0, select bank0
  2850  035F  0093               	movwf	19	;volatile
  2851  0360                     l148:	
  2852                           ;i2c.c: 184: while(BF==1);
  2853                           
  2854  0360  1683               	bsf	3,5	;RP0=1, select bank1
  2855  0361  1303               	bcf	3,6	;RP1=0, select bank1
  2856  0362  1814               	btfsc	20,0	;volatile
  2857  0363  2B60               	goto	l148
  2858                           
  2859                           ;i2c.c: 185: i2c_WaitForIdle();
  2860  0364  120A  118A  2345   	fcall	_i2c_WaitForIdle
  2861  0367  0008               	return
  2862  0368                     __end_of_I2C_Write:	
  2863                           
  2864                           	psect	text14
  2865  0327                     __ptext14:	
  2866 ;; *************** function _I2C_Stop *****************
  2867 ;; Defined at:
  2868 ;;		line 147 in file "i2c.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		None
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2882 ;;      Params:         0       0       0       0       0
  2883 ;;      Locals:         0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0
  2885 ;;      Totals:         0       0       0       0       0
  2886 ;;Total ram usage:        0 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_RTC_Init
  2892 ;;		_RTC_SetDateTime
  2893 ;;		_RTC_GetDateTime
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function _I2C_Stop
  2899  0327                     _I2C_Stop:	
  2900                           
  2901                           ;i2c.c: 149: PEN = 1;
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in _I2C_Stop: []
  2905  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2906  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2907  0329  1511               	bsf	17,2	;volatile
  2908  032A                     l142:	
  2909                           ;i2c.c: 150: while(PEN == 1);
  2910                           
  2911  032A  1D11               	btfss	17,2	;volatile
  2912  032B  0008               	return
  2913  032C  2B2A               	goto	l142
  2914  032D                     __end_of_I2C_Stop:	
  2915                           
  2916                           	psect	text15
  2917  0321                     __ptext15:	
  2918 ;; *************** function _I2C_Start *****************
  2919 ;; Defined at:
  2920 ;;		line 118 in file "i2c.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		None
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2934 ;;      Params:         0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_RTC_Init
  2944 ;;		_RTC_SetDateTime
  2945 ;;		_RTC_GetDateTime
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _I2C_Start
  2951  0321                     _I2C_Start:	
  2952                           
  2953                           ;i2c.c: 120: SEN = 1;
  2954                           
  2955                           ;incstack = 0
  2956                           ; Regs used in _I2C_Start: []
  2957  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2958  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2959  0323  1411               	bsf	17,0	;volatile
  2960  0324                     l136:	
  2961                           ;i2c.c: 121: while(SEN == 1);
  2962                           
  2963  0324  1C11               	btfss	17,0	;volatile
  2964  0325  0008               	return
  2965  0326  2B24               	goto	l136
  2966  0327                     __end_of_I2C_Start:	
  2967                           
  2968                           	psect	text16
  2969  03C2                     __ptext16:	
  2970 ;; *************** function _I2C_Read *****************
  2971 ;; Defined at:
  2972 ;;		line 214 in file "i2c.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  v_ackOption_    1    wreg     unsigned char 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  v_ackOption_    1    1[COMMON] unsigned char 
  2977 ;;  v_i2cData_u8    1    2[COMMON] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      unsigned char 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2987 ;;      Params:         0       0       0       0       0
  2988 ;;      Locals:         2       0       0       0       0
  2989 ;;      Temps:          1       0       0       0       0
  2990 ;;      Totals:         3       0       0       0       0
  2991 ;;Total ram usage:        3 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    1
  2994 ;; This function calls:
  2995 ;;		_i2c_Ack
  2996 ;;		_i2c_NoAck
  2997 ;;		_i2c_WaitForIdle
  2998 ;; This function is called by:
  2999 ;;		_RTC_GetDateTime
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           
  3004                           ;psect for function _I2C_Read
  3005  03C2                     _I2C_Read:	
  3006                           
  3007                           ;incstack = 0
  3008                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  3009                           ;I2C_Read@v_ackOption_u8 stored from wreg
  3010  03C2  00F2               	movwf	I2C_Read@v_ackOption_u8
  3011                           
  3012                           ;i2c.c: 216: uint8_t v_i2cData_u8=0x00;
  3013  03C3  01F3               	clrf	I2C_Read@v_i2cData_u8
  3014                           
  3015                           ;i2c.c: 218: RCEN = 1;
  3016  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  3017  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  3018  03C6  1591               	bsf	17,3	;volatile
  3019  03C7                     l154:	
  3020                           ;i2c.c: 219: while(BF==0);
  3021                           
  3022  03C7  1C14               	btfss	20,0	;volatile
  3023  03C8  2BC7               	goto	l154
  3024                           
  3025                           ;i2c.c: 220: v_i2cData_u8 = SSPBUF;
  3026  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  3027  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  3028  03CB  0813               	movf	19,w	;volatile
  3029  03CC  00F1               	movwf	??_I2C_Read
  3030  03CD  0871               	movf	??_I2C_Read,w
  3031  03CE  00F3               	movwf	I2C_Read@v_i2cData_u8
  3032                           
  3033                           ;i2c.c: 221: i2c_WaitForIdle();
  3034  03CF  120A  118A  2345  120A  118A  	fcall	_i2c_WaitForIdle
  3035                           
  3036                           ;i2c.c: 223: if(v_ackOption_u8==1)
  3037  03D4  0372               	decf	I2C_Read@v_ackOption_u8,w
  3038  03D5  1D03               	btfss	3,2
  3039  03D6  2BDD               	goto	l1259
  3040                           
  3041                           ;i2c.c: 224: {
  3042                           ;i2c.c: 225: i2c_Ack();
  3043  03D7  120A  118A  232D  120A  118A  	fcall	_i2c_Ack
  3044                           
  3045                           ;i2c.c: 226: }
  3046  03DC  2BE0               	goto	l1261
  3047  03DD                     l1259:	
  3048                           
  3049                           ;i2c.c: 227: else
  3050                           ;i2c.c: 228: {
  3051                           ;i2c.c: 229: i2c_NoAck();
  3052  03DD  120A  118A  2334   	fcall	_i2c_NoAck
  3053  03E0                     l1261:	
  3054                           
  3055                           ;i2c.c: 230: }
  3056                           ;i2c.c: 232: return v_i2cData_u8;
  3057  03E0  0873               	movf	I2C_Read@v_i2cData_u8,w
  3058  03E1  0008               	return
  3059  03E2                     __end_of_I2C_Read:	
  3060                           
  3061                           	psect	text17
  3062  0345                     __ptext17:	
  3063 ;; *************** function _i2c_WaitForIdle *****************
  3064 ;; Defined at:
  3065 ;;		line 258 in file "i2c.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		None
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3079 ;;      Params:         0       0       0       0       0
  3080 ;;      Locals:         0       0       0       0       0
  3081 ;;      Temps:          0       0       0       0       0
  3082 ;;      Totals:         0       0       0       0       0
  3083 ;;Total ram usage:        0 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_I2C_Write
  3089 ;;		_I2C_Read
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           
  3094                           ;psect for function _i2c_WaitForIdle
  3095  0345                     _i2c_WaitForIdle:	
  3096  0345                     l162:	
  3097                           ;i2c.c: 260: while ( (SEN == 1) || (RSEN == 1) || (PEN == 1) || (RCEN == 1) || (R_W == 1
      +                          ) );
  3098                           
  3099                           ;incstack = 0
  3100                           ; Regs used in _i2c_WaitForIdle: []
  3101                           
  3102  0345  1683               	bsf	3,5	;RP0=1, select bank1
  3103  0346  1303               	bcf	3,6	;RP1=0, select bank1
  3104  0347  1C11               	btfss	17,0	;volatile
  3105  0348  1891               	btfsc	17,1	;volatile
  3106  0349  2B45               	goto	l162
  3107  034A  1D11               	btfss	17,2	;volatile
  3108  034B  1991               	btfsc	17,3	;volatile
  3109  034C  2B45               	goto	l162
  3110  034D  1D14               	btfss	20,2	;volatile
  3111  034E  0008               	return
  3112  034F  2B45               	goto	l162
  3113  0350                     __end_of_i2c_WaitForIdle:	
  3114                           
  3115                           	psect	text18
  3116  0334                     __ptext18:	
  3117 ;; *************** function _i2c_NoAck *****************
  3118 ;; Defined at:
  3119 ;;		line 299 in file "i2c.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		None
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3133 ;;      Params:         0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_I2C_Read
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           
  3147                           ;psect for function _i2c_NoAck
  3148  0334                     _i2c_NoAck:	
  3149                           
  3150                           ;i2c.c: 301: ACKDT = 1;
  3151                           
  3152                           ;incstack = 0
  3153                           ; Regs used in _i2c_NoAck: []
  3154  0334  1683               	bsf	3,5	;RP0=1, select bank1
  3155  0335  1303               	bcf	3,6	;RP1=0, select bank1
  3156  0336  1691               	bsf	17,5	;volatile
  3157                           
  3158                           ;i2c.c: 302: ACKEN = 1;
  3159  0337  1611               	bsf	17,4	;volatile
  3160  0338                     l174:	
  3161                           ;i2c.c: 303: while(ACKEN == 1);
  3162                           
  3163  0338  1E11               	btfss	17,4	;volatile
  3164  0339  0008               	return
  3165  033A  2B38               	goto	l174
  3166  033B                     __end_of_i2c_NoAck:	
  3167                           
  3168                           	psect	text19
  3169  032D                     __ptext19:	
  3170 ;; *************** function _i2c_Ack *****************
  3171 ;; Defined at:
  3172 ;;		line 279 in file "i2c.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		None
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_I2C_Read
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _i2c_Ack
  3201  032D                     _i2c_Ack:	
  3202                           
  3203                           ;i2c.c: 281: ACKDT = 0;
  3204                           
  3205                           ;incstack = 0
  3206                           ; Regs used in _i2c_Ack: []
  3207  032D  1683               	bsf	3,5	;RP0=1, select bank1
  3208  032E  1303               	bcf	3,6	;RP1=0, select bank1
  3209  032F  1291               	bcf	17,5	;volatile
  3210                           
  3211                           ;i2c.c: 282: ACKEN = 1;
  3212  0330  1611               	bsf	17,4	;volatile
  3213  0331                     l168:	
  3214                           ;i2c.c: 283: while(ACKEN == 1);
  3215                           
  3216  0331  1E11               	btfss	17,4	;volatile
  3217  0332  0008               	return
  3218  0333  2B31               	goto	l168
  3219  0334                     __end_of_i2c_Ack:	
  3220  007E                     btemp	set	126	;btemp
  3221  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     24      34
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    RTC_GetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK0[7]), 

    RTC_SetDateTime@rtc	PTR struct . size(1) Largest target is 7
		 -> main@rtc(BANK0[7]), 


Critical Paths under _main in COMMON

    _main->_vDisplay
    _vDisplay->___awdiv
    _DELAY_ms->_DELAY_us
    _ui8Hex2DECDisplay->___bmul
    _ui8Dec2HexDisplay->___awdiv
    _RTC_SetDateTime->_I2C_Write
    _RTC_Init->_I2C_Write
    _RTC_GetDateTime->_I2C_Read

Critical Paths under _main in BANK0

    _main->_ui8Dec2HexDisplay

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    7270
                                              3 BANK0     21    21      0
                           _DELAY_ms
                    _RTC_GetDateTime
                           _RTC_Init
                    _RTC_SetDateTime
                            ___awdiv
                            ___awmod
                  _ui8Dec2HexDisplay
                  _ui8Hex2DECDisplay
                           _vDisplay
 ---------------------------------------------------------------------------------
 (1) _vDisplay                                             5     2      3    2095
                                              9 COMMON     4     1      3
                                              0 BANK0      1     1      0
                           _DELAY_ms
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _DELAY_ms                                             2     0      2     576
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (3) _DELAY_us                                             2     0      2     129
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ui8Hex2DECDisplay                                    4     4      0     213
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     145
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ui8Dec2HexDisplay                                    6     6      0    1453
                                              9 COMMON     3     3      0
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     720
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     618
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _RTC_SetDateTime                                      1     1      0     203
                                              1 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0      22
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_GetDateTime                                      2     2      0     249
                                              3 COMMON     2     2      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      46
                                              0 COMMON     3     3      0
                            _i2c_Ack
                          _i2c_NoAck
                    _i2c_WaitForIdle
 ---------------------------------------------------------------------------------
 (3) _i2c_WaitForIdle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_NoAck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DELAY_ms
     _DELAY_us
   _RTC_GetDateTime
     _I2C_Read
       _i2c_Ack
       _i2c_NoAck
       _i2c_WaitForIdle
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_Init
     _I2C_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   _RTC_SetDateTime
     _I2C_Start
     _I2C_Stop
     _I2C_Write
       _i2c_WaitForIdle
   ___awdiv
   ___awmod
   _ui8Dec2HexDisplay
     ___awdiv
     ___awmod
   _ui8Hex2DECDisplay
     ___bmul
   _vDisplay
     _DELAY_ms
       _DELAY_us
     ___awdiv (ARG)
     ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      D       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      12        0.0%
ABS                  0      0      2F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Sep 15 14:48:16 2017

                         pc 0002              ___bmul@product 0073          __size_of_I2C_Start 0006  
               __CFG_CP$OFF 0000            ?_i2c_WaitForIdle 0071          __size_of_I2C_Write 000D  
                        _BF 04A0                ___awdiv@sign 0077                          fsr 0004  
                       l142 032A                         l136 0324                         l162 0345  
                       l154 03C7                         l148 0360                         l174 0338  
                       l168 0331                         _PEN 048A                __CFG_CPD$OFF 0000  
                       _SEN 0488                         u815 04B3                         u825 04BF  
                       u835 04C9                         u915 0467                         u925 0470  
                       u795 04A7                         u895 0456                         _R_W 04A2  
   __end_of_RTC_SetDateTime 053A                         fsr0 0004                         indf 0000  
              ___awmod@sign 0077                __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000  
                      l1211 0350                        l1311 04C8                        l1303 04A4  
                      l1305 04B2                        l1233 0398                        l1315 04D3  
                      l1331 0446                        l1261 03E0                        l1319 04DB  
                      l1343 0453                        l1335 044D                        l1271 037E  
                      l1345 0461                        l1353 047A                        l1259 03DD  
                      l1267 0378                        l1293 049C                        l1357 0482  
                      l1349 046F                        l1541 074C                        l1287 0491  
                      l1631 06D0                        l1607 06B2                        l1561 0778  
                      l1643 06DF                        l1619 06C1                        l1653 06EA  
                      l1549 0761                        l1663 0743                        l1655 06EF  
                      l1583 0668                        l1593 0674                        l1569 0789  
                      l1595 06A3                        _IOCB 0096                        _RCEN 048B  
                      _RSEN 0489                 main@ucHours 002B                 main@ucMonth 002D  
              __CFG_WRT$OFF 0000                        _main 061D            __end_of_I2C_Init 0376  
          __end_of_I2C_Read 03E2                        btemp 007E            __end_of_I2C_Stop 032D  
                      start 0001            __end_of_DELAY_ms 03AC            __end_of_DELAY_us 035B  
         ___bmul@multiplier 0074             __end_of_i2c_Ack 0334                       ?_main 0071  
                     _ACKEN 048C                       _ACKDT 048D             __end_of___awdiv 04E0  
             __CFG_WDTE$OFF 0000             __end_of___awmod 0487             ___awdiv@divisor 0071  
           ___awdiv@counter 0076                       _PORTB 0006                       _PORTD 0008  
                     _TRISD 0088            __end_of_RTC_Init 0402           __end_of_I2C_Start 0327  
         __end_of_I2C_Write 0368              __CFG_BOREN$OFF 0000                       pclath 000A  
 ui8Hex2DECDisplay@ui8Input 0078                       status 0003                       wtemp0 007E  
  ui8Dec2HexDisplay@ui8Temp 0022             __initialization 07F0                __end_of_main 07F0  
                    ??_main 0023          RTC_SetDateTime@rtc 0072            ?_RTC_SetDateTime 0071  
        __size_of_i2c_NoAck 0007            ___awdiv@dividend 0073                      _SSPADD 0093  
                    _TRISC3 043B                      _TRISC4 043C                      _SSPCON 0014  
                    _SSPBUF 0013                   ??_i2c_Ack 0071              __CFG_PWRTE$OFF 0000  
          __end_of_vDisplay 059E       I2C_Write@v_i2cData_u8 0071                      ___bmul 0376  
                 ??___awdiv 0075                   ??___awmod 0075            ___awdiv@quotient 0078  
           ___awmod@divisor 0071             ___awmod@counter 0076            DELAY_ms@ms_count 0073  
                 ?_I2C_Init 0071                   ?_I2C_Read 0071                   ?_I2C_Stop 0071  
                 ?_DELAY_ms 0073                   ?_DELAY_us 0071     __end_of__initialization 07FC  
       ___bmul@multiplicand 0071              __pcstackCOMMON 0071                __pidataBANK0 033B  
         __end_of_i2c_NoAck 033B                   ?_RTC_Init 0071                  ??_I2C_Init 0071  
            _OPTION_REGbits 0081                  ??_I2C_Read 0071  ui8Dec2HexDisplay@ui8Output 0020  
                ??_I2C_Stop 0071            vDisplay@ui8First 0020                  ??_DELAY_ms 0075  
                ??_DELAY_us 0073    __size_of_RTC_GetDateTime 007F              main@ui8SetMode 0030  
         _ui8Hex2DECDisplay 03AC                  __pmaintext 061D                     ?___bmul 0071  
        ?_ui8Hex2DECDisplay 0071                  ??_RTC_Init 0072         ??_ui8Hex2DECDisplay 0075  
         _ui8Dec2HexDisplay 0402    __size_of_i2c_WaitForIdle 000B          ?_ui8Dec2HexDisplay 0071  
                 ?_vDisplay 007A            DELAY_us@us_count 0071                     _SSPSTAT 0094  
       ??_ui8Dec2HexDisplay 007A                     _i2c_Ack 032D   __end_of_ui8Hex2DECDisplay 03C2  
                 _I2C_Start 0321                   _I2C_Write 035B             __size_of___bmul 0011  
                   ___awdiv 0487                     ___awmod 043C                   _ANSELbits 0188  
 __end_of_ui8Dec2HexDisplay 043C                     __ptext1 053A                     __ptext2 0398  
                   __ptext3 0350                     __ptext4 03AC                     __ptext5 0376  
                   __ptext6 0402                     __ptext7 043C                     __ptext8 0487  
                   __ptext9 04E0            ___awmod@dividend 0073                  ??_vDisplay 007D  
                   main@rtc 0031        end_of_initialization 07FC      I2C_Read@v_ackOption_u8 0072  
                ?_I2C_Start 0071                  ?_I2C_Write 0071           ??_RTC_GetDateTime 0074  
                 _PORTBbits 0006                   _PORTCbits 0007                   _TRISBbits 0086  
                 _TRISCbits 0087                   _TRISEbits 0089           __size_of_I2C_Init 000E  
         __size_of_I2C_Read 0020           __size_of_I2C_Stop 0006           __size_of_DELAY_ms 0014  
         __size_of_DELAY_us 000B    __size_of_RTC_SetDateTime 005A           ??_i2c_WaitForIdle 0071  
                main@ucDate 002C  __size_of_ui8Hex2DECDisplay 0016                  main@ucYear 0029  
            __end_of___bmul 0387  __size_of_ui8Dec2HexDisplay 003A                   _i2c_NoAck 0334  
         __size_of_RTC_Init 0020         start_initialization 07F0                 ??_I2C_Start 0071  
               ??_I2C_Write 0071           vDisplay@ui8Fourth 007C           vDisplay@ui8Second 007A  
                  ??___bmul 0072                  init_fetch0 0387                 __pdataBANK0 0038  
                ?_i2c_NoAck 0071                   ___latbits 0002               __pcstackBANK0 0020  
         __size_of_vDisplay 0064             main@ui8SetValue 002F             vDisplay@ui8Thrd 007B  
                 _ucBCD_ARR 0038                    ?_i2c_Ack 0071           ??_RTC_SetDateTime 0072  
                  ?___awdiv 0071                    ?___awmod 0071        I2C_Read@v_i2cData_u8 0073  
                  _I2C_Init 0368                    _I2C_Read 03C2                    _I2C_Stop 0327  
                  _DELAY_ms 0398                    _DELAY_us 0350             _RTC_GetDateTime 059E  
                  _RTC_Init 03E2                 ??_i2c_NoAck 0071             _i2c_WaitForIdle 0345  
                  _WPUBbits 0095                   main@ucMin 002A                   main@ucSec 002E  
  ui8Hex2DECDisplay@ui8Temp 0077            __size_of_i2c_Ack 0007            __size_of___awdiv 0059  
          __size_of___awmod 004B     __end_of_RTC_GetDateTime 061D                  _ANSELHbits 0189  
                  __ptext10 03E2                    __ptext11 0368                    __ptext12 059E  
                  __ptext13 035B                    __ptext14 0327                    __ptext15 0321  
                  __ptext16 03C2                    __ptext17 0345                    __ptext18 0334  
                  __ptext19 032D                    _vDisplay 053A   ui8Dec2HexDisplay@ui8Input 0021  
             __size_of_main 01D3     __end_of_i2c_WaitForIdle 0350                    init_ram0 038B  
        RTC_GetDateTime@rtc 0075             _RTC_SetDateTime 04E0            ?_RTC_GetDateTime 0071  
